from fastapi import FastAPI, Query, HTTPException
from fastapi.responses import RedirectResponse
from fastapi.middleware.cors import CORSMiddleware
from typing import List, Optional, Union
from pydantic import BaseModel, Field
from enum import Enum
import dataset
from datetime import datetime, date, timezone
import json
import os
import uuid

stage = os.environ.get('STAGE', None)
# root_path = f"/{stage}" if stage else "/"
# base_url = "https://sandbox.paapi.org"
# report_base_url = "https://sandbox.paapi.org/reports"
# connecting to a SQLite database
db = dataset.connect('sqlite:///sqlitefile.db')

# get a reference to the object tables
owner_info_table = db['owner_info']
account_table = db['account']
crypto_wallet_table = db['crypto_wallet']
contact_table = db['contact']
employee_table = db['employee']
item_table = db['item']
journal_entry_table = db['journal_entry']
sales_payment_table = db['sales_payment']
purchase_payment_table = db['purchase_payment']
sales_invoice_table = db['sales_invoice']
purchase_invoice_table = db['purchase_invoice']
sales_order_table = db['sales_order']
purchase_order_table = db['purchase_order']
credit_memo_table = db['credit_memo']
vendor_credit_memo_table = db['vendor_credit_memo']
quote_table = db['quote']
connection_table = db['connection']

# Read chart of accounts from the external JSON file
with open("chart.json", "r") as file:
    chart_of_accounts = json.load(file)

# Create account_mapping dictionary from the chart of accounts
account_mapping = {account["account_code"]: account["display_name"] for account in chart_of_accounts}

# Example of the updated account_mapping dictionary
# print(account_mapping)

questions_list = ['show me the account list report', 'what is the balance of my <coa> account',
                  'what are the balances of my accounts', 'what are the names of my accounts',
                  'what are my account types', 'how much is in my <coa> account', 'how many accounts do I have',
                  'show me the aged payables report', 'who do I owe money', 'who do I have overdue invoices with',
                  'how many bills are 30 days past due', 'how many bills are 60 days past due',
                  'how many bills over 90 days past due', 'what are my aged payables',
                  'what bills are 30 days past due', 'what bills are 60 days past due',
                  'what bills are over 90 days past due', 'show me the ap aging detail',
                  'show me the aged payables detail report', 'show me the aged payables report with transactions',
                  'show me the aged receivables report', 'who owes me money', 'who has overdue invoices',
                  'how many invoices are 30 days past due', 'how many invoices are 60 days past due',
                  'how many invoices over 90 days past due', 'what are my aged receivables',
                  'who has invoices that are 30 days past due', 'who has invoices that are 60 days past due',
                  'who has invoices that are over 90 days past due', 'show me the ar aging detail',
                  'show me the aged receivables detail report', 'show me the aged receivables report with transactions',
                  'show me the balance sheet', 'what are my assets', 'what are my liabilities', 'what is my equity',
                  'show me the cash flow statement', 'what is my cash flow', 'show me the trial balance report',
                  'what is my trial balance', 'do my debits and credits match', 'show me the customer balance report',
                  'what is the balance for <customer>', 'what are the balances of my customers',
                  'who are my customers with balances', 'how much does <customer> owe me',
                  'how much do customers owe me', 'how many customers have balances',
                  'show me the customer balance detail report', 'show me the customer balance report with transactions',
                  'show me the customer income report', 'what are the income amounts for my customers',
                  'how much income does <customer> generate', 'how much income is generated by my customers',
                  'how profitable are my customers', 'how profitable is <customer>',
                  'what are the expenses associated with my customers',
                  'what are the expenses associated with customer <customer>', 'show me the general ledger report',
                  'what is the balance of my ledger accounts',
                  'what are the transactions associated with my ledger accounts',
                  'show me the inventory valuation report', 'what is the quantity of <item>',
                  'what is the value of <item>', 'what are my inventory item quantities',
                  'what are my inventory item values', 'how many <item> do I have in stock', 'how much is <item> worth',
                  'what is my inventory valuation', 'show me the journal report', 'what are my journal entries',
                  'what are the journal entries for <account>', 'show me the income statement',
                  'show me the profit and loss report', 'how much is my company losing',
                  'how much is my company making', 'what are my profits', 'what are my losses',
                  'how profitable is my company', 'show me the income statement with transactions',
                  'show me the profit and loss detail report', 'show me the profit and loss report with transactions',
                  'show me the sales by class report', 'what are my sales by class', 'what are my sales for <class>',
                  'show me the sales by customer report', 'what are my sales by customer',
                  'what are my sales for <customer>', 'show me the sales by department report',
                  'what are my sales by department', 'what are my sales for <department>',
                  'show me the sales by product report', 'what are my sales by product',
                  'what are my sales for <product>', 'show me the transactions list', 'what are my transactions',
                  'show me the vendor balance report', 'what is the balance for <vendor>',
                  'what are the balances of my vendors', 'who are my vendors I have balances with',
                  'how much do I owe <vendor>', 'how much do I owe vendors', 'how many vendors do I have balances with',
                  'show me the vendor balance detail report', 'what is the balance detail for <vendor>',
                  'show me the vendor balance report with transactions', 'show me the vendor expense report',
                  'what is the vendor expense for <vendor>', 'what are the expenses for my vendors']

questions_dict = {'show me the account list report': ['account_list_detail'],
                  'what is the balance of my <coa> account': ['account_list_detail'],
                  'what are the balances of my accounts': ['account_list_detail'],
                  'what are the names of my accounts': ['account_list_detail'],
                  'what are my account types': ['account_list_detail'],
                  'how much is in my <coa> account': ['account_list_detail'],
                  'how many accounts do I have': ['account_list_detail'],
                  'show me the aged payables report': ['ap_aging_summary'], 'who do I owe money': ['ap_aging_summary'],
                  'who do I have overdue invoices with': ['ap_aging_summary'],
                  'how many bills are 30 days past due': ['ap_aging_summary'],
                  'how many bills are 60 days past due': ['ap_aging_summary'],
                  'how many bills over 90 days past due': ['ap_aging_summary'],
                  'what are my aged payables': ['ap_aging_summary'],
                  'what bills are 30 days past due': ['ap_aging_summary'],
                  'what bills are 60 days past due': ['ap_aging_summary'],
                  'what bills are over 90 days past due': ['ap_aging_summary'],
                  'show me the ap aging detail': ['ap_aging_detail'],
                  'show me the aged payables detail report': ['ap_aging_detail'],
                  'show me the aged payables report with transactions': ['ap_aging_detail'],
                  'show me the aged receivables report': ['ar_aging_summary'],
                  'who owes me money': ['ar_aging_summary'], 'who has overdue invoices': ['ar_aging_summary'],
                  'how many invoices are 30 days past due': ['ar_aging_summary'],
                  'how many invoices are 60 days past due': ['ar_aging_summary'],
                  'how many invoices over 90 days past due': ['ar_aging_summary'],
                  'what are my aged receivables': ['ar_aging_summary'],
                  'who has invoices that are 30 days past due': ['ar_aging_summary'],
                  'who has invoices that are 60 days past due': ['ar_aging_summary'],
                  'who has invoices that are over 90 days past due': ['ar_aging_summary'],
                  'show me the ar aging detail': ['ar_aging_detail'],
                  'show me the aged receivables detail report': ['ar_aging_detail'],
                  'show me the aged receivables report with transactions': ['ar_aging_detail'],
                  'show me the balance sheet': ['balance_sheet'], 'what are my assets': ['balance_sheet'],
                  'what are my liabilities': ['balance_sheet'], 'what is my equity': ['balance_sheet'],
                  'show me the cash flow statement': ['cash_flow'], 'what is my cash flow': ['cash_flow'],
                  'show me the trial balance report': ['trial_balance'], 'what is my trial balance': ['trial_balance'],
                  'do my debits and credits match': ['trial_balance'],
                  'show me the customer balance report': ['customer_balance'],
                  'what is the balance for <customer>': ['customer_balance'],
                  'what are the balances of my customers': ['customer_balance'],
                  'who are my customers with balances': ['customer_balance'],
                  'how much does <customer> owe me': ['customer_balance'],
                  'how much do customers owe me': ['customer_balance'],
                  'how many customers have balances': ['customer_balance'],
                  'show me the customer balance detail report': ['customer_balance_detail'],
                  'show me the customer balance report with transactions': ['customer_balance_detail'],
                  'show me the customer income report': ['customer_income'],
                  'what are the income amounts for my customers': ['customer_income'],
                  'how much income does <customer> generate': ['customer_income'],
                  'how much income is generated by my customers': ['customer_income'],
                  'how profitable are my customers': ['customer_income'],
                  'how profitable is <customer>': ['customer_income'],
                  'what are the expenses associated with my customers': ['customer_income'],
                  'what are the expenses associated with customer <customer>': ['customer_income'],
                  'show me the general ledger report': ['general_ledger'],
                  'what is the balance of my ledger accounts': ['general_ledger'],
                  'what are the transactions associated with my ledger accounts': ['general_ledger'],
                  'show me the inventory valuation report': ['inventory_valuation_summary'],
                  'what is the quantity of <item>': ['inventory_valuation_summary'],
                  'what is the value of <item>': ['inventory_valuation_summary'],
                  'what are my inventory item quantities': ['inventory_valuation_summary'],
                  'what are my inventory item values': ['inventory_valuation_summary'],
                  'how many <item> do I have in stock': ['inventory_valuation_summary'],
                  'how much is <item> worth': ['inventory_valuation_summary'],
                  'what is my inventory valuation': ['inventory_valuation_summary'],
                  'show me the journal report': ['journal_report'], 'what are my journal entries': ['journal_report'],
                  'what are the journal entries for <account>': ['journal_report'],
                  'show me the income statement': ['profit_and_loss'],
                  'show me the profit and loss report': ['profit_and_loss'],
                  'how much is my company losing': ['profit_and_loss'],
                  'how much is my company making': ['profit_and_loss'], 'what are my profits': ['profit_and_loss'],
                  'what are my losses': ['profit_and_loss'], 'how profitable is my company': ['profit_and_loss'],
                  'show me the income statement with transactions': ['profit_and_loss_detail'],
                  'show me the profit and loss detail report': ['profit_and_loss_detail'],
                  'show me the profit and loss report with transactions': ['profit_and_loss_detail'],
                  'show me the sales by class report': ['sales_by_class_summary'],
                  'what are my sales by class': ['sales_by_class_summary'],
                  'what are my sales for <class>': ['sales_by_class_summary'],
                  'show me the sales by customer report': ['sales_by_customer'],
                  'what are my sales by customer': ['sales_by_customer'],
                  'what are my sales for <customer>': ['sales_by_customer'],
                  'show me the sales by department report': ['sales_by_department'],
                  'what are my sales by department': ['sales_by_department'],
                  'what are my sales for <department>': ['sales_by_department'],
                  'show me the sales by product report': ['sales_by_product'],
                  'what are my sales by product': ['sales_by_product'],
                  'what are my sales for <product>': ['sales_by_product'],
                  'show me the transactions list': ['transaction_list'],
                  'what are my transactions': ['transaction_list'],
                  'show me the vendor balance report': ['vendor_balance'],
                  'what is the balance for <vendor>': ['vendor_balance'],
                  'what are the balances of my vendors': ['vendor_balance'],
                  'who are my vendors I have balances with': ['vendor_balance'],
                  'how much do I owe <vendor>': ['vendor_balance'], 'how much do I owe vendors': ['vendor_balance'],
                  'how many vendors do I have balances with': ['vendor_balance'],
                  'show me the vendor balance detail report': ['vendor_balance_detail'],
                  'what is the balance detail for <vendor>': ['vendor_balance_detail'],
                  'show me the vendor balance report with transactions': ['vendor_balance_detail'],
                  'show me the vendor expense report': ['vendor_expenses'],
                  'what is the vendor expense for <vendor>': ['vendor_expenses'],
                  'what are the expenses for my vendors': ['vendor_expenses']}

tags_metadata = [
    {
        "name": "Owner Info",
        "description": "Owner Info object stores personal and financial details of the owner.",
    },

    {
        "name": "Account",
        "description": "Account objects represent ledger-based financial accounts for tracking transactions and "
                       "balances.",
    },
    {
        "name": "Contact",
        "description": "Contact objects store information about people or entities involved in financial transactions.",
    },

    {
        "name": "Crypto Wallet",
        "description": "Crypto Wallet objects hold details about cryptocurrency wallets and transactions.",
    },

    {
        "name": "Employee",
        "description": "Employee objects store data about employees and their financial transactions.",
    },

    {
        "name": "Item",
        "description": "Item objects represent products or services involved in financial transactions.",
    },

    {
        "name": "Journal Entry",
        "description": "Journal Entry objects log financial transactions in a double-entry bookkeeping system.",
    },

    {
        "name": "Sales Payment",
        "description": "Sales Payment objects track payments received from customers.",
    },

    {
        "name": "Purchase Payment",
        "description": "Purchase Payment objects record payments made to vendors.",
    },

    {
        "name": "Credit Memo",
        "description": "Credit Memo objects represent credits issued to customers.",
    },

    {
        "name": "Vendor Credit Memo",
        "description": "Vendor Credit Memo objects track credits received from vendors.",
    },
    {
        "name": "Sales Invoice",
        "description": "Sales Invoice objects detail customer billing for goods or services.",
    },
    {
        "name": "Purchase Invoice",
        "description": "Purchase Invoice objects record vendor billing for goods or services.",
    },

    {
        "name": "Sales Order",
        "description": "Sales Order objects track customer orders for goods or services.",
    },

    {
        "name": "Purchase Order",
        "description": "Purchase Order objects log orders placed with vendors.",
    },

    {
        "name": "Quote",
        "description": "Quote objects store pricing estimates for goods or services.",
    },

    {
        "name": "Reports",
        "description": "Report objects provide financial summaries and analysis.",
    },
]

app = FastAPI(title="Personal Accounting API", openapi_tags=tags_metadata, root_path=root_path,
              root_path_in_servers=False,
              servers=[
                  {"url": "https://sandbox.paapi.org", "description": "Sandbox environment"},
                  {"url": "https://api.paapi.org", "description": "Production environment"},
              ],
              )

origins = [
    "https://app.accountense.com",
    "http://localhost",
    "http://localhost:8000",
    "http://localhost:3000",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)


class TaxType(str, Enum):
    NONE = "NONE"
    INPUT = "INPUT"
    OUTPUT = "OUTPUT"
    GSTONIMPORTS = "GSTONIMPORTS"


class JournalType(str, Enum):
    CASH_RECEIPTS = "CASH_RECEIPTS"
    CASH_DISBURSEMENTS = "CASH_DISBURSEMENTS"
    SALES = "SALES"
    PURCHASE = "PURCHASE"
    SALES_ORDER = "SALES_ORDER"
    PURCHASE_ORDER = "PURCHASE_ORDER"
    QUOTES = "QUOTES"
    PAYROLL = "PAYROLL"


class AccountType(str, Enum):
    BANK = "BANK"
    ASSET = "ASSET"
    INVESTMENT = "INVESTMENT"
    PROPERTY = "PROPERTY"
    LIABILITY = "LIABILITY"
    INCOME = "INCOME"
    EXPENSE = "EXPENSE"
    EQUITY = "EQUITY"


class AccountGroup(str, Enum):
    REVENUE = "REVENUE"
    EXPENSE = "EXPENSE"
    ASSET = "ASSET"
    LIABILITY = "LIABILITY"
    EQUITY = "EQUITY"


class IdValueLabel(BaseModel):
    id: Optional[str] = None
    value: Optional[str] = None


class NameValueLabel(BaseModel):
    name: Optional[str] = None
    value: Optional[str] = None


class ValueLabel(BaseModel):
    value: Optional[str] = None


class EmailLabel(BaseModel):
    address: Optional[str] = None


class IncomeStatementHeader(BaseModel):
    contact: Optional[str] = None
    report_name: Optional[str] = None
    option: Optional[List[NameValueLabel]]
    date_macro: Optional[str] = None
    report_basis: Optional[str] = None
    start_period: Optional[str] = None
    end_period: Optional[str] = None
    currency: Optional[str] = None
    time: Optional[str] = None
    summarize_columns_by: Optional[str] = None


class BalanceSheetHeader(BaseModel):
    report_name: Optional[str] = None
    option: Optional[List[NameValueLabel]]
    date_macro: Optional[str] = None
    report_basis: Optional[str] = None
    start_period: Optional[str] = None
    end_period: Optional[str] = None
    currency: Optional[str] = None
    time: Optional[str] = None
    summarize_columns_by: Optional[str] = None


class TrialBalanceHeader(BaseModel):
    report_name: Optional[str] = None
    option: Optional[List[NameValueLabel]]
    date_macro: Optional[str] = None
    report_basis: Optional[str] = None
    start_period: Optional[str] = None
    end_period: Optional[str] = None
    currency: Optional[str] = None
    time: Optional[str] = None
    summarize_columns_by: Optional[str] = None


class ColumnMetaData(BaseModel):
    name: Optional[str] = None
    value: Optional[str] = None


class Column(BaseModel):
    column_type: Optional[str] = None
    column_title: Optional[str] = None
    meta_data: Optional[List[ColumnMetaData]] = None


class ColumnData(BaseModel):
    column_data: Optional[List[NameValueLabel]] = None


class TrialBalanceColumnData(BaseModel):
    column_data: Optional[List[IdValueLabel]] = None


class Columns(BaseModel):
    column: Optional[List[Column]] = None


class BalanceSheetColumns(BaseModel):
    column: Optional[List[Column]] = None


class TrialBalanceColumns(BaseModel):
    column: Optional[List[Column]] = None


class HeaderColumn(BaseModel):
    header: Optional[ColumnData] = None


class SubRow(BaseModel):
    row: Optional[List[HeaderColumn]] = None


class RowHeader(BaseModel):
    header: Optional[SubRow] = None


class Row(BaseModel):
    header: Optional[ColumnData] = None
    rows: Optional[SubRow] = None
    type: Optional[str] = None
    group: Optional[str] = None
    summary: Optional[ColumnData] = None


class TrialBalanceRow(BaseModel):
    column_data: Optional[List[IdValueLabel]] = None
    group: Optional[str] = None
    type: Optional[str] = None
    summary: Optional[ColumnData] = None


class Rows(BaseModel):
    row: Optional[List[Row]] = [{"header": {
        "column_data": [
            {
                "value": "Income"
            },
            {
                "value": ""
            }
        ]
    },
        "rows": {
            "row": [
                {
                    "header": {
                        "column_data": [
                            {
                                "id": "45",
                                "value": "Landscaping Services"
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "rows": {
                        "row": [
                            {
                                "header": {
                                    "column_data": [
                                        {
                                            "id": "46",
                                            "value": "Job Materials"
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "rows": {
                                    "row": [
                                        {
                                            "column_data": [
                                                {
                                                    "id": "48",
                                                    "value": "Fountains and Garden Lighting"
                                                },
                                                {
                                                    "value": "275.00"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "column_data": [
                                                {
                                                    "id": "49",
                                                    "value": "Plants and Soil"
                                                },
                                                {
                                                    "value": "150.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "type": "Section",
                                "summary": {
                                    "column_data": [
                                        {
                                            "value": "Total Job Materials"
                                        },
                                        {
                                            "value": "425.00"
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "type": "Section",
                    "summary": {
                        "column_data": [
                            {
                                "value": "Total Landscaping Services"
                            },
                            {
                                "value": "425.00"
                            }
                        ]
                    }
                },
                {
                    "column_data": [
                        {
                            "id": "54",
                            "value": "Pest Control Services"
                        },
                        {
                            "value": "-100.00"
                        }
                    ],
                    "type": "Data"
                }
            ]
        }, "type": "Section", "group": "Income", "summary": {"column_data": [
            {
                "value": "Total Income"
            },
            {
                "value": "325.00"
            }
        ]}},
        {"group": "GrossProfit", "type": "Section", "summary": {"column_data": [
            {
                "value": "Gross Profit"
            },
            {
                "value": "325.00"
            }
        ]}},
        {"header": {"column_data": [
            {
                "value": "Expenses"
            },
            {
                "value": ""
            }
        ]}, "type": "Section", "group": "Expenses", "summary": {"column_data": [
            {
                "value": "Total Expenses"
            },
            {
                "value": ""
            }
        ]}},
        {"group": "NetOperatingIncome", "type": "Section", "summary": {"column_data": [
            {
                "value": "Net Operating Income"
            },
            {
                "value": "325.00"
            }
        ]}},
        {"group": "NetIncome", "type": "Section", "summary": {"column_data": [
            {
                "value": "Net Income"
            },
            {
                "value": "325.00"
            }
        ]}}]


class BalanceSheetRows(BaseModel):
    row: Optional[List[Row]] = [{"header": {
        "column_data": [
            {
                "value": "ASSETS"
            },
            {
                "value": ""
            }
        ]
    }, "rows": {
        "row": [
            {
                "header": {
                    "column_data": [
                        {
                            "value": "Current Assets"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                "rows": {
                    "row": [
                        {
                            "header": {
                                "column_data": [
                                    {
                                        "value": "Bank Accounts"
                                    },
                                    {
                                        "value": ""
                                    }
                                ]
                            },
                            "rows": {
                                "row": [
                                    {
                                        "column_data": [
                                            {
                                                "id": "35",
                                                "value": "Checking"
                                            },
                                            {
                                                "value": "1350.55"
                                            }
                                        ],
                                        "type": "Data"
                                    },
                                    {
                                        "column_data": [
                                            {
                                                "id": "36",
                                                "value": "Savings"
                                            },
                                            {
                                                "value": "800.00"
                                            }
                                        ],
                                        "type": "Data"
                                    }
                                ]
                            },
                            "type": "Section",
                            "group": "BankAccounts",
                            "summary": {
                                "column_data": [
                                    {
                                        "value": "Total Bank Accounts"
                                    },
                                    {
                                        "value": "2150.55"
                                    }
                                ]
                            }
                        },
                        {
                            "header": {
                                "column_data": [
                                    {
                                        "value": "Accounts Receivable"
                                    },
                                    {
                                        "value": ""
                                    }
                                ]
                            },
                            "rows": {
                                "row": [
                                    {
                                        "column_data": [
                                            {
                                                "id": "84",
                                                "value": "Accounts Receivable (A/R)"
                                            },
                                            {
                                                "value": "6383.12"
                                            }
                                        ],
                                        "type": "Data"
                                    }
                                ]
                            },
                            "type": "Section",
                            "group": "AR",
                            "summary": {
                                "column_data": [
                                    {
                                        "value": "Total Accounts Receivable"
                                    },
                                    {
                                        "value": "6383.12"
                                    }
                                ]
                            }
                        },
                        {
                            "header": {
                                "column_data": [
                                    {
                                        "value": "Other current assets"
                                    },
                                    {
                                        "value": ""
                                    }
                                ]
                            },
                            "rows": {
                                "row": [
                                    {
                                        "column_data": [
                                            {
                                                "id": "81",
                                                "value": "Inventory Asset"
                                            },
                                            {
                                                "value": "596.25"
                                            }
                                        ],
                                        "type": "Data"
                                    },
                                    {
                                        "column_data": [
                                            {
                                                "id": "4",
                                                "value": "Undeposited Funds"
                                            },
                                            {
                                                "value": "2117.52"
                                            }
                                        ],
                                        "type": "Data"
                                    }
                                ]
                            },
                            "type": "Section",
                            "group": "OtherCurrentAssets",
                            "summary": {
                                "column_data": [
                                    {
                                        "value": "Total Other current assets"
                                    },
                                    {
                                        "value": "2713.77"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "type": "Section",
                "group": "CurrentAssets",
                "summary": {
                    "column_data": [
                        {
                            "value": "Total Current Assets"
                        },
                        {
                            "value": "11247.44"
                        }
                    ]
                }
            },
            {
                "header": {
                    "column_data": [
                        {
                            "value": "Fixed Assets"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                "rows": {
                    "row": [
                        {
                            "header": {
                                "column_data": [
                                    {
                                        "id": "37",
                                        "value": "Truck"
                                    },
                                    {
                                        "value": ""
                                    }
                                ]
                            },
                            "rows": {
                                "row": [
                                    {
                                        "column_data": [
                                            {
                                                "id": "38",
                                                "value": "Original Cost"
                                            },
                                            {
                                                "value": "13495.00"
                                            }
                                        ],
                                        "type": "Data"
                                    }
                                ]
                            },
                            "type": "Section",
                            "summary": {
                                "column_data": [
                                    {
                                        "value": "Total Truck"
                                    },
                                    {
                                        "value": "13495.00"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "type": "Section",
                "group": "FixedAssets",
                "summary": {
                    "column_data": [
                        {
                            "value": "Total Fixed Assets"
                        },
                        {
                            "value": "13495.00"
                        }
                    ]
                }
            }
        ]
    }, "type": "Section", "group": "TotalAssets",
        "summary": {"column_data": [
            {
                "value": "Total Income"
            },
            {
                "value": "325.00"
            }
        ]}},
        {"header": {
            "column_data": [
                {
                    "value": "LIABILITIES AND EQUITY"
                },
                {
                    "value": ""
                }
            ]
        },
            "rows": {
                "row": [
                    {
                        "header": {
                            "column_data": [
                                {
                                    "value": "Liabilities"
                                },
                                {
                                    "value": ""
                                }
                            ]
                        },
                        "rows": {
                            "row": [
                                {
                                    "header": {
                                        "column_data": [
                                            {
                                                "value": "Current Liabilities"
                                            },
                                            {
                                                "value": ""
                                            }
                                        ]
                                    },
                                    "rows": {
                                        "row": [
                                            {
                                                "header": {
                                                    "column_data": [
                                                        {
                                                            "value": "Accounts Payable"
                                                        },
                                                        {
                                                            "value": ""
                                                        }
                                                    ]
                                                },
                                                "rows": {
                                                    "row": [
                                                        {
                                                            "column_data": [
                                                                {
                                                                    "id": "33",
                                                                    "value": "Accounts Payable (A/P)"
                                                                },
                                                                {
                                                                    "value": "1984.17"
                                                                }
                                                            ],
                                                            "type": "Data"
                                                        }
                                                    ]
                                                },
                                                "type": "Section",
                                                "group": "AP",
                                                "summary": {
                                                    "column_data": [
                                                        {
                                                            "value": "Total Accounts Payable"
                                                        },
                                                        {
                                                            "value": "1984.17"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "header": {
                                                    "column_data": [
                                                        {
                                                            "value": "Credit Cards"
                                                        },
                                                        {
                                                            "value": ""
                                                        }
                                                    ]
                                                },
                                                "rows": {
                                                    "row": [
                                                        {
                                                            "column_data": [
                                                                {
                                                                    "id": "41",
                                                                    "value": "Mastercard"
                                                                },
                                                                {
                                                                    "value": "157.72"
                                                                }
                                                            ],
                                                            "type": "Data"
                                                        }
                                                    ]
                                                },
                                                "type": "Section",
                                                "group": "CreditCards",
                                                "summary": {
                                                    "column_data": [
                                                        {
                                                            "value": "Total Credit Cards"
                                                        },
                                                        {
                                                            "value": "157.72"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "header": {
                                                    "column_data": [
                                                        {
                                                            "value": "Other Current Liabilities"
                                                        },
                                                        {
                                                            "value": ""
                                                        }
                                                    ]
                                                },
                                                "rows": {
                                                    "row": [
                                                        {
                                                            "column_data": [
                                                                {
                                                                    "id": "89",
                                                                    "value": "Arizona Dept. of Revenue Payable"
                                                                },
                                                                {
                                                                    "value": "4.55"
                                                                }
                                                            ],
                                                            "type": "Data"
                                                        },
                                                        {
                                                            "column_data": [
                                                                {
                                                                    "id": "90",
                                                                    "value": "Board of Equalization Payable"
                                                                },
                                                                {
                                                                    "value": "401.98"
                                                                }
                                                            ],
                                                            "type": "Data"
                                                        },
                                                        {
                                                            "column_data": [
                                                                {
                                                                    "id": "43",
                                                                    "value": "Loan Payable"
                                                                },
                                                                {
                                                                    "value": "4000.00"
                                                                }
                                                            ],
                                                            "type": "Data"
                                                        }
                                                    ]
                                                },
                                                "type": "Section",
                                                "group": "OtherCurrentLiabilities",
                                                "summary": {
                                                    "column_data": [
                                                        {
                                                            "value": "Total Other Current Liabilities"
                                                        },
                                                        {
                                                            "value": "4406.53"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "Section",
                                    "group": "CurrentLiabilities",
                                    "summary": {
                                        "column_data": [
                                            {
                                                "value": "Total Current Liabilities"
                                            },
                                            {
                                                "value": "6548.42"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "header": {
                                        "column_data": [
                                            {
                                                "value": "Long-Term Liabilities"
                                            },
                                            {
                                                "value": ""
                                            }
                                        ]
                                    },
                                    "rows": {
                                        "row": [
                                            {
                                                "column_data": [
                                                    {
                                                        "id": "44",
                                                        "value": "Notes Payable"
                                                    },
                                                    {
                                                        "value": "25000.00"
                                                    }
                                                ],
                                                "type": "Data"
                                            }
                                        ]
                                    },
                                    "type": "Section",
                                    "group": "LongTermLiabilities",
                                    "summary": {
                                        "column_data": [
                                            {
                                                "value": "Total Long-Term Liabilities"
                                            },
                                            {
                                                "value": "25000.00"
                                            }
                                        ]
                                    }
                                }
                            ]
                        },
                        "type": "Section",
                        "group": "Liabilities",
                        "summary": {
                            "column_data": [
                                {
                                    "value": "Total Liabilities"
                                },
                                {
                                    "value": "31548.42"
                                }
                            ]
                        }
                    },
                    {
                        "header": {
                            "column_data": [
                                {
                                    "value": "Equity"
                                },
                                {
                                    "value": ""
                                }
                            ]
                        },
                        "rows": {
                            "row": [
                                {
                                    "column_data": [
                                        {
                                            "id": "34",
                                            "value": "Opening Balance Equity"
                                        },
                                        {
                                            "value": "-9337.50"
                                        }
                                    ],
                                    "type": "Data"
                                },
                                {
                                    "column_data": [
                                        {
                                            "id": "2",
                                            "value": "Retained Earnings"
                                        },
                                        {
                                            "value": "91.25"
                                        }
                                    ],
                                    "type": "Data"
                                },
                                {
                                    "column_data": [
                                        {
                                            "value": "Net Income"
                                        },
                                        {
                                            "value": "2440.27"
                                        }
                                    ],
                                    "type": "Data",
                                    "group": "NetIncome"
                                }
                            ]
                        },
                        "type": "Section",
                        "group": "Equity",
                        "summary": {
                            "column_data": [
                                {
                                    "value": "Total Equity"
                                },
                                {
                                    "value": "-6805.98"
                                }
                            ]
                        }
                    }
                ]
            }, "type": "Section", "group": "TotalLiabilitiesAndEquity",
            "summary": {"column_data": [
                {
                    "value": "Total Expenses"
                },
                {
                    "value": ""
                }
            ]}}
    ]


class TrialBalanceRows(BaseModel):
    row: Optional[List[TrialBalanceRow]] = [{
        "column_data": [
            {
                "id": "35",
                "value": "Checking"
            },
            {
                "value": "4151.74"
            },
            {
                "value": ""
            }
        ]
    }, {
        "column_data": [
            {
                "id": "13",
                "value": "Meals and Entertainment"
            },
            {
                "value": ""
            },
            {
                "value": "46.00"
            }
        ]
    }, {
        "column_data": [
            {
                "id": "93",
                "value": "Sage Payments Fees"
            },
            {
                "value": "0.44"
            },
            {
                "value": ""
            }
        ]
    }, {
        "group": "GrandTotal",
        "type": "Section",
        "summary": {
            "column_data": [
                {
                    "value": "TOTAL"
                },
                {
                    "value": "36587.47"
                },
                {
                    "value": "36587.47"
                }
            ]
        }
    }]


class PayrollInfo(BaseModel):
    pay_info_use_standard_1: Optional[bool] = False
    pay_info_account_id_1: Optional[str] = None
    pay_info_rate_number_1: Optional[int] = None
    pay_info_rate_amount_1: Optional[float] = None
    pay_info_use_standard_2: Optional[bool] = False
    pay_info_account_id_2: Optional[str] = None
    pay_info_rate_number_2: Optional[int] = None
    pay_info_rate_amount_2: Optional[float] = None
    pay_info_use_standard_3: Optional[bool] = False
    pay_info_account_id_3: Optional[str] = None
    pay_info_rate_number_3: Optional[int] = None
    pay_info_rate_amount_3: Optional[float] = None
    pay_info_use_standard_4: Optional[bool] = False
    pay_info_account_id_4: Optional[str] = None
    pay_info_rate_number_4: Optional[int] = None
    pay_info_rate_amount_4: Optional[float] = None
    pay_info_use_standard_5: Optional[bool] = False
    pay_info_account_id_5: Optional[str] = None
    pay_info_rate_number_5: Optional[int] = None
    pay_info_rate_amount_5: Optional[float] = None
    pay_info_use_standard_6: Optional[bool] = False
    pay_info_account_id_6: Optional[str] = None
    pay_info_rate_number_6: Optional[int] = None
    pay_info_rate_amount_6: Optional[float] = None
    pay_info_use_standard_7: Optional[bool] = False
    pay_info_account_id_7: Optional[str] = None
    pay_info_rate_number_7: Optional[int] = None
    pay_info_rate_amount_7: Optional[float] = None
    pay_info_use_standard_8: Optional[bool] = False
    pay_info_account_id_8: Optional[str] = None
    pay_info_rate_number_8: Optional[int] = None
    pay_info_rate_amount_8: Optional[float] = None
    pay_info_use_standard_9: Optional[bool] = False
    pay_info_account_id_9: Optional[str] = None
    pay_info_rate_number_9: Optional[int] = None
    pay_info_rate_amount_9: Optional[float] = None
    pay_info_use_standard_10: Optional[bool] = False
    pay_info_account_id_10: Optional[str] = None
    pay_info_rate_number_10: Optional[int] = None
    pay_info_rate_amount_10: Optional[float] = None
    pay_info_use_standard_11: Optional[bool] = False
    pay_info_account_id_11: Optional[str] = None
    pay_info_rate_number_11: Optional[int] = None
    pay_info_rate_amount_11: Optional[float] = None
    pay_info_use_standard_12: Optional[bool] = False
    pay_info_account_id_12: Optional[str] = None
    pay_info_rate_number_12: Optional[int] = None
    pay_info_rate_amount_12: Optional[float] = None
    pay_info_use_standard_13: Optional[bool] = False
    pay_info_account_id_13: Optional[str] = None
    pay_info_rate_number_13: Optional[int] = None
    pay_info_rate_amount_13: Optional[float] = None
    pay_info_use_standard_14: Optional[bool] = False
    pay_info_account_id_14: Optional[str] = None
    pay_info_rate_number_14: Optional[int] = None
    pay_info_rate_amount_14: Optional[float] = None
    pay_info_use_standard_15: Optional[bool] = False
    pay_info_account_id_15: Optional[str] = None
    pay_info_rate_number_15: Optional[int] = None
    pay_info_rate_amount_15: Optional[float] = None
    pay_info_use_standard_16: Optional[bool] = False
    pay_info_account_id_16: Optional[str] = None
    pay_info_rate_number_16: Optional[int] = None
    pay_info_rate_amount_16: Optional[float] = None
    pay_info_use_standard_17: Optional[bool] = False
    pay_info_account_id_17: Optional[str] = None
    pay_info_rate_number_17: Optional[int] = None
    pay_info_rate_amount_17: Optional[float] = None
    pay_info_use_standard_18: Optional[bool] = False
    pay_info_account_id_18: Optional[str] = None
    pay_info_rate_number_18: Optional[int] = None
    pay_info_rate_amount_18: Optional[float] = None
    pay_info_use_standard_19: Optional[bool] = False
    pay_info_account_id_19: Optional[str] = None
    pay_info_rate_number_19: Optional[int] = None
    pay_info_rate_amount_19: Optional[float] = None
    pay_info_use_standard_20: Optional[bool] = False
    pay_info_account_id_20: Optional[str] = None
    pay_info_rate_number_20: Optional[int] = None
    pay_info_rate_amount_20: Optional[float] = None


class RetirementPercentage(BaseModel):
    simple_percentage: Optional[int] = None
    roth_401_k_percentage: Optional[int] = None
    roth_ira_percentage: Optional[int] = None
    ira_percentage: Optional[int] = None
    plan_403_b_percentage: Optional[int] = None
    roth_403b_percentage: Optional[int] = None
    plan_457_b_percentage: Optional[int] = None
    plan_408_k_percentage: Optional[int] = None


class RetirementCatchUp(BaseModel):
    plan_401_k_catch_up: Optional[bool] = None
    simple_catch_up: Optional[bool] = None
    roth_401_k_catch_up: Optional[bool] = None
    roth_ira_catch_up: Optional[bool] = None
    ira_catch_up: Optional[bool] = None
    plan_403_b_catch_up: Optional[bool] = None
    roth_403_b_catch_up: Optional[bool] = None
    plan_457_b_catch_up: Optional[bool] = None
    plan_408_k_catch_up: Optional[bool] = None


class EmergencyContact(BaseModel):
    emergency_contact_name: Optional[str] = None
    emergency_contact_relationship: Optional[str] = None
    emergency_contact_phone_1: Optional[str] = None
    emergency_contact_phone_2: Optional[str] = None


class EmployeeAddress(BaseModel):
    line_1: Optional[str] = None
    line_2: Optional[str] = None
    city: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


class CompanyAddress(BaseModel):
    line_1: Optional[str] = None
    line_2: Optional[str] = None
    city: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


class OwnerAddress(BaseModel):
    line_1: Optional[str] = None
    line_2: Optional[str] = None
    city: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


class PrimaryAddress(BaseModel):
    line_1: Optional[str] = None
    line_2: Optional[str] = None
    city: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


class ShippingAddress(BaseModel):
    line_1: Optional[str] = None
    line_2: Optional[str] = None
    city: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


class BillingAddress(BaseModel):
    line_1: Optional[str] = None
    line_2: Optional[str] = None
    city: Optional[str] = None
    region: Optional[str] = None
    postal_code: Optional[str] = None
    country: Optional[str] = None


class MetaData(BaseModel):
    create_time: Optional[str] = None
    last_updated_time: Optional[str] = None


class MetaDataResponse(BaseModel):
    create_time: Optional[str] = None
    last_updated_time: Optional[str] = None


class OwnerInfo(BaseModel):
    display_name: str
    owner_name: Optional[str] = None
    owner_address: Optional[OwnerAddress] = None
    owner_telephone: Optional[str] = None
    owner_website: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "display_name": "Joe Rocket",
                "owner_name": "Joe Rocket",
                "owner_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "USA"
                },
                "owner_telephone": "540-000-0000",
                "owner_website": "www.spacedonuts.space"
            }
        }


class OwnerInfoResponse(BaseModel):
    owner_id: str = None
    display_name: Optional[str] = None
    owner_name: Optional[str] = None
    owner_address: Optional[OwnerAddress] = None
    owner_telephone: Optional[str] = None
    owner_website: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "owner_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "Joe Rocket",
                "owner_name": "Joe Rocket",
                "owner_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "USA"
                },
                "owner_telephone": "540-000-0000",
                "owner_website": "www.spacedonuts.space"
            }
        }


class UpdateOwnerInfo(BaseModel):
    owner_info_id: str = Field(..., description='Owner info id', example="00000000-0000-0000-0000-000000000000")
    display_name: Optional[str] = None
    owner_name: Optional[str] = None
    owner_address: Optional[OwnerAddress] = None
    owner_telephone: Optional[str] = None
    owner_website: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "owner_info_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "Joe Rocket",
                "owner_name": "Joe Rocket",
                "owner_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "USA"
                },
                "owner_telephone": "540-000-0000",
                "owner_website": "www.spacedonuts.space"
            }
        }


class UpdateOwnerInfoResponse(BaseModel):
    owner_id: str = None
    display_name: Optional[str] = None
    owner_name: Optional[str] = None
    owner_address: Optional[OwnerAddress] = None
    owner_telephone: Optional[str] = None
    owner_website: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "owner_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "Joe Rocket",
                "owner_name": "Joe Rocket",
                "owner_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "USA"
                },
                "owner_telephone": "540-000-0000",
                "owner_website": "www.spacedonuts.space"
            }
        }


class Account(BaseModel):
    display_name: str = Field(..., title="Display Name", description="User recognizable display name for the Account.",
                              max_length=100)

    account_code: str = Field(..., title="Account Code", description="Unique code for the Account.")
    account_type: AccountType = Field(..., title="Account Type", description="Type of Account.")
    description: Optional[str] = Field(None, title="Description", description="Description of the Account.")
    tax_type: Optional[TaxType] = Field(None, title="Tax Type", description="Tax type for the Account.")
    inactive: Optional[bool] = Field(None, title="Inactive", description="Indicates if the Account is inactive.")
    meta_data: Optional[MetaData] = Field(None, title="Meta Data", description="Meta data for the Account.")

    class Config:
        schema_extra = {
            "example": {
                "display_name": "Personal Checking Account",
                "account_code": "101",
                "account_type": "BANK",
                "description": "Personal checking account for income and expenses",
                "tax_type": "NONE",
                "inactive": False,
            }
        }


class AccountOut(BaseModel):
    account_id: str = Field(..., title="Account ID", description="Unique ID for the Account.")
    display_name: str = Field(..., title="Display Name", description="User recognizable display name for the Account.")
    account_code: str = Field(..., title="Account Code", description="Unique code for the Account.")
    account_type: str = Field(..., title="Account Type", description="Type of Account.")
    description: Optional[str] = Field(None, title="Description", description="Description of the Account.")
    tax_code: Optional[TaxType] = Field(None, title="Tax Code", description="Tax code for the Account.")
    current_balance: Optional[float] = Field(None, title="Current Balance", description="Current balance for the "
                                                                                        "Account.")
    inactive: Optional[bool] = Field(False, title="Inactive", description="Indicates if the Account is inactive.")
    meta_data: Optional[MetaData] = Field(None, title="Meta Data", description="Meta data for the Account.")

    class Config:
        orm_mode = True
        schema_extra = {
            "example": {
                "account_id": "715a9b1f-b5ab-4757-972b-0ac518720060",
                "display_name": "Personal Checking Account",
                "account_code": "101",
                "account_type": "BANK",
                "description": "Personal checking account for income and expenses",
                "tax_code": "NONE",
                "current_balance": 3500.45,
                "inactive": False,
            }
        }


class AccountResponse(BaseModel):
    account_id: Optional[str] = None
    display_name: Optional[str] = None
    account_code: Optional[str] = None
    account_type: Optional[AccountType] = None
    account_group: Optional[AccountGroup] = None
    description: Optional[str] = None
    tax_type: Optional[TaxType] = None
    current_balance: Optional[float] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None


class UpdateAccount(BaseModel):
    display_name: Optional[str] = None
    description: Optional[str] = None
    tax_type: Optional[TaxType] = None
    inactive: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "display_name": "Personal Checking Account",
                "description": "Personal checking account for income and expenses",
                "tax_type": "NONE",
                "inactive": False,
            }
        }


class UpdateAccountResponse(BaseModel):
    account_id: str = Field(..., title="Account ID", description="Unique ID for the Account.")
    display_name: str = Field(..., title="Display Name", description="User recognizable display name for the Account.")
    account_code: str = Field(..., title="Account Code", description="Unique code for the Account.")
    account_type: str = Field(..., title="Account Type", description="Type of Account.")
    description: Optional[str] = Field(None, title="Description", description="Description of the Account.")
    tax_code: Optional[TaxType] = Field(None, title="Tax Code", description="Tax code for the Account.")
    current_balance: Optional[float] = Field(None, title="Current Balance", description="Current balance for the "
                                                                                        "Account.")
    inactive: Optional[bool] = Field(False, title="Inactive", description="Indicates if the Account is inactive.")
    meta_data: Optional[MetaData] = Field(None, title="Meta Data", description="Meta data for the Account.")

    class Config:
        orm_mode = True
        schema_extra = {
            "example": {
                "account_id": "715a9b1f-b5ab-4757-972b-0ac518720060",
                "display_name": "Personal Checking Account",
                "account_code": "101",
                "account_type": "BANK",
                "description": "Personal checking account for income and expenses",
                "tax_code": "NONE",
                "current_balance": 3500.45,
                "inactive": False,
            }
        }


class CryptoWallet(BaseModel):
    display_name: str = Query(..., title="Display Name",
                              description="User recognizable display name for the CryptoWallet.",
                              max_length=100)
    crypto_wallet_address: str
    crypto_wallet_type: str
    description: Optional[str] = None
    tax_code: Optional[TaxType] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaData] = None

    class Config:
        schema_extra = {
            "example": {
                "display_name": "My Bitcoin Wallet",
                "crypto_wallet_address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
                "crypto_wallet_type": "Bitcoin",
                "description": "Personal Bitcoin wallet",
                "tax_code": "NONE",
                "current_balance": 2.5,
                "inactive": False,
            }
        }


class CryptoWalletResponse(BaseModel):
    crypto_wallet_id: str = None
    display_name: Optional[str] = None
    crypto_wallet_address: Optional[str] = None
    crypto_wallet_type: Optional[str] = None
    description: Optional[str] = None
    tax_code: Optional[TaxType] = None
    current_balance: Optional[float] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "crypto_wallet_id": "715a9b1f-b5ab-4757-972b-0ac518720060",
                "display_name": "My Bitcoin Wallet",
                "crypto_wallet_address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
                "crypto_wallet_type": "Bitcoin",
                "description": "Personal Bitcoin wallet",
                "tax_code": "NONE",
                "current_balance": 2.5,
                "inactive": False,
                "meta_data": {
                    "created_at": "2023-03-25T10:20:30Z",
                    "updated_at": "2023-03-25T10:20:30Z",
                }
            }
        }


class UpdateCryptoWallet(BaseModel):
    crypto_wallet_id: str = None
    display_name: Optional[str] = None
    crypto_wallet_address: Optional[str] = None
    crypto_wallet_type: Optional[str] = None
    description: Optional[str] = None
    tax_type: Optional[TaxType] = None
    inactive: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "crypto_wallet_id": "715a9b1f-b5ab-4757-972b-0ac518720060",
                "display_name": "My Bitcoin Wallet",
                "crypto_wallet_address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
                "crypto_wallet_type": "Bitcoin",
                "description": "Personal Bitcoin wallet",
                "tax_code": "NONE",
                "current_balance": 2.5,
                "inactive": False,

            }
        }


class UpdateCryptoWalletResponse(BaseModel):
    crypto_wallet_id: str = None
    display_name: Optional[str] = None
    crypto_wallet_address: Optional[str] = None
    crypto_wallet_type: Optional[str] = None
    description: Optional[str] = None
    tax_type: Optional[TaxType] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "crypto_wallet_id": "715a9b1f-b5ab-4757-972b-0ac518720060",
                "display_name": "My Bitcoin Wallet",
                "crypto_wallet_address": "1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa",
                "crypto_wallet_type": "Bitcoin",
                "description": "Personal Bitcoin wallet",
                "tax_code": "NONE",
                "current_balance": 2.5,
                "inactive": False,
                "meta_data": {
                    "created_at": "2023-03-25T10:20:30Z",
                    "updated_at": "2023-03-25T10:20:30Z",
                }
            }
        }


class LineItems(BaseModel):
    item_id: str
    amount: float
    quantity: Optional[int] = None
    item_price: Optional[float] = None
    description: Optional[str] = None
    discount_amount: Optional[float] = None
    tax_type: Optional[str] = None
    tax: Optional[float] = None


class SalesItemLineDetail(BaseModel):
    quantity: Optional[int] = None
    item_price: Optional[float] = None
    item_reference: Optional[NameValueLabel] = None


class CreditMemoLineItems(BaseModel):
    description: Optional[str] = None
    detail_type: Optional[str] = None
    SalesItemLineDetail: Optional[SalesItemLineDetail] = None
    line_number: Optional[int] = None
    amount: Optional[float] = None


class CostingMethod(str, Enum):
    AVERAGE = "AVERAGE"
    FIFO = "FIFO"
    LIFO = "LIFO"


class IncomeStatementResponse(BaseModel):
    header: Optional[IncomeStatementHeader] = None
    rows: Optional[Rows] = None
    columns: Optional[List[Columns]] = None


class BalanceSheetResponse(BaseModel):
    header: Optional[BalanceSheetHeader] = None
    rows: Optional[BalanceSheetRows] = None
    columns: Optional[List[Columns]] = None


class TrialBalanceResponse(BaseModel):
    header: Optional[TrialBalanceHeader] = None
    rows: Optional[TrialBalanceRows] = None
    columns: Optional[List[TrialBalanceColumns]] = None


class Connection(BaseModel):
    connection_name: str
    connection_id: str
    connection_provider: str
    connection_user_id: str
    total_users: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {"connection_name": "PAAPI Sandbox Company", "connection_id": "4620816365064916330",
                        "connection_provider": "Accountense", "connection_user_id": "auth0|5fbf6e651bda000075e1bdd6",
                        "total_users": "1", "active": "true",
                        "created": "2022-05-15"}

        }


class UpdateConnection(BaseModel):
    connection_name: str
    connection_id: str
    connection_provider: str
    connection_user_id: str
    total_users: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {"connection_name": "PAAPI Sandbox Company", "connection_id": "4620816365064916330",
                        "connection_provider": "Accountense", "connection_user_id": "auth0|5fbf6e651bda000075e1bdd6",
                        "total_users": "1", "active": "true",
                        "created": "2022-05-15"}

        }


class ConnectionResponse(BaseModel):
    id: str
    connection_name: str
    connection_id: str
    connection_provider: str
    connection_user_id: str
    total_users: Optional[int] = None


class UpdateConnectionResponse(BaseModel):
    id: str
    connection_name: str
    connection_id: str
    connection_provider: str
    connection_user_id: str
    total_users: Optional[int] = None


class CustomerTerms(BaseModel):
    use_standard_terms: Optional[bool] = True
    c_o_d_terms: Optional[bool] = None
    prepaid_terms: Optional[bool] = None
    terms_type: Optional[bool] = None
    due_days: Optional[int] = None
    discount_days: Optional[int] = None
    discount_percent: Optional[int] = None
    credit_limit: Optional[float] = None
    credit_status: Optional[int] = None
    charge_finance_charges: Optional[bool] = None
    due_month_end_terms: Optional[bool] = None


class SupplierTerms(BaseModel):
    use_standard_terms: Optional[bool] = True
    c_o_d_terms: Optional[bool] = None
    prepaid_terms: Optional[bool] = None
    terms_type: Optional[bool] = None
    due_days: Optional[int] = None
    discount_days: Optional[int] = None
    discount_percent: Optional[int] = None
    credit_limit: Optional[float] = None
    due_month_end_terms: Optional[bool] = None


class Contact(BaseModel):
    display_name: str
    account_number: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    suffix: Optional[str] = None
    primary_address: Optional[PrimaryAddress] = None
    shipping_address: Optional[ShippingAddress] = None
    billing_address: Optional[BillingAddress] = None
    telephone_1: Optional[str] = None
    telephone_2: Optional[str] = None
    fax: Optional[str] = None
    email: Optional[str] = None
    website: Optional[str] = None
    tax_id_number: Optional[str] = None
    accounts_receivable_tax_type: Optional[TaxType] = None
    accounts_payable_tax_type: Optional[TaxType] = None
    is_supplier: Optional[bool] = False
    is_customer: Optional[bool] = False
    customer_terms: Optional[CustomerTerms] = None
    supplier_terms: Optional[SupplierTerms] = None
    default_sales_account: Optional[str] = None
    default_purchase_account: Optional[str] = None
    current_customer_balance: Optional[float] = None
    current_supplier_balance: Optional[float] = None
    customer_payment_method: Optional[str] = None
    supplier_payment_method: Optional[str] = None
    inactive: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "display_name": "Gus Fring",
                "account_number": "00987654",
                "first_name": "Gus",
                "last_name": "Fring",
                "email": "gfring@lospolloshermanos.com",
                "primary_address": {"line_1": "1715 North Brown Lane",
                                    "line_2": "",
                                    "city": "Lawrenceville",
                                    "region": "GA",
                                    "postal_code": "30043",
                                    "country": "US"},
                "shipping_address": {"line_1": "1515 Mockingbird Lane",
                                     "line_2": "",
                                     "city": "Atlanta",
                                     "region": "GA",
                                     "postal_code": "30303",
                                     "country": "US"},
                "billing_address": {"line_1": "1515 Mockingbird Lane",
                                    "line_2": "",
                                    "city": "Atlanta",
                                    "region": "GA",
                                    "postal_code": "30303",
                                    "country": "US"},

                "telephone_1": "404-555-9875",
                "telephone_2": "404-555-9876",
                "fax": "404-555-9877",
                "website": "www.lospolloshermanos.com",
                "tax_id_number": "0001098745",
                "accounts_receivable_tax_type": "NONE",
                "accounts_payable_tax_type": "NONE",
                "is_supplier": True,
                "is_customer": False,
                "supplier_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "due_month_end_terms": False,
                },
                "customer_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "credit_status": 1,
                    "charge_finance_charges": False,
                    "due_month_end_terms": False,
                },
                "default_sales_account": "10200-00",
                "default_purchase_account": "75500-00",
                "customer_payment_method": "VISA",
                "supplier_payment_method": "VISA",
                "inactive": False
            }
        }


class ContactResponse(BaseModel):
    contact_id: str = None
    display_name: str = None
    account_number: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    suffix: Optional[str] = None
    primary_address: Optional[PrimaryAddress] = None
    shipping_address: Optional[ShippingAddress] = None
    billing_address: Optional[BillingAddress] = None
    email: Optional[str] = None
    telephone_1: Optional[str] = None
    telephone_2: Optional[str] = None
    fax: Optional[str] = None
    website: Optional[str] = None
    tax_id_number: Optional[str] = None
    accounts_receivable_tax_type: Optional[TaxType] = None
    accounts_payable_tax_type: Optional[TaxType] = None
    is_supplier: Optional[bool] = True
    is_customer: Optional[bool] = False
    supplier_terms: Optional[SupplierTerms] = None
    customer_terms: Optional[CustomerTerms] = None
    default_sales_account: Optional[str] = None
    default_purchase_account: Optional[str] = None
    customer_payment_method: Optional[str] = None
    supplier_payment_method: Optional[str] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "Gus Fring",
                "account_number": "00987654",
                "first_name": "Gus",
                "last_name": "Fring",
                "email": "gfring@lospolloshermanos.com",
                "primary_address": {"line_1": "1715 North Brown Lane",
                                    "line_2": "",
                                    "city": "Lawrenceville",
                                    "region": "GA",
                                    "postal_code": "30043",
                                    "country": "US"},
                "shipping_address": {"line_1": "1515 Mockingbird Lane",
                                     "line_2": "",
                                     "city": "Atlanta",
                                     "region": "GA",
                                     "postal_code": "30303",
                                     "country": "US"},
                "billing_address": {"line_1": "1515 Mockingbird Lane",
                                    "line_2": "",
                                    "city": "Atlanta",
                                    "region": "GA",
                                    "postal_code": "30303",
                                    "country": "US"},

                "telephone_1": "404-555-9875",
                "telephone_2": "404-555-9876",
                "fax": "404-555-9877",
                "website": "www.lospolloshermanos.com",
                "tax_id_number": "0001098745",
                "accounts_receivable_tax_type": "NONE",
                "accounts_payable_tax_type": "NONE",
                "is_supplier": True,
                "is_customer": False,
                "supplier_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "due_month_end_terms": False,
                },
                "customer_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "credit_status": 1,
                    "charge_finance_charges": False,
                    "due_month_end_terms": False,
                },
                "default_sales_account": "10200-00",
                "default_purchase_account": "75500-00",
                "customer_payment_method": "VISA",
                "supplier_payment_method": "VISA",
                "inactive": False
            }
        }


class UpdateContactResponse(BaseModel):
    contact_id: str = None
    display_name: str = None
    account_number: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    suffix: Optional[str] = None
    primary_address: Optional[PrimaryAddress] = None
    shipping_address: Optional[ShippingAddress] = None
    billing_address: Optional[BillingAddress] = None
    email: Optional[str] = None
    telephone_1: Optional[str] = None
    telephone_2: Optional[str] = None
    fax: Optional[str] = None
    website: Optional[str] = None
    tax_id_number: Optional[str] = None
    accounts_receivable_tax_type: Optional[TaxType] = None
    accounts_payable_tax_type: Optional[TaxType] = None
    is_supplier: Optional[bool] = True
    is_customer: Optional[bool] = False
    supplier_terms: Optional[SupplierTerms] = None
    customer_terms: Optional[CustomerTerms] = None
    default_sales_account: Optional[str] = None
    default_purchase_account: Optional[str] = None
    customer_payment_method: Optional[str] = None
    supplier_payment_method: Optional[str] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "Gus Fring",
                "account_number": "00987654",
                "first_name": "Gus",
                "last_name": "Fring",
                "email": "gfring@lospolloshermanos.com",
                "primary_address": {"line_1": "1715 North Brown Lane",
                                    "line_2": "",
                                    "city": "Lawrenceville",
                                    "region": "GA",
                                    "postal_code": "30043",
                                    "country": "US"},
                "shipping_address": {"line_1": "1515 Mockingbird Lane",
                                     "line_2": "",
                                     "city": "Atlanta",
                                     "region": "GA",
                                     "postal_code": "30303",
                                     "country": "US"},
                "billing_address": {"line_1": "1515 Mockingbird Lane",
                                    "line_2": "",
                                    "city": "Atlanta",
                                    "region": "GA",
                                    "postal_code": "30303",
                                    "country": "US"},

                "telephone_1": "404-555-9875",
                "telephone_2": "404-555-9876",
                "fax": "404-555-9877",
                "website": "www.lospolloshermanos.com",
                "tax_id_number": "0001098745",
                "accounts_receivable_tax_type": "NONE",
                "accounts_payable_tax_type": "NONE",
                "is_supplier": True,
                "is_customer": False,
                "supplier_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "due_month_end_terms": False,
                },
                "customer_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "credit_status": 1,
                    "charge_finance_charges": False,
                    "due_month_end_terms": False,
                },
                "default_sales_account": "10200-00",
                "default_purchase_account": "75500-00",
                "customer_payment_method": "VISA",
                "supplier_payment_method": "VISA",
                "inactive": False
            }
        }


class UpdateContact(BaseModel):
    contact_id: str = None
    display_name: str
    account_number: Optional[str] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    suffix: Optional[str] = None
    primary_address: Optional[PrimaryAddress] = None
    shipping_address: Optional[ShippingAddress] = None
    billing_address: Optional[BillingAddress] = None
    telephone_1: Optional[str] = None
    telephone_2: Optional[str] = None
    fax: Optional[str] = None
    email: Optional[str] = None
    website: Optional[str] = None
    tax_id_number: Optional[str] = None
    accounts_receivable_tax_type: Optional[TaxType] = None
    accounts_payable_tax_type: Optional[TaxType] = None
    is_supplier: Optional[bool] = False
    is_customer: Optional[bool] = False
    supplier_terms: Optional[SupplierTerms] = None
    customer_terms: Optional[CustomerTerms] = None
    default_sales_account: Optional[str] = None
    default_purchase_account: Optional[str] = None
    customer_payment_method: Optional[str] = None
    supplier_payment_method: Optional[str] = None
    inactive: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "Gus Fring",
                "account_number": "00987654",
                "first_name": "Gus",
                "last_name": "Fring",
                "email": "gfring@lospolloshermanos.com",
                "primary_address": {"line_1": "1715 North Brown Lane",
                                    "line_2": "",
                                    "city": "Lawrenceville",
                                    "region": "GA",
                                    "postal_code": "30043",
                                    "country": "US"},
                "shipping_address": {"line_1": "1515 Mockingbird Lane",
                                     "line_2": "",
                                     "city": "Atlanta",
                                     "region": "GA",
                                     "postal_code": "30303",
                                     "country": "US"},
                "billing_address": {"line_1": "1515 Mockingbird Lane",
                                    "line_2": "",
                                    "city": "Atlanta",
                                    "region": "GA",
                                    "postal_code": "30303",
                                    "country": "US"},

                "telephone_1": "404-555-9875",
                "telephone_2": "404-555-9876",
                "fax": "404-555-9877",
                "website": "www.lospolloshermanos.com",
                "tax_id_number": "0001098745",
                "accounts_receivable_tax_type": "NONE",
                "accounts_payable_tax_type": "NONE",
                "is_supplier": True,
                "is_customer": False,
                "supplier_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "due_month_end_terms": False,
                },
                "customer_terms": {
                    "use_standard_terms": True,
                    "c_o_d_terms": False,
                    "prepaid_terms": False,
                    "terms_type": False,
                    "due_days": 30,
                    "discount_days": 10,
                    "discount_percent": 5,
                    "credit_limit": 5000,
                    "credit_status": 1,
                    "charge_finance_charges": False,
                    "due_month_end_terms": False,
                },
                "default_sales_account": "10200-00",
                "default_purchase_account": "75500-00",
                "customer_payment_method": "VISA",
                "supplier_payment_method": "VISA",
                "inactive": False
            }
        }


class Employee(BaseModel):
    display_name: str
    employee_first_name: Optional[str] = None
    employee_middle_initial: Optional[str] = None
    employee_last_name: Optional[str] = None
    employee_name: Optional[str] = None
    sales_rep: Optional[bool] = False
    employee: Optional[bool] = False
    inactive: Optional[bool] = False
    primary_address: Optional[EmployeeAddress] = None
    employee_social_security: Optional[str] = None
    employee_type: Optional[str] = None
    home_phone: Optional[str] = None
    employee_e_mail: Optional[str] = None
    federal_filing_status: Optional[int] = None
    federal_allowances: Optional[int] = None
    additional_fed_withholdings: Optional[float] = None
    state_filing_status: Optional[int] = None
    state_allowances: Optional[int] = None
    additional_state_withholdings: Optional[float] = None
    state_id: Optional[str] = None
    local_filing_status: Optional[int] = None
    local_allowances: Optional[int] = None
    additional_local_withholdings: Optional[float] = None
    special_1_allowances: Optional[str] = None
    special_2_allowances: Optional[str] = None
    plan_401k_additional_withholdings: Optional[float] = None
    special_1_additional_withholdings: Optional[float] = None
    special_2_additional_withholdings: Optional[float] = None
    locality: Optional[str] = None
    retirement_plan: Optional[bool] = False
    statutory_employee: Optional[bool] = False
    date_hired: Optional[str] = None
    date_last_raise: Optional[str] = None
    date_terminated: Optional[str] = None
    spouse: Optional[str] = None
    birthday: Optional[str] = None
    special_note: Optional[str] = None
    pay_method: Optional[int] = None
    pay_frequency: Optional[int] = None
    hours_per_pay_period: Optional[str] = None
    hourly_billing_rate: Optional[str] = None
    pay_info: Optional[PayrollInfo] = None
    raise_date: Optional[str] = None
    applicable_rate_index: Optional[int] = None
    applicable_rate_name: Optional[str] = None
    base_amount: Optional[float] = None
    raise_amount: Optional[float] = None
    raise_percentage: Optional[int] = None
    raise_notes: Optional[str] = None
    employee_suffix: Optional[str] = None
    employee_birth_date: Optional[str] = None
    date_rehired: Optional[str] = None
    gender: Optional[int] = None
    health_insurance_eligible: Optional[bool] = False
    receives_electronic_w_2: Optional[bool] = False
    annual_vacation_hours_given: Optional[int] = None
    vacation_hours_received_on: Optional[int] = None
    vacation_hours_maximum: Optional[int] = None
    annual_sick_time_hours_given: Optional[str] = None
    sick_time_hours_received_on: Optional[str] = None
    sick_time_hours_maximum: Optional[str] = None
    medical_fsa_amount: Optional[str] = None
    dependent_fsa_amount: Optional[str] = None
    dependent_fsa_status: Optional[str] = None
    adoption_fsa_amount: Optional[str] = None
    retirement_percentage: Optional[RetirementPercentage]
    retirement_catch_up: Optional[RetirementCatchUp]
    nickname: Optional[str] = None
    work_phone: Optional[str] = None
    mobile_phone: Optional[str] = None
    e_mail_2: Optional[str] = None
    ethnic_origin: Optional[int] = None
    marital_status: Optional[int] = None
    emergency_contact: Optional[EmergencyContact] = None
    employment_status: Optional[int] = None
    job_title: Optional[str] = None
    job_code: Optional[str] = None
    supervisor_id: Optional[str] = None
    division: Optional[str] = None
    location: Optional[str] = None
    department: Optional[str] = None
    i_9_verification_status: Optional[int] = None
    i_9_reverification_date: Optional[str] = None
    next_review_date: Optional[str] = None
    review_id: Optional[str] = None
    review_date: Optional[str] = None
    review_rating: Optional[str] = None
    reviewer_id: Optional[str] = None
    review_notes: Optional[str] = None
    special_3_allowances: Optional[str] = None
    special_4_allowances: Optional[str] = None
    special_5_allowances: Optional[str] = None
    special_3_additional_withholdings: Optional[float] = None
    special_4_additional_withholdings: Optional[float] = None
    special_5_additional_withholdings: Optional[float] = None
    uses_w4_prior_to_2020: Optional[bool] = False
    multiple_jobs: Optional[bool] = False
    fed_dependent_amount: Optional[float] = None
    fed_other_income_amount: Optional[float] = None
    fed_deduction_amount: Optional[float] = None

    class Config:
        schema_extra = {
            "example": {
                "display_name": "DONUTBOT-42",
                "employee_first_name": "DonutBot",
                "employee_middle_initial": "D",
                "employee_last_name": "42",
                "employee_name": "DonutBot D. 42",
                "employee_suffix": "",
                "employee_birth_date": "7/30/75",
                "sales_rep": False,
                "employee": True,
                "inactive": False,
                "primary_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "employee_social_security": "999-99-9999",
                "employee_type": "SERVICE",
                "home_phone": "540-555-1212",
                "employee_e_mail": "donutbot42@spacedonuts.space",
                "federal_filing_status": 0,
                "federal_allowances": 0,
                "additional_fed_withholdings": 0,
                "state_filing_status": 0,
                "state_allowances": 0,
                "additional_state_withholdings": 0,
                "state_id": "VA",
                "local_filing_status": 3,
                "local_allowances": 0,
                "additional_local_withholdings": 0,
                "special_1_allowances": 0,
                "special_2_allowances": 0,
                "401k_additional_withholdings": 0,
                "special_1_additional_withholdings": 0,
                "special_2_additional_withholdings": 0,
                "locality": "",
                "retirement_plan": False,
                "statutory_employee": False,
                "date_hired": "1/1/23",
                "date_last_raise": "",
                "date_terminated": "",
                "date_rehired": "",
                "spouse": "",
                "birthday": "",
                "special_note": "Android employee",
                "pay_method": 1,
                "pay_frequency": 1,
                "hours_per_pay_period": 80,
                "hourly_billing_rate": 0,
                "pay_info": {
                    "pay_info_use_standard_1": True,
                    "pay_info_account_id_1": "77500-00",
                    "pay_info_rate_number_1": 1,
                    "pay_info_rate_amount_1": 14,
                    "pay_info_use_standard_2": True,
                    "pay_info_account_id_2": "77500-00",
                    "pay_info_rate_number_2": 2,
                    "pay_info_rate_amount_2": 21,
                    "pay_info_use_standard_3": True,
                    "pay_info_account_id_3": "77500-00",
                    "pay_info_rate_number_3": 3,
                    "pay_info_rate_amount_3": 28,
                    "pay_info_use_standard_4": False,
                    "pay_info_account_id_4": "",
                    "pay_info_rate_number_4": 0,
                    "pay_info_rate_amount_4": 0,
                    "pay_info_use_standard_5": False,
                    "pay_info_account_id_5": "",
                    "pay_info_rate_number_5": 0,
                    "pay_info_rate_amount_5": 0
                },
                "raise_date": "4/1/07",
                "applicable_rate_index": 0,
                "applicable_rate_name": "",
                "base_amount": 14,
                "raise_amount": 1.4,
                "raise_percentage": 10,
                "raise_notes": "Annual performance evaluation pay increase.",
                "gender": 0,
                "health_insurance_eligible": False,
                "receives_electronic_w_2": False,
                "annual_vacation_hours_given": 0,
                "vacation_hours_received_on": 0,
                "vacation_hours_maximum": 0,
                "annual_sick_time_hours_given": 0,
                "sick_time_hours_received_on": 0,
                "sick_time_hours_maximum": 0,
                "medical_fsa_amount": 0,
                "dependent_fsa_amount": 0,
                "dependent_fsa_status": 0,
                "adoption_fsa_amount": 0,
                "retirement_percentage": {
                    "simple_percentage": 0,
                    "roth_401_k_percentage": 0,
                    "roth_ira_percentage": 0,
                    "ira_percentage": 0,
                    "plan_403_b_percentage": 0,
                    "roth_403b_percentage": 0,
                    "plan_457_b_percentage": 0,
                    "plan_408_k_percentage": 0
                },
                "retirement_catch_up": {
                    "plan_401_k_catch_up": False,
                    "simple_catch_up": False,
                    "roth_401_k_catch_up": False,
                    "roth_ira_catch_up": False,
                    "ira_catch_up": False,
                    "plan_403_b_catch_up": False,
                    "roth_403_b_catch_up": False,
                    "plan_457_b_catch_up": False,
                    "plan_408_k_catch_up": False
                },
                "nickname": "DonutBot",
                "work_phone": "800-123-4567",
                "mobile_phone": "800-987-6543",
                "e_mail_2": "donutbot@donutworld.com",
                "ethnic_origin": 0,
                "marital_status": 0,
                "emergency_contact": {
                    "emergency_contact_name": "RoboSupport",
                    "emergency_contact_relationship": "Technical Support",
                    "emergency_contact_phone_1": "800-555-1212",
                    "emergency_contact_phone_2": "800-555-1313"
                },
                "employment_status": 1,
                "job_title": "Donut Quality Assurance",
                "job_code": "DQA01",
                "supervisor_id": "DBOSS",
                "division": "Donut Division",
                "location": "Donut Factory",
                "department": "Quality Assurance",
                "i_9_verification_status": 1,
                "i_9_reverification_date": "",
                "next_review_date": "6/1/23",
                "review_id": "{E92125B4-180B-4851-AD53-8C01F1C9847B}",
                "review_date": "6/1/22",
                "review_rating": 9,
                "reviewer_id": "DBOSS",
                "review_notes": "Keep up the great work ensuring donut quality.",
                "uses_w4_prior_to_2020": True,
                "multiple_jobs": False,
                "fed_dependent_amount": 0,
                "fed_other_income_amount": 0,
                "fed_deduction_amount": 0
            }
        }


class EmployeeResponse(BaseModel):
    employee_id: str = None
    display_name: Optional[str] = None
    employee_first_name: Optional[str] = None
    employee_middle_initial: Optional[str] = None
    employee_last_name: Optional[str] = None
    employee_name: Optional[str] = None
    sales_rep: Optional[bool] = False
    employee: Optional[bool] = False
    inactive: Optional[bool] = False
    primary_address: Optional[EmployeeAddress] = None
    employee_social_security: Optional[str] = None
    employee_type: Optional[str] = None
    home_phone: Optional[str] = None
    employee_e_mail: Optional[str] = None
    federal_filing_status: Optional[int] = None
    federal_allowances: Optional[int] = None
    additional_fed_withholdings: Optional[float] = None
    state_filing_status: Optional[int] = None
    state_allowances: Optional[int] = None
    additional_state_withholdings: Optional[float] = None
    state_id: Optional[str] = None
    local_filing_status: Optional[int] = None
    local_allowances: Optional[int] = None
    additional_local_withholdings: Optional[float] = None
    special_1_allowances: Optional[str] = None
    special_2_allowances: Optional[str] = None
    plan_401k_additional_withholdings: Optional[float] = None
    special_1_additional_withholdings: Optional[float] = None
    special_2_additional_withholdings: Optional[float] = None
    locality: Optional[str] = None
    retirement_plan: Optional[bool] = False
    statutory_employee: Optional[bool] = False
    date_hired: Optional[str] = None
    date_last_raise: Optional[str] = None
    date_terminated: Optional[str] = None
    spouse: Optional[str] = None
    birthday: Optional[str] = None
    special_note: Optional[str] = None
    pay_method: Optional[int] = None
    pay_frequency: Optional[int] = None
    hours_per_pay_period: Optional[str] = None
    hourly_billing_rate: Optional[str] = None
    pay_info: Optional[PayrollInfo] = None
    raise_date: Optional[str] = None
    applicable_rate_index: Optional[int] = None
    applicable_rate_name: Optional[str] = None
    base_amount: Optional[float] = None
    raise_amount: Optional[float] = None
    raise_percentage: Optional[int] = None
    raise_notes: Optional[str] = None
    employee_suffix: Optional[str] = None
    employee_birth_date: Optional[str] = None
    date_rehired: Optional[str] = None
    gender: Optional[int] = None
    health_insurance_eligible: Optional[bool] = False
    receives_electronic_w_2: Optional[bool] = False
    annual_vacation_hours_given: Optional[int] = None
    vacation_hours_received_on: Optional[int] = None
    vacation_hours_maximum: Optional[int] = None
    annual_sick_time_hours_given: Optional[str] = None
    sick_time_hours_received_on: Optional[str] = None
    sick_time_hours_maximum: Optional[str] = None
    medical_fsa_amount: Optional[str] = None
    dependent_fsa_amount: Optional[str] = None
    dependent_fsa_status: Optional[str] = None
    adoption_fsa_amount: Optional[str] = None
    retirement_percentage: Optional[RetirementPercentage]
    retirement_catch_up: Optional[RetirementCatchUp]
    nickname: Optional[str] = None
    work_phone: Optional[str] = None
    mobile_phone: Optional[str] = None
    e_mail_2: Optional[str] = None
    ethnic_origin: Optional[int] = None
    marital_status: Optional[int] = None
    emergency_contact: Optional[EmergencyContact] = None
    employment_status: Optional[int] = None
    job_title: Optional[str] = None
    job_code: Optional[str] = None
    supervisor_id: Optional[str] = None
    division: Optional[str] = None
    location: Optional[str] = None
    department: Optional[str] = None
    i_9_verification_status: Optional[int] = None
    i_9_reverification_date: Optional[str] = None
    next_review_date: Optional[str] = None
    review_id: Optional[str] = None
    review_date: Optional[str] = None
    review_rating: Optional[str] = None
    reviewer_id: Optional[str] = None
    review_notes: Optional[str] = None
    special_3_allowances: Optional[str] = None
    special_4_allowances: Optional[str] = None
    special_5_allowances: Optional[str] = None
    special_3_additional_withholdings: Optional[float] = None
    special_4_additional_withholdings: Optional[float] = None
    special_5_additional_withholdings: Optional[float] = None
    uses_w4_prior_to_2020: Optional[bool] = False
    multiple_jobs: Optional[bool] = False
    fed_dependent_amount: Optional[float] = None
    fed_other_income_amount: Optional[float] = None
    fed_deduction_amount: Optional[float] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "employee_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "DONUTBOT-42",
                "employee_first_name": "DonutBot",
                "employee_middle_initial": "D",
                "employee_last_name": "42",
                "employee_name": "DonutBot D. 42",
                "employee_suffix": "",
                "employee_birth_date": "7/30/75",
                "sales_rep": False,
                "employee": True,
                "inactive": False,
                "primary_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "employee_social_security": "999-99-9999",
                "employee_type": "SERVICE",
                "home_phone": "540-555-1212",
                "employee_e_mail": "donutbot42@spacedonuts.space",
                "federal_filing_status": 0,
                "federal_allowances": 0,
                "additional_fed_withholdings": 0,
                "state_filing_status": 0,
                "state_allowances": 0,
                "additional_state_withholdings": 0,
                "state_id": "VA",
                "local_filing_status": 3,
                "local_allowances": 0,
                "additional_local_withholdings": 0,
                "special_1_allowances": 0,
                "special_2_allowances": 0,
                "401k_additional_withholdings": 0,
                "special_1_additional_withholdings": 0,
                "special_2_additional_withholdings": 0,
                "locality": "",
                "retirement_plan": False,
                "statutory_employee": False,
                "date_hired": "1/1/23",
                "date_last_raise": "",
                "date_terminated": "",
                "date_rehired": "",
                "spouse": "",
                "birthday": "",
                "special_note": "Android employee",
                "pay_method": 1,
                "pay_frequency": 1,
                "hours_per_pay_period": 80,
                "hourly_billing_rate": 0,
                "pay_info": {
                    "pay_info_use_standard_1": True,
                    "pay_info_account_id_1": "77500-00",
                    "pay_info_rate_number_1": 1,
                    "pay_info_rate_amount_1": 14,
                    "pay_info_use_standard_2": True,
                    "pay_info_account_id_2": "77500-00",
                    "pay_info_rate_number_2": 2,
                    "pay_info_rate_amount_2": 21,
                    "pay_info_use_standard_3": True,
                    "pay_info_account_id_3": "77500-00",
                    "pay_info_rate_number_3": 3,
                    "pay_info_rate_amount_3": 28,
                    "pay_info_use_standard_4": False,
                    "pay_info_account_id_4": "",
                    "pay_info_rate_number_4": 0,
                    "pay_info_rate_amount_4": 0,
                    "pay_info_use_standard_5": False,
                    "pay_info_account_id_5": "",
                    "pay_info_rate_number_5": 0,
                    "pay_info_rate_amount_5": 0
                },
                "raise_date": "4/1/07",
                "applicable_rate_index": 0,
                "applicable_rate_name": "",
                "base_amount": 14,
                "raise_amount": 1.4,
                "raise_percentage": 10,
                "raise_notes": "Annual performance evaluation pay increase.",
                "gender": 0,
                "health_insurance_eligible": False,
                "receives_electronic_w_2": False,
                "annual_vacation_hours_given": 0,
                "vacation_hours_received_on": 0,
                "vacation_hours_maximum": 0,
                "annual_sick_time_hours_given": 0,
                "sick_time_hours_received_on": 0,
                "sick_time_hours_maximum": 0,
                "medical_fsa_amount": 0,
                "dependent_fsa_amount": 0,
                "dependent_fsa_status": 0,
                "adoption_fsa_amount": 0,
                "retirement_percentage": {
                    "simple_percentage": 0,
                    "roth_401_k_percentage": 0,
                    "roth_ira_percentage": 0,
                    "ira_percentage": 0,
                    "plan_403_b_percentage": 0,
                    "roth_403b_percentage": 0,
                    "plan_457_b_percentage": 0,
                    "plan_408_k_percentage": 0
                },
                "retirement_catch_up": {
                    "plan_401_k_catch_up": False,
                    "simple_catch_up": False,
                    "roth_401_k_catch_up": False,
                    "roth_ira_catch_up": False,
                    "ira_catch_up": False,
                    "plan_403_b_catch_up": False,
                    "roth_403_b_catch_up": False,
                    "plan_457_b_catch_up": False,
                    "plan_408_k_catch_up": False
                },
                "nickname": "DonutBot",
                "work_phone": "800-123-4567",
                "mobile_phone": "800-987-6543",
                "e_mail_2": "donutbot@donutworld.com",
                "ethnic_origin": 0,
                "marital_status": 0,
                "emergency_contact": {
                    "emergency_contact_name": "RoboSupport",
                    "emergency_contact_relationship": "Technical Support",
                    "emergency_contact_phone_1": "800-555-1212",
                    "emergency_contact_phone_2": "800-555-1313"
                },
                "employment_status": 1,
                "job_title": "Donut Quality Assurance",
                "job_code": "DQA01",
                "supervisor_id": "DBOSS",
                "division": "Donut Division",
                "location": "Donut Factory",
                "department": "Quality Assurance",
                "i_9_verification_status": 1,
                "i_9_reverification_date": "",
                "next_review_date": "6/1/23",
                "review_id": "{E92125B4-180B-4851-AD53-8C01F1C9847B}",
                "review_date": "6/1/22",
                "review_rating": 9,
                "reviewer_id": "DBOSS",
                "review_notes": "Keep up the great work ensuring donut quality.",
                "uses_w4_prior_to_2020": True,
                "multiple_jobs": False,
                "fed_dependent_amount": 0,
                "fed_other_income_amount": 0,
                "fed_deduction_amount": 0
            }
        }


class UpdateEmployeeResponse(BaseModel):
    employee_id: str = None
    display_name: Optional[str] = None
    employee_first_name: Optional[str] = None
    employee_middle_initial: Optional[str] = None
    employee_last_name: Optional[str] = None
    employee_name: Optional[str] = None
    sales_rep: Optional[bool] = False
    employee: Optional[bool] = False
    inactive: Optional[bool] = False
    primary_address: Optional[EmployeeAddress] = None
    employee_social_security: Optional[str] = None
    employee_type: Optional[str] = None
    home_phone: Optional[str] = None
    employee_e_mail: Optional[str] = None
    federal_filing_status: Optional[int] = None
    federal_allowances: Optional[int] = None
    additional_fed_withholdings: Optional[float] = None
    state_filing_status: Optional[int] = None
    state_allowances: Optional[int] = None
    additional_state_withholdings: Optional[float] = None
    state_id: Optional[str] = None
    local_filing_status: Optional[int] = None
    local_allowances: Optional[int] = None
    additional_local_withholdings: Optional[float] = None
    special_1_allowances: Optional[str] = None
    special_2_allowances: Optional[str] = None
    plan_401k_additional_withholdings: Optional[float] = None
    special_1_additional_withholdings: Optional[float] = None
    special_2_additional_withholdings: Optional[float] = None
    locality: Optional[str] = None
    retirement_plan: Optional[bool] = False
    statutory_employee: Optional[bool] = False
    date_hired: Optional[str] = None
    date_last_raise: Optional[str] = None
    date_terminated: Optional[str] = None
    spouse: Optional[str] = None
    birthday: Optional[str] = None
    special_note: Optional[str] = None
    pay_method: Optional[str] = None
    pay_frequency: Optional[str] = None
    hours_per_pay_period: Optional[str] = None
    hourly_billing_rate: Optional[str] = None
    pay_info: Optional[PayrollInfo] = None
    raise_date: Optional[str] = None
    applicable_rate_index: Optional[int] = None
    applicable_rate_name: Optional[str] = None
    base_amount: Optional[float] = None
    raise_amount: Optional[float] = None
    raise_percentage: Optional[int] = None
    raise_notes: Optional[str] = None
    employee_suffix: Optional[str] = None
    employee_birth_date: Optional[str] = None
    date_rehired: Optional[str] = None
    gender: Optional[int] = None
    health_insurance_eligible: Optional[bool] = False
    receives_electronic_w_2: Optional[bool] = False
    annual_vacation_hours_given: Optional[int] = None
    vacation_hours_received_on: Optional[int] = None
    vacation_hours_maximum: Optional[int] = None
    annual_sick_time_hours_given: Optional[str] = None
    sick_time_hours_received_on: Optional[str] = None
    sick_time_hours_maximum: Optional[str] = None
    medical_fsa_amount: Optional[str] = None
    dependent_fsa_amount: Optional[str] = None
    dependent_fsa_status: Optional[str] = None
    adoption_fsa_amount: Optional[str] = None
    retirement_percentage: Optional[RetirementPercentage]
    retirement_catch_up: Optional[RetirementCatchUp]
    nickname: Optional[str] = None
    work_phone: Optional[str] = None
    mobile_phone: Optional[str] = None
    e_mail_2: Optional[str] = None
    ethnic_origin: Optional[int] = None
    marital_status: Optional[int] = None
    emergency_contact: Optional[EmergencyContact] = None
    employment_status: Optional[int] = None
    job_title: Optional[str] = None
    job_code: Optional[str] = None
    supervisor_id: Optional[str] = None
    division: Optional[str] = None
    location: Optional[str] = None
    department: Optional[str] = None
    i_9_verification_status: Optional[int] = None
    i_9_reverification_date: Optional[str] = None
    next_review_date: Optional[str] = None
    review_id: Optional[str] = None
    review_date: Optional[str] = None
    review_rating: Optional[str] = None
    reviewer_id: Optional[str] = None
    review_notes: Optional[str] = None
    special_3_allowances: Optional[str] = None
    special_4_allowances: Optional[str] = None
    special_5_allowances: Optional[str] = None
    special_3_additional_withholdings: Optional[float] = None
    special_4_additional_withholdings: Optional[float] = None
    special_5_additional_withholdings: Optional[float] = None
    uses_w4_prior_to_2020: Optional[bool] = False
    multiple_jobs: Optional[bool] = False
    fed_dependent_amount: Optional[float] = None
    fed_other_income_amount: Optional[float] = None
    fed_deduction_amount: Optional[float] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "employee_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "DONUTBOT-42",
                "employee_first_name": "DonutBot",
                "employee_middle_initial": "D",
                "employee_last_name": "42",
                "employee_name": "DonutBot D. 42",
                "employee_suffix": "",
                "employee_birth_date": "7/30/75",
                "sales_rep": False,
                "employee": True,
                "inactive": False,
                "primary_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "employee_social_security": "999-99-9999",
                "employee_type": "SERVICE",
                "home_phone": "540-555-1212",
                "employee_e_mail": "donutbot42@spacedonuts.space",
                "federal_filing_status": 0,
                "federal_allowances": 0,
                "additional_fed_withholdings": 0,
                "state_filing_status": 0,
                "state_allowances": 0,
                "additional_state_withholdings": 0,
                "state_id": "VA",
                "local_filing_status": 3,
                "local_allowances": 0,
                "additional_local_withholdings": 0,
                "special_1_allowances": 0,
                "special_2_allowances": 0,
                "401k_additional_withholdings": 0,
                "special_1_additional_withholdings": 0,
                "special_2_additional_withholdings": 0,
                "locality": "",
                "retirement_plan": False,
                "statutory_employee": False,
                "date_hired": "1/1/23",
                "date_last_raise": "",
                "date_terminated": "",
                "date_rehired": "",
                "spouse": "",
                "birthday": "",
                "special_note": "Android employee",
                "pay_method": 1,
                "pay_frequency": 1,
                "hours_per_pay_period": 80,
                "hourly_billing_rate": 0,
                "pay_info": {
                    "pay_info_use_standard_1": True,
                    "pay_info_account_id_1": "77500-00",
                    "pay_info_rate_number_1": 1,
                    "pay_info_rate_amount_1": 14,
                    "pay_info_use_standard_2": True,
                    "pay_info_account_id_2": "77500-00",
                    "pay_info_rate_number_2": 2,
                    "pay_info_rate_amount_2": 21,
                    "pay_info_use_standard_3": True,
                    "pay_info_account_id_3": "77500-00",
                    "pay_info_rate_number_3": 3,
                    "pay_info_rate_amount_3": 28,
                    "pay_info_use_standard_4": False,
                    "pay_info_account_id_4": "",
                    "pay_info_rate_number_4": 0,
                    "pay_info_rate_amount_4": 0,
                    "pay_info_use_standard_5": False,
                    "pay_info_account_id_5": "",
                    "pay_info_rate_number_5": 0,
                    "pay_info_rate_amount_5": 0
                },
                "raise_date": "4/1/07",
                "applicable_rate_index": 0,
                "applicable_rate_name": "",
                "base_amount": 14,
                "raise_amount": 1.4,
                "raise_percentage": 10,
                "raise_notes": "Annual performance evaluation pay increase.",
                "gender": 0,
                "health_insurance_eligible": False,
                "receives_electronic_w_2": False,
                "annual_vacation_hours_given": 0,
                "vacation_hours_received_on": 0,
                "vacation_hours_maximum": 0,
                "annual_sick_time_hours_given": 0,
                "sick_time_hours_received_on": 0,
                "sick_time_hours_maximum": 0,
                "medical_fsa_amount": 0,
                "dependent_fsa_amount": 0,
                "dependent_fsa_status": 0,
                "adoption_fsa_amount": 0,
                "retirement_percentage": {
                    "simple_percentage": 0,
                    "roth_401_k_percentage": 0,
                    "roth_ira_percentage": 0,
                    "ira_percentage": 0,
                    "plan_403_b_percentage": 0,
                    "roth_403b_percentage": 0,
                    "plan_457_b_percentage": 0,
                    "plan_408_k_percentage": 0
                },
                "retirement_catch_up": {
                    "plan_401_k_catch_up": False,
                    "simple_catch_up": False,
                    "roth_401_k_catch_up": False,
                    "roth_ira_catch_up": False,
                    "ira_catch_up": False,
                    "plan_403_b_catch_up": False,
                    "roth_403_b_catch_up": False,
                    "plan_457_b_catch_up": False,
                    "plan_408_k_catch_up": False
                },
                "nickname": "DonutBot",
                "work_phone": "800-123-4567",
                "mobile_phone": "800-987-6543",
                "e_mail_2": "donutbot@donutworld.com",
                "ethnic_origin": 0,
                "marital_status": 0,
                "emergency_contact": {
                    "emergency_contact_name": "RoboSupport",
                    "emergency_contact_relationship": "Technical Support",
                    "emergency_contact_phone_1": "800-555-1212",
                    "emergency_contact_phone_2": "800-555-1313"
                },
                "employment_status": 1,
                "job_title": "Donut Quality Assurance",
                "job_code": "DQA01",
                "supervisor_id": "DBOSS",
                "division": "Donut Division",
                "location": "Donut Factory",
                "department": "Quality Assurance",
                "i_9_verification_status": 1,
                "i_9_reverification_date": "",
                "next_review_date": "6/1/23",
                "review_id": "{E92125B4-180B-4851-AD53-8C01F1C9847B}",
                "review_date": "6/1/22",
                "review_rating": 9,
                "reviewer_id": "DBOSS",
                "review_notes": "Keep up the great work ensuring donut quality.",
                "uses_w4_prior_to_2020": True,
                "multiple_jobs": False,
                "fed_dependent_amount": 0,
                "fed_other_income_amount": 0,
                "fed_deduction_amount": 0
            }
        }


class UpdateEmployee(BaseModel):
    employee_id: str = None
    display_name: Optional[str] = None
    employee_first_name: Optional[str] = None
    employee_middle_initial: Optional[str] = None
    employee_last_name: Optional[str] = None
    employee_name: Optional[str] = None
    sales_rep: Optional[bool] = False
    employee: Optional[bool] = False
    inactive: Optional[bool] = False
    primary_address: Optional[EmployeeAddress] = None
    employee_social_security: Optional[str] = None
    employee_type: Optional[str] = None
    home_phone: Optional[str] = None
    employee_e_mail: Optional[str] = None
    federal_filing_status: Optional[int] = None
    federal_allowances: Optional[int] = None
    additional_fed_withholdings: Optional[float] = None
    state_filing_status: Optional[int] = None
    state_allowances: Optional[int] = None
    additional_state_withholdings: Optional[float] = None
    state_id: Optional[str] = None
    local_filing_status: Optional[int] = None
    local_allowances: Optional[int] = None
    additional_local_withholdings: Optional[float] = None
    special_1_allowances: Optional[str] = None
    special_2_allowances: Optional[str] = None
    plan_401k_additional_withholdings: Optional[float] = None
    special_1_additional_withholdings: Optional[float] = None
    special_2_additional_withholdings: Optional[float] = None
    locality: Optional[str] = None
    retirement_plan: Optional[bool] = False
    statutory_employee: Optional[bool] = False
    date_hired: Optional[str] = None
    date_last_raise: Optional[str] = None
    date_terminated: Optional[str] = None
    spouse: Optional[str] = None
    birthday: Optional[str] = None
    special_note: Optional[str] = None
    pay_method: Optional[int] = None
    pay_frequency: Optional[int] = None
    hours_per_pay_period: Optional[str] = None
    hourly_billing_rate: Optional[str] = None
    pay_info: Optional[PayrollInfo] = None
    raise_date: Optional[str] = None
    applicable_rate_index: Optional[int] = None
    applicable_rate_name: Optional[str] = None
    base_amount: Optional[float] = None
    raise_amount: Optional[float] = None
    raise_percentage: Optional[int] = None
    raise_notes: Optional[str] = None
    employee_suffix: Optional[str] = None
    employee_birth_date: Optional[str] = None
    date_rehired: Optional[str] = None
    gender: Optional[int] = None
    health_insurance_eligible: Optional[bool] = False
    receives_electronic_w_2: Optional[bool] = False
    annual_vacation_hours_given: Optional[int] = None
    vacation_hours_received_on: Optional[int] = None
    vacation_hours_maximum: Optional[int] = None
    annual_sick_time_hours_given: Optional[str] = None
    sick_time_hours_received_on: Optional[str] = None
    sick_time_hours_maximum: Optional[str] = None
    medical_fsa_amount: Optional[str] = None
    dependent_fsa_amount: Optional[str] = None
    dependent_fsa_status: Optional[str] = None
    adoption_fsa_amount: Optional[str] = None
    retirement_percentage: Optional[RetirementPercentage]
    retirement_catch_up: Optional[RetirementCatchUp]
    nickname: Optional[str] = None
    work_phone: Optional[str] = None
    mobile_phone: Optional[str] = None
    e_mail_2: Optional[str] = None
    ethnic_origin: Optional[int] = None
    marital_status: Optional[int] = None
    emergency_contact: Optional[EmergencyContact] = None
    employment_status: Optional[int] = None
    job_title: Optional[str] = None
    job_code: Optional[str] = None
    supervisor_id: Optional[str] = None
    division: Optional[str] = None
    location: Optional[str] = None
    department: Optional[str] = None
    i_9_verification_status: Optional[int] = None
    i_9_reverification_date: Optional[str] = None
    next_review_date: Optional[str] = None
    review_id: Optional[str] = None
    review_date: Optional[str] = None
    review_rating: Optional[str] = None
    reviewer_id: Optional[str] = None
    review_notes: Optional[str] = None
    special_3_allowances: Optional[str] = None
    special_4_allowances: Optional[str] = None
    special_5_allowances: Optional[str] = None
    special_3_additional_withholdings: Optional[float] = None
    special_4_additional_withholdings: Optional[float] = None
    special_5_additional_withholdings: Optional[float] = None
    uses_w4_prior_to_2020: Optional[bool] = False
    multiple_jobs: Optional[bool] = False
    fed_dependent_amount: Optional[float] = None
    fed_other_income_amount: Optional[float] = None
    fed_deduction_amount: Optional[float] = None

    class Config:
        schema_extra = {
            "example": {
                "employee_id": "00000000-0000-0000-0000-000000000000",
                "display_name": "DONUTBOT-42",
                "employee_first_name": "DonutBot",
                "employee_middle_initial": "D",
                "employee_last_name": "42",
                "employee_name": "DonutBot D. 42",
                "employee_suffix": "",
                "employee_birth_date": "7/30/75",
                "sales_rep": False,
                "employee": True,
                "inactive": False,
                "primary_address": {
                    "line_1": "1000 Horizon Way",
                    "line_2": "",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "employee_social_security": "999-99-9999",
                "employee_type": "SERVICE",
                "home_phone": "540-555-1212",
                "employee_e_mail": "donutbot42@spacedonuts.space",
                "federal_filing_status": 0,
                "federal_allowances": 0,
                "additional_fed_withholdings": 0,
                "state_filing_status": 0,
                "state_allowances": 0,
                "additional_state_withholdings": 0,
                "state_id": "VA",
                "local_filing_status": 3,
                "local_allowances": 0,
                "additional_local_withholdings": 0,
                "special_1_allowances": 0,
                "special_2_allowances": 0,
                "401k_additional_withholdings": 0,
                "special_1_additional_withholdings": 0,
                "special_2_additional_withholdings": 0,
                "locality": "",
                "retirement_plan": False,
                "statutory_employee": False,
                "date_hired": "1/1/23",
                "date_last_raise": "",
                "date_terminated": "",
                "date_rehired": "",
                "spouse": "",
                "birthday": "",
                "special_note": "Android employee",
                "pay_method": 1,
                "pay_frequency": 1,
                "hours_per_pay_period": 80,
                "hourly_billing_rate": 0,
                "pay_info": {
                    "pay_info_use_standard_1": True,
                    "pay_info_account_id_1": "77500-00",
                    "pay_info_rate_number_1": 1,
                    "pay_info_rate_amount_1": 14,
                    "pay_info_use_standard_2": True,
                    "pay_info_account_id_2": "77500-00",
                    "pay_info_rate_number_2": 2,
                    "pay_info_rate_amount_2": 21,
                    "pay_info_use_standard_3": True,
                    "pay_info_account_id_3": "77500-00",
                    "pay_info_rate_number_3": 3,
                    "pay_info_rate_amount_3": 28,
                    "pay_info_use_standard_4": False,
                    "pay_info_account_id_4": "",
                    "pay_info_rate_number_4": 0,
                    "pay_info_rate_amount_4": 0,
                    "pay_info_use_standard_5": False,
                    "pay_info_account_id_5": "",
                    "pay_info_rate_number_5": 0,
                    "pay_info_rate_amount_5": 0
                },
                "raise_date": "4/1/23",
                "applicable_rate_index": 0,
                "applicable_rate_name": "",
                "base_amount": 14,
                "raise_amount": 1.4,
                "raise_percentage": 10,
                "raise_notes": "Annual performance evaluation pay increase.",
                "gender": 0,
                "health_insurance_eligible": False,
                "receives_electronic_w_2": False,
                "annual_vacation_hours_given": 0,
                "vacation_hours_received_on": 0,
                "vacation_hours_maximum": 0,
                "annual_sick_time_hours_given": 0,
                "sick_time_hours_received_on": 0,
                "sick_time_hours_maximum": 0,
                "medical_fsa_amount": 0,
                "dependent_fsa_amount": 0,
                "dependent_fsa_status": 0,
                "adoption_fsa_amount": 0,
                "retirement_percentage": {
                    "simple_percentage": 0,
                    "roth_401_k_percentage": 0,
                    "roth_ira_percentage": 0,
                    "ira_percentage": 0,
                    "plan_403_b_percentage": 0,
                    "roth_403b_percentage": 0,
                    "plan_457_b_percentage": 0,
                    "plan_408_k_percentage": 0
                },
                "retirement_catch_up": {
                    "plan_401_k_catch_up": False,
                    "simple_catch_up": False,
                    "roth_401_k_catch_up": False,
                    "roth_ira_catch_up": False,
                    "ira_catch_up": False,
                    "plan_403_b_catch_up": False,
                    "roth_403_b_catch_up": False,
                    "plan_457_b_catch_up": False,
                    "plan_408_k_catch_up": False
                },
                "nickname": "DonutBot",
                "work_phone": "800-123-4567",
                "mobile_phone": "800-987-6543",
                "e_mail_2": "donutbot@donutworld.com",
                "ethnic_origin": 0,
                "marital_status": 0,
                "emergency_contact": {
                    "emergency_contact_name": "RoboSupport",
                    "emergency_contact_relationship": "Technical Support",
                    "emergency_contact_phone_1": "800-555-1212",
                    "emergency_contact_phone_2": "800-555-1313"
                },
                "employment_status": 1,
                "job_title": "Donut Quality Assurance",
                "job_code": "DQA01",
                "supervisor_id": "DBOSS",
                "division": "Donut Division",
                "location": "Donut Factory",
                "department": "Quality Assurance",
                "i_9_verification_status": 1,
                "i_9_reverification_date": "",
                "next_review_date": "6/1/23",
                "review_id": "{E92125B4-180B-4851-AD53-8C01F1C9847B}",
                "review_date": "6/1/22",
                "review_rating": 9,
                "reviewer_id": "DBOSS",
                "review_notes": "Keep up the great work ensuring donut quality.",
                "uses_w4_prior_to_2020": True,
                "multiple_jobs": False,
                "fed_dependent_amount": 0,
                "fed_other_income_amount": 0,
                "fed_deduction_amount": 0
            }
        }


class Item(BaseModel):
    item_code: Optional[str] = None
    item_class: Optional[str] = None
    display_name: Optional[str] = None
    unit_price: Optional[float] = None
    last_unit_cost: Optional[float] = None
    description: Optional[str] = None
    purchase_description: Optional[str] = None
    quantity_on_hand: Optional[int] = None
    sales_ledger_account_id: Optional[str] = None
    inventory_ledger_account_id: Optional[str] = None
    cogs_ledger_account_id: Optional[str] = None
    tax_type: Optional[TaxType] = None
    costing_method: Optional[CostingMethod] = None
    notes: Optional[str] = None
    inactive: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "item_code": "BDH001",
                "item_class": "Food",
                "display_name": "Black Donut Hole",
                "unit_price": 0.99,
                "last_unit_cost": 0.50,
                "description": "A delicious and unique donut hole from Spacedonuts.space.",
                "purchase_description": "Black Donut Hole for resale",
                "quantity_on_hand": 100,
                "sales_ledger_account_id": "400",
                "inventory_ledger_account_id": "105",
                "cogs_ledger_account_id": "500",
                "tax_type": "SALES",
                "costing_method": "FIFO",
                "notes": "Best seller on Spacedonuts.space",
                "inactive": False,
            }
        }


class ItemResponse(BaseModel):
    item_id: str = None
    item_code: Optional[str] = None
    item_class: Optional[str] = None
    display_name: Optional[str] = None
    unit_price: Optional[float] = None
    last_unit_cost: Optional[float] = None
    description: Optional[str] = None
    purchase_description: Optional[str] = None
    quantity_on_hand: Optional[int] = None
    sales_ledger_account_id: Optional[str] = None
    inventory_ledger_account_id: Optional[str] = None
    cogs_ledger_account_id: Optional[str] = None
    tax_type: Optional[TaxType] = None
    costing_method: Optional[CostingMethod] = None
    notes: Optional[str] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "item_id": "00000000-0000-0000-0000-000000000000",
                "item_code": "BDH001",
                "item_class": "Food",
                "display_name": "Black Donut Hole",
                "unit_price": 0.99,
                "last_unit_cost": 0.50,
                "description": "A delicious and unique donut hole from Spacedonuts.space.",
                "purchase_description": "Black Donut Hole for resale",
                "quantity_on_hand": 100,
                "sales_ledger_account_id": "400",
                "inventory_ledger_account_id": "105",
                "cogs_ledger_account_id": "500",
                "tax_type": "SALES",
                "costing_method": "FIFO",
                "notes": "Best seller on Spacedonuts.space",
                "inactive": False,
            }
        }


class UpdateItemResponse(BaseModel):
    item_id: str = None
    item_code: Optional[str] = None
    item_class: Optional[str] = None
    display_name: Optional[str] = None
    unit_price: Optional[float] = None
    last_unit_cost: Optional[float] = None
    description: Optional[str] = None
    purchase_description: Optional[str] = None
    quantity_on_hand: Optional[int] = None
    sales_ledger_account_id: Optional[str] = None
    inventory_ledger_account_id: Optional[str] = None
    cogs_ledger_account_id: Optional[str] = None
    tax_type: Optional[TaxType] = None
    costing_method: Optional[CostingMethod] = None
    notes: Optional[str] = None
    inactive: Optional[bool] = False
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "item_id": "00000000-0000-0000-0000-000000000000",
                "item_code": "BDH001",
                "item_class": "Food",
                "display_name": "Black Donut Hole",
                "unit_price": 0.99,
                "last_unit_cost": 0.50,
                "description": "A delicious and unique donut hole from Spacedonuts.space.",
                "purchase_description": "Black Donut Hole for resale",
                "quantity_on_hand": 100,
                "sales_ledger_account_id": "400",
                "inventory_ledger_account_id": "105",
                "cogs_ledger_account_id": "500",
                "tax_type": "SALES",
                "costing_method": "FIFO",
                "notes": "Best seller on Spacedonuts.space",
                "inactive": False,
            }
        }


class UpdateItem(BaseModel):
    item_code: Optional[str] = None
    item_class: Optional[str] = None
    display_name: Optional[str] = None
    unit_price: Optional[float] = None
    last_unit_cost: Optional[float] = None
    description: Optional[str] = None
    purchase_description: Optional[str] = None
    quantity_on_hand: Optional[int] = None
    sales_ledger_account_id: Optional[str] = None
    inventory_ledger_account_id: Optional[str] = None
    cogs_ledger_account_id: Optional[str] = None
    tax_type: Optional[TaxType] = None
    costing_method: Optional[CostingMethod] = None
    notes: Optional[str] = None
    inactive: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "item_id": "00000000-0000-0000-0000-000000000000",
                "item_code": "BDH001",
                "item_class": "Food",
                "display_name": "Black Donut Hole",
                "unit_price": 0.99,
                "last_unit_cost": 0.50,
                "description": "A delicious and unique donut hole from Spacedonuts.space.",
                "purchase_description": "Black Donut Hole for resale",
                "quantity_on_hand": 100,
                "sales_ledger_account_id": "400",
                "inventory_ledger_account_id": "105",
                "cogs_ledger_account_id": "500",
                "tax_type": "SALES",
                "costing_method": "FIFO",
                "notes": "Best seller on Spacedonuts.space",
                "inactive": False,
            }
        }


class CreditMemo(BaseModel):
    balance: Optional[float] = None
    billing_address: Optional[BillingAddress] = None
    billing_email: Optional[EmailLabel] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    contact_reference: Optional[NameValueLabel] = None
    contact_memo: Optional[ValueLabel] = None
    shipping_address: Optional[ShippingAddress] = None
    remaining_credit: Optional[str] = None
    print_status: Optional[str] = None
    email_status: Optional[str] = None
    apply_tax_after_discount: Optional[bool] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    payment_method: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "balance": 0,
                "billing_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "bill_email": {
                    "email": "donutlover@donutmail.com"
                },
                "transaction_date": "2022-04-01",
                "total_amount": 100,
                "contact_reference": {
                    "name": "Donut Lover",
                    "contact_id": "2"
                },
                "contact_memo": {
                    "value": "12.00 credit applied to the account."
                },
                "shipping_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "remaining_credit": 12,
                "print_status": "NeedToPrint",
                "email_status": "NotSet",
                "payment_method": "CASH"
            }

        }


class CreditMemoResponse(BaseModel):
    credit_memo_id: str = None
    balance: Optional[float] = None
    billing_address: Optional[BillingAddress] = None
    billing_email: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    contact_id: Optional[str] = None
    contact_memo: Optional[str] = None
    shipping_address: Optional[ShippingAddress] = None
    remaining_credit: Optional[str] = None
    print_status: Optional[str] = None
    email_status: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    apply_tax_after_discount: Optional[bool] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    payment_method: Optional[str] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "credit_memo_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "balance": 0,
                "billing_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "bill_email": {
                    "email": "donutlover@donutmail.com"
                },
                "transaction_date": "2022-04-01",
                "total_amount": 100,
                "contact_reference": {
                    "name": "Donut Lover",
                    "contact_id": "2"
                },
                "contact_memo": {
                    "value": "12.00 credit applied to the account."
                },
                "shipping_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "remaining_credit": 12,
                "print_status": "NeedToPrint",
                "email_status": "NotSet",
                "payment_method": "CASH"
            }

        }


class UpdateCreditMemoResponse(BaseModel):
    credit_memo_id: str = None
    balance: Optional[float] = None
    billing_address: Optional[BillingAddress] = None
    billing_email: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    contact_id: Optional[str] = None
    contact_memo: Optional[str] = None
    shipping_address: Optional[ShippingAddress] = None
    remaining_credit: Optional[str] = None
    print_status: Optional[str] = None
    email_status: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    apply_tax_after_discount: Optional[bool] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    payment_method: Optional[str] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "credit_memo_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "balance": 0,
                "billing_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "bill_email": {
                    "email": "donutlover@donutmail.com"
                },
                "transaction_date": "2022-04-01",
                "total_amount": 100,
                "contact_reference": {
                    "name": "Donut Lover",
                    "contact_id": "2"
                },
                "contact_memo": {
                    "value": "12.00 credit applied to the account."
                },
                "shipping_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "remaining_credit": 12,
                "print_status": "NeedToPrint",
                "email_status": "NotSet",
                "payment_method": "CASH"
            }

        }


class UpdateCreditMemo(BaseModel):
    credit_memo_id: str = None
    balance: Optional[float] = None
    billing_address: Optional[BillingAddress] = None
    billing_email: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    contact_id: Optional[str] = None
    contact_memo: Optional[str] = None
    shipping_address: Optional[ShippingAddress] = None
    remaining_credit: Optional[str] = None
    print_status: Optional[str] = None
    email_status: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    apply_tax_after_discount: Optional[bool] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    payment_method: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "credit_memo_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "balance": 0,
                "billing_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "bill_email": {
                    "email": "donutlover@donutmail.com"
                },
                "transaction_date": "2022-04-01",
                "total_amount": 100,
                "contact_reference": {
                    "name": "Donut Lover",
                    "contact_id": "2"
                },
                "contact_memo": {
                    "value": "12.00 credit applied to the account."
                },
                "shipping_address": {
                    "line_1": "123 Donut Lane",
                    "line_2": "Apt 4B",
                    "city": "Star City",
                    "region": "VA",
                    "postal_code": "24017",
                    "country": "US"
                },
                "remaining_credit": 12,
                "print_status": "NeedToPrint",
                "email_status": "NotSet",
                "payment_method": "CASH"
            }

        }


class VendorCreditMemo(BaseModel):
    contact_reference: Optional[NameValueLabel] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    ap_account_reference: Optional[NameValueLabel] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_reference": {
                    "name": "Redbean Coffee Company",
                    "value": "45"
                },
                "transaction_date": "2022-03-23",
                "total_amount": 90,
                "ap_account_reference": {
                    "name": "Accounts Payable (A/P)",
                    "value": "33"
                },
                "memo": {
                    "value": "Credit for 40 lbs of coffee beans."
                }
            }

        }


class VendorCreditMemoResponse(BaseModel):
    vendor_credit_memo_id: str = None
    contact_reference: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    ap_account_reference: Optional[float] = None
    line_items: Optional[List[LineItems]] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "vendor_credit_memo_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_reference": {
                    "name": "Redbean Coffee Company",
                    "value": "45"
                },
                "transaction_date": "2022-03-23",
                "total_amount": 90,
                "ap_account_reference": {
                    "name": "Accounts Payable (A/P)",
                    "value": "33"
                },
                "memo": {
                    "value": "Credit for 40 lbs of coffee beans."
                }
            }

        }


class UpdateVendorCreditMemoResponse(BaseModel):
    vendor_credit_memo_id: str = None
    contact_reference: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    ap_account_reference: Optional[float] = None
    line_items: Optional[List[LineItems]] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "vendor_credit_memo_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_reference": {
                    "name": "Redbean Coffee Company",
                    "value": "45"
                },
                "transaction_date": "2022-03-23",
                "total_amount": 90,
                "ap_account_reference": {
                    "name": "Accounts Payable (A/P)",
                    "value": "33"
                },
                "memo": {
                    "value": "Credit for 40 lbs of coffee beans."
                }
            }

        }


class UpdateVendorCreditMemo(BaseModel):
    vendor_credit_memo_id: str = None
    contact_reference: Optional[NameValueLabel] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    ap_account_reference: Optional[NameValueLabel] = None

    class Config:
        schema_extra = {
            "example": {
                "vendor_credit_memo_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_reference": {
                    "name": "Redbean Coffee Company",
                    "value": "45"
                },
                "transaction_date": "2022-03-23",
                "total_amount": 90,
                "ap_account_reference": {
                    "name": "Accounts Payable (A/P)",
                    "value": "33"
                },
                "memo": {
                    "value": "Credit for 40 lbs of coffee beans."
                }
            }

        }


class SalesPayment(BaseModel):
    total_amount: float = None
    contact_id: str = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    income_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: Optional[str] = None
    sales_invoice_paid: Optional[str] = None
    discount_amount: Optional[str] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "total_amount": 11.88,
                "contact_id": 1,
                "total_tax": 0,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "category": "Sales",
                "cash_ledger_account": "101",
                "income_ledger_account": "501",
                "line_items": [
                    {
                        "item_id": 1,
                        "amount": 11.88,
                        "quantity": 12,
                        "item_price": .99,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "payment_method": "Credit Card",
                "sales_invoice_paid": "invoice_123",
                "discount_amount": "0",
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class SalesPaymentResponse(BaseModel):
    sales_payment_id: str = None
    total_amount: float = None
    contact_id: Optional[str] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    income_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: str = None
    sales_invoice_paid: str = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = None
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_payment_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "total_amount": 11.88,
                "contact_id": 1,
                "total_tax": 0,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "category": "Sales",
                "cash_ledger_account": "101",
                "income_ledger_account": "501",
                "line_items": [
                    {
                        "item_id": 1,
                        "amount": 11.88,
                        "quantity": 12,
                        "item_price": .99,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "payment_method": "Credit Card",
                "sales_invoice_paid": "invoice_123",
                "discount_amount": "0",
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class UpdateSalesPaymentResponse(BaseModel):
    sales_payment_id: str = None
    total_amount: float = None
    contact_id: Optional[str] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    income_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: str = None
    sales_invoice_paid: str = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = None
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_payment_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "total_amount": 11.88,
                "contact_id": 1,
                "total_tax": 0,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "category": "Sales",
                "cash_ledger_account": "101",
                "income_ledger_account": "501",
                "line_items": [
                    {
                        "item_id": 1,
                        "amount": 11.88,
                        "quantity": 12,
                        "item_price": .99,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "payment_method": "Credit Card",
                "sales_invoice_paid": "invoice_123",
                "discount_amount": "0",
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class UpdateSalesPayment(BaseModel):
    sales_payment_id: str = None
    total_amount: Optional[str] = None
    contact_id: Optional[str] = None
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    income_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: Optional[str] = None
    sales_invoice_paid: Optional[str] = None
    discount_amount: Optional[str] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_payment_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "total_amount": 11.88,
                "contact_id": 1,
                "total_tax": 0,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "category": "Sales",
                "cash_ledger_account": "101",
                "income_ledger_account": "501",
                "line_items": [
                    {
                        "item_id": 1,
                        "amount": 11.88,
                        "quantity": 12,
                        "item_price": .99,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "payment_method": "Credit Card",
                "sales_invoice_paid": "invoice_123",
                "discount_amount": "0",
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class PurchasePayment(BaseModel):
    total_amount: float
    contact_id: str
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    expense_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: Optional[str] = None
    purchase_invoice_paid: Optional[str] = None
    discount_amount: Optional[str] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "total_amount": 32.00,
                "contact_id": "100",
                "total_tax": 2.00,
                "currency": "US",
                "transaction_date": "2023-03-25",
                "category": "EXPENSE",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BW_DONUT_MAKER",
                        "amount": 30.00,
                        "quantity": 1,
                        "item_price": 30.00,
                        "description": "Brentwood Mini Donut Maker Machine",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CASH",
                "purchase_invoice_paid": "",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class PurchasePaymentResponse(BaseModel):
    purchase_payment_id: str = None
    total_amount: float
    contact_id: str
    total_tax: Optional[float] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    expense_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: Optional[str] = None
    purchase_invoice_paid: Optional[str] = None
    discount_amount: Optional[str] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_payment_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "total_amount": 32.00,
                "contact_id": "100",
                "total_tax": 2.00,
                "currency": "US",
                "transaction_date": "2023-03-25",
                "category": "EXPENSE",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BW_DONUT_MAKER",
                        "amount": 30.00,
                        "quantity": 1,
                        "item_price": 30.00,
                        "description": "Brentwood Mini Donut Maker Machine",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CASH",
                "purchase_invoice_paid": "",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class UpdatePurchasePaymentResponse(BaseModel):
    purchase_payment_id: str = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    contact_id: Optional[str] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    expense_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: Optional[str] = None
    purchase_invoice_paid: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_payment_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "total_amount": 32.00,
                "contact_id": "100",
                "total_tax": 2.00,
                "currency": "US",
                "transaction_date": "2023-03-25",
                "category": "EXPENSE",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BW_DONUT_MAKER",
                        "amount": 30.00,
                        "quantity": 1,
                        "item_price": 30.00,
                        "description": "Brentwood Mini Donut Maker Machine",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CASH",
                "purchase_invoice_paid": "",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class UpdatePurchasePayment(BaseModel):
    purchase_payment_id: str = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    contact_id: Optional[str] = None
    currency: Optional[str] = None
    transaction_date: Optional[str] = None
    category: Optional[str] = None
    cash_ledger_account: Optional[str] = None
    expense_ledger_account: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    payment_method: Optional[str] = None
    purchase_invoice_paid: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_payment_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "total_amount": 32.00,
                "contact_id": "100",
                "total_tax": 2.00,
                "currency": "US",
                "transaction_date": "2023-03-25",
                "category": "EXPENSE",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BW_DONUT_MAKER",
                        "amount": 30.00,
                        "quantity": 1,
                        "item_price": 30.00,
                        "description": "Brentwood Mini Donut Maker Machine",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CASH",
                "purchase_invoice_paid": "",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }
        }


class SalesInvoice(BaseModel):
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[str] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "reference_number": "SI-1001",
                "total_amount": 25.00,
                "balance": 0,
                "contact_id": "75",
                "total_tax": 2.00,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BLKDNUT",
                        "amount": 23.00,
                        "quantity": 10,
                        "item_price": 2.30,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "SALES_TAX",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CREDIT_CARD",
                "sales_invoice_paid": "UNPAID",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class SalesInvoiceResponse(BaseModel):
    sales_invoice_id: str = None
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[str] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_invoice_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "reference_number": "SI-1001",
                "total_amount": 25.00,
                "balance": 0,
                "contact_id": "75",
                "total_tax": 2.00,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BLKDNUT",
                        "amount": 23.00,
                        "quantity": 10,
                        "item_price": 2.30,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "SALES_TAX",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CREDIT_CARD",
                "sales_invoice_paid": "UNPAID",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class UpdateSalesInvoiceResponse(BaseModel):
    sales_invoice_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_invoice_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "reference_number": "SI-1001",
                "total_amount": 25.00,
                "balance": 0,
                "contact_id": "75",
                "total_tax": 2.00,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BLKDNUT",
                        "amount": 23.00,
                        "quantity": 10,
                        "item_price": 2.30,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "SALES_TAX",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CREDIT_CARD",
                "sales_invoice_paid": "UNPAID",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class UpdateSalesInvoice(BaseModel):
    sales_invoice_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_invoice_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "reference_number": "SI-1001",
                "total_amount": 25.00,
                "balance": 0,
                "contact_id": "75",
                "total_tax": 2.00,
                "currency": "USD",
                "transaction_date": "2023-03-25",
                "cash_ledger_account": "10000-00",
                "income_ledger_account": "20000-00",
                "line_items": [
                    {
                        "item_id": "BLKDNUT",
                        "amount": 23.00,
                        "quantity": 10,
                        "item_price": 2.30,
                        "description": "Black Donut Hole",
                        "discount_amount": 0,
                        "tax_type": "SALES_TAX",
                        "tax": 2.00
                    }
                ],
                "payment_method": "CREDIT_CARD",
                "sales_invoice_paid": "UNPAID",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class PurchaseInvoice(BaseModel):
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "120",
                "reference_number": "PI-2001",
                "line_items": [
                    {
                        "item_id": "DONUTMIX",
                        "amount": 50.00,
                        "quantity": 10,
                        "item_price": 5.00,
                        "description": "Donut Mix - 5lbs Bag",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": 50.00,
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "30000-00",
                "credit_terms": "NET_14",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class PurchaseInvoiceResponse(BaseModel):
    purchase_invoice_id: str
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_invoice_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "120",
                "reference_number": "PI-2001",
                "line_items": [
                    {
                        "item_id": "DONUTMIX",
                        "amount": 50.00,
                        "quantity": 10,
                        "item_price": 5.00,
                        "description": "Donut Mix - 5lbs Bag",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": 50.00,
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "30000-00",
                "credit_terms": "NET_14",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class UpdatePurchaseInvoiceResponse(BaseModel):
    purchase_invoice_id: str
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_invoice_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "120",
                "reference_number": "PI-2001",
                "line_items": [
                    {
                        "item_id": "DONUTMIX",
                        "amount": 50.00,
                        "quantity": 10,
                        "item_price": 5.00,
                        "description": "Donut Mix - 5lbs Bag",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": 50.00,
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "30000-00",
                "credit_terms": "NET_14",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class UpdatePurchaseInvoice(BaseModel):
    purchase_invoice_id: str
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    credit_terms: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    recur_frequency: Optional[int] = 0
    recur_number: Optional[int] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_invoice_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "120",
                "reference_number": "PI-2001",
                "line_items": [
                    {
                        "item_id": "DONUTMIX",
                        "amount": 50.00,
                        "quantity": 10,
                        "item_price": 5.00,
                        "description": "Donut Mix - 5lbs Bag",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": 50.00,
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "30000-00",
                "credit_terms": "NET_14",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "recur_frequency": 0,
                "recur_number": 0
            }

        }


class SalesOrder(BaseModel):
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "450",
                "reference_number": "SO-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDONUT",
                        "amount": 15.00,
                        "quantity": 10,
                        "item_price": 1.50,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": "0",
                "transaction_date": "2023-03-25",
                "total_amount": "15.00",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ar_ledger_account_id": "40000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "ONLINE"
            }

        }


class SalesOrderResponse(BaseModel):
    sales_order_id: str
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[str] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_order_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "450",
                "reference_number": "SO-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDONUT",
                        "amount": 15.00,
                        "quantity": 10,
                        "item_price": 1.50,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": "0",
                "transaction_date": "2023-03-25",
                "total_amount": "15.00",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ar_ledger_account_id": "40000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "ONLINE"
            }

        }


class UpdateSalesOrderResponse(BaseModel):
    sales_order_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_order_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "450",
                "reference_number": "SO-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDONUT",
                        "amount": 15.00,
                        "quantity": 10,
                        "item_price": 1.50,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": "0",
                "transaction_date": "2023-03-25",
                "total_amount": "15.00",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ar_ledger_account_id": "40000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "ONLINE"
            }

        }


class UpdateSalesOrder(BaseModel):
    sales_order_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[float] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "sales_order_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "450",
                "reference_number": "SO-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDONUT",
                        "amount": 15.00,
                        "quantity": 10,
                        "item_price": 1.50,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": "0",
                "transaction_date": "2023-03-25",
                "total_amount": "15.00",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ar_ledger_account_id": "40000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "ONLINE"
            }

        }


class PurchaseOrder(BaseModel):
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "675",
                "reference_number": "PO-2001",
                "line_items": [
                    {
                        "item_id": "DONUTSPRINKLES",
                        "amount": 12.50,
                        "quantity": 5,
                        "item_price": 2.50,
                        "description": "Donut Sprinkles",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": "12.50",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "20000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "PHONE"
            }

        }


class PurchaseOrderResponse(BaseModel):
    purchase_order_id: str = None
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_order_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "675",
                "reference_number": "PO-2001",
                "line_items": [
                    {
                        "item_id": "DONUTSPRINKLES",
                        "amount": 12.50,
                        "quantity": 5,
                        "item_price": 2.50,
                        "description": "Donut Sprinkles",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": "12.50",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "20000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "PHONE"
            }

        }


class UpdatePurchaseOrderResponse(BaseModel):
    purchase_order_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_order_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "675",
                "reference_number": "PO-2001",
                "line_items": [
                    {
                        "item_id": "DONUTSPRINKLES",
                        "amount": 12.50,
                        "quantity": 5,
                        "item_price": 2.50,
                        "description": "Donut Sprinkles",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": "12.50",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "20000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "PHONE"
            }

        }


class UpdatePurchaseOrder(BaseModel):
    purchase_order_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    balance: Optional[float] = None
    transaction_date: Optional[str] = None
    total_amount: Optional[str] = None
    total_tax: Optional[float] = None
    due_date: Optional[str] = None
    ap_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    order_method: Optional[str] = None

    class Config:
        schema_extra = {
            "example": {
                "purchase_order_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "675",
                "reference_number": "PO-2001",
                "line_items": [
                    {
                        "item_id": "DONUTSPRINKLES",
                        "amount": 12.50,
                        "quantity": 5,
                        "item_price": 2.50,
                        "description": "Donut Sprinkles",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "balance": 0,
                "transaction_date": "2023-03-25",
                "total_amount": "12.50",
                "total_tax": 0,
                "due_date": "2023-04-08",
                "ap_ledger_account_id": "20000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0,
                "order_method": "PHONE"
            }

        }


class Quote(BaseModel):
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    transaction_date: Optional[str] = None
    quote_amount: Optional[float] = None
    quote_expiration_date: Optional[str] = None
    estimated_tax: Optional[float] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None

    class Config:
        schema_extra = {
            "example": {
                "contact_id": "450",
                "reference_number": "QUOTE-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDDONUT",
                        "amount": 10.00,
                        "quantity": 10,
                        "item_price": 1.00,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "transaction_date": "2023-03-25",
                "quote_amount": 10,
                "quote_expiration_date": "2023-04-08",
                "estimated_tax": 0,
                "ar_ledger_account_id": "10000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0
            }

        }


class QuoteResponse(BaseModel):
    quote_id: str = None
    contact_id: str
    reference_number: str
    line_items: List[LineItems]
    transaction_date: Optional[str] = None
    quote_amount: Optional[float] = None
    quote_expiration_date: Optional[str] = None
    estimated_tax: Optional[float] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "quote_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "450",
                "reference_number": "QUOTE-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDDONUT",
                        "amount": 10.00,
                        "quantity": 10,
                        "item_price": 1.00,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "transaction_date": "2023-03-25",
                "quote_amount": 10,
                "quote_expiration_date": "2023-04-08",
                "estimated_tax": 0,
                "ar_ledger_account_id": "10000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0
            }

        }


class UpdateQuoteResponse(BaseModel):
    quote_id: str = None
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    transaction_date: Optional[str] = None
    quote_amount: Optional[float] = None
    estimated_tax: Optional[float] = None
    quote_expiration_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None
    meta_data: Optional[MetaDataResponse] = None

    class Config:
        schema_extra = {
            "example": {
                "quote_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "450",
                "reference_number": "QUOTE-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDDONUT",
                        "amount": 10.00,
                        "quantity": 10,
                        "item_price": 1.00,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "transaction_date": "2023-03-25",
                "quote_amount": 10,
                "quote_expiration_date": "2023-04-08",
                "estimated_tax": 0,
                "ar_ledger_account_id": "10000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0
            }

        }


class UpdateQuote(BaseModel):
    quote_id: str
    contact_id: Optional[str] = None
    reference_number: Optional[str] = None
    line_items: Optional[List[LineItems]] = None
    transaction_date: Optional[str] = None
    quote_amount: Optional[float] = None
    estimated_tax: Optional[float] = None
    quote_expiration_date: Optional[str] = None
    ar_ledger_account_id: Optional[str] = None
    discount_date: Optional[str] = None
    discount_amount: Optional[float] = None

    class Config:
        schema_extra = {
            "example": {
                "quote_id": "c7b7de7e-77a8-42cb-84da-3c85c7f4c721",
                "contact_id": "450",
                "reference_number": "QUOTE-1001",
                "line_items": [
                    {
                        "item_id": "GLAZEDDONUT",
                        "amount": 10.00,
                        "quantity": 10,
                        "item_price": 1.00,
                        "description": "Glazed Donut",
                        "discount_amount": 0,
                        "tax_type": "NONE",
                        "tax": 0
                    }
                ],
                "transaction_date": "2023-03-25",
                "quote_amount": 10,
                "quote_expiration_date": "2023-04-08",
                "estimated_tax": 0,
                "ar_ledger_account_id": "10000-00",
                "discount_date": "2023-03-30",
                "discount_amount": 0
            }

        }


class AccountReference(BaseModel):
    name: Optional[str] = None
    value: Optional[int] = None


class JournalEntryDetail(BaseModel):
    posting_type: Optional[str] = None
    account_reference: Optional[AccountReference] = None


class JournalLineItems(BaseModel):
    account_code: str = None
    account_type: str = None
    amount: float = None
    posting_type: str = None


class JournalEntry(BaseModel):
    date: str = None
    journal_lines: List[JournalLineItems] = None
    description: Optional[str] = None
    posted: Optional[bool] = True
    journal_type: Optional[JournalType] = None
    validate_journal_type: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "date": "2022-06-22",
                "journal_lines": [
                    {
                        "account_code": "101",
                        "account_type": "BANK",
                        "amount": 11.88,
                        "posting_type": "Debit"
                    },
                    {
                        "account_code": "400",
                        "account_type": "INCOME",
                        "amount": 11.88,
                        "posting_type": "Credit"
                    }
                ],
                "description": "Income from a dozen Black Donut Holes",
                "posted": True,
                "journal_type": "CASH_RECEIPTS",
                "validate_journal_type": False
            }
        }


class JournalEntryResponse(BaseModel):
    journal_entry_id: str = None
    date: str = None
    journal_lines: List[JournalLineItems] = None
    description: Optional[str] = None
    posted: Optional[bool] = True
    journal_type: Optional[JournalType] = None
    validate_journal_type: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "journal_entry_id": 1,
                "date": "2022-06-22",
                "journal_lines": [
                    {
                        "account_code": "101",
                        "account_type": "BANK",
                        "amount": 11.88,
                        "posting_type": "Debit"
                    },
                    {
                        "account_code": "400",
                        "account_type": "INCOME",
                        "amount": 11.88,
                        "posting_type": "Credit"
                    }
                ],
                "description": "Income from a dozen Black Donut Holes",
                "posted": True,
                "journal_type": "CASH_RECEIPTS",
                "validate_journal_type": False
            }
        }


class UpdateJournalEntry(BaseModel):
    journal_entry_id: str = None
    date: Optional[str] = None
    journal_lines: Optional[List[JournalLineItems]] = None
    description: Optional[str] = None
    posted: Optional[bool] = True
    journal_type: Optional[JournalType] = None
    validate_journal_type: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "date": "2022-06-22",
                "journal_lines": [
                    {
                        "account_code": "101",
                        "account_type": "BANK",
                        "amount": 11.88,
                        "posting_type": "Debit"
                    },
                    {
                        "account_code": "400",
                        "account_type": "INCOME",
                        "amount": 11.88,
                        "posting_type": "Credit"
                    }
                ],
                "description": "Income from a dozen Black Donut Holes",
                "posted": True,
                "journal_type": "CASH_RECEIPTS",
                "validate_journal_type": False
            }
        }


class UpdateJournalEntryResponse(BaseModel):
    journal_entry_id: str = None
    date: Optional[str] = None
    journal_lines: Optional[List[JournalLineItems]] = None
    description: Optional[str] = None
    posted: Optional[bool] = True
    journal_type: Optional[JournalType] = None
    validate_journal_type: Optional[bool] = False

    class Config:
        schema_extra = {
            "example": {
                "journal_entry_id": 1,
                "date": "2022-06-22",
                "journal_lines": [
                    {
                        "account_code": "101",
                        "account_type": "BANK",
                        "amount": 11.88,
                        "posting_type": "Debit"
                    },
                    {
                        "account_code": "400",
                        "account_type": "INCOME",
                        "amount": 11.88,
                        "posting_type": "Credit"
                    }
                ],
                "description": "Income from a dozen Black Donut Holes",
                "posted": True,
                "journal_type": "CASH_RECEIPTS",
                "validate_journal_type": False
            }
        }


@app.get("/", include_in_schema=False)
async def redirect_to_docs():
    return RedirectResponse(url="/docs")


@app.get("/owner_info/", response_model=OwnerInfoResponse, tags=["Owner Info"])
async def read_owner_info():
    """
        Read owner_info:

    """
    owner_info = owner_info_table.find_one(id=1)
    if owner_info:
        return owner_info
    else:
        raise HTTPException(status_code=404, detail="OwnerInfo not found")


@app.get("/owner_info/query", response_model=OwnerInfoResponse, tags=["Owner Info"])
async def query_owner_info(query: Optional[str] = None):
    """
        Query owner_info using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from owner_info')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results
        else:
            raise HTTPException(status_code=404, detail="OwnerInfo not found")


@app.put("/owner_info/", response_model=UpdateOwnerInfoResponse, tags=["Owner Info"])
async def update_owner_info(owner_info: UpdateOwnerInfo):
    """
        Update owner_info with new information:

    """
    owner_info_to_update = owner_info_table.find_one(id=1)
    if owner_info_to_update:
        print(f"the owner_info to update is: {owner_info_to_update}")
        owner_info_dict = owner_info.dict()
        print(f"the owner_info_dict is: {owner_info_dict}")
        owner_info_dict['id'] = 1
        print(f"the updated owner_info_dict is: {owner_info_dict}")
        owner_info_table.update(owner_info_dict, ['id'])
        return owner_info_dict
    else:
        raise HTTPException(status_code=404, detail="OwnerInfo not found")


@app.post("/owner_info/", response_model=OwnerInfoResponse, tags=["Owner Info"], include_in_schema=True)
async def create_owner_info(owner_info: OwnerInfo):
    """
        Create owner_info using required information:

    """
    owner_info_dict = owner_info.dict()
    new_guid = str(uuid.uuid4())
    owner_info_dict['owner_id'] = new_guid

    db_insert = owner_info_table.insert(owner_info_dict)
    print(f"db_insert is {db_insert}")
    return owner_info_dict


@app.post("/account/", response_model=AccountOut, tags=["Account"])
async def create_account(account: Account):
    """
        Create a ledger account using required information:

    """
    account_dict = account.dict()
    new_guid = str(uuid.uuid4())
    account_dict['account_id'] = new_guid

    db_insert = account_table.insert(account_dict)
    print(f"db_insert is {db_insert}")
    return account_dict


@app.get("/account/query", response_model=list[AccountOut], tags=["Account"])
async def query_account(query: Optional[str] = None, skip: int = 0, limit: int = 10):
    """
        Query a ledger account using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from account')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Account not found")


@app.get("/account/{account_id}", response_model=AccountOut, tags=["Account"])
async def read_account(account_id: str):
    """
        Read a ledger account using account_id:

    """
    account = account_table.find_one(account_id=account_id)
    if account:
        return account
    else:
        raise HTTPException(status_code=404, detail="Account not found")


@app.put("/account/{account_id}", response_model=UpdateAccountResponse, tags=["Account"])
async def update_account(account_id: str, account: UpdateAccount):
    """
        Update a ledger account with new information:

    """
    account_to_update = account_table.find_one(account_id=account_id)
    if account_to_update:
        print(f"the account to update is: {account_to_update}")
        account_dict = account.dict()
        print(f"the account_dict is: {account_dict}")
        account_dict['account_id'] = account_id
        print(f"the updated account_dict is: {account_dict}")
        account_table.update(account_dict, ['account_id'])
        return account_dict
    else:
        raise HTTPException(status_code=404, detail="Account not found")


@app.delete("/account/{account_id}", tags=["Account"])
async def delete_account(account_id: str):
    """
        Delete a Ledger Account:

    """
    account_to_delete = account_table.find_one(account_id=account_id)
    if account_to_delete:
        print(f"the account to delete is: {account_to_delete}")
        account_table.delete(account_id=account_id)
        return {"message": f"Account with id {account_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Account not found")


@app.post("/contact/", response_model=ContactResponse, tags=["Contact"])
async def create_contact(contact: Contact):
    """
        Create a contact using required information:

    """
    contact_dict = contact.dict()
    new_guid = str(uuid.uuid4())
    contact_dict['contact_id'] = new_guid

    db_insert = contact_table.insert(contact_dict)
    return contact_dict


@app.get("/contact/query", response_model=list[ContactResponse], tags=["Contact"])
async def query_contact(query: Optional[str] = None, skip: int = 0, limit: int = 10):
    """
        Query a contact using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from contact')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Contact not found")


@app.get("/contact/{contact_id}", response_model=ContactResponse, tags=["Contact"])
async def read_contact(contact_id: str):
    """
        Read a contact using contact_id:

    """
    contact = contact_table.find_one(contact_id=contact_id)
    if contact:
        return contact
    else:
        raise HTTPException(status_code=404, detail="Contact not found")


@app.put("/contact/{contact_id}", response_model=UpdateContactResponse, tags=["Contact"])
async def update_contact(contact_id: str, contact: UpdateContact):
    """
        Update a contact with new information:

    """
    contact_to_update = contact_table.find_one(contact_id=contact_id)
    if contact_to_update:
        print(f"the contact to update is: {contact_to_update}")
        contact_dict = contact.dict()
        print(f"the contact_dict is: {contact_dict}")
        contact_dict['id'] = contact_id
        print(f"the updated contact_dict is: {contact_dict}")
        contact_table.update(contact_dict, ['id'])
        return contact_dict
    else:
        raise HTTPException(status_code=404, detail="Contact not found")


@app.delete("/contact/{contact_id}", tags=["Contact"])
async def delete_contact(contact_id: str):
    """
        Delete a Contact:

    """
    contact_to_delete = contact_table.find_one(contact_id=contact_id)
    if contact_to_delete:
        print(f"the contact to delete is: {contact_to_delete}")
        contact_table.delete(contact_id=contact_id)
        return {"message": f"Contact with id {contact_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Contact not found")


@app.post("/crypto_wallet/", response_model=CryptoWalletResponse, tags=["Crypto Wallet"])
async def create_crypto_wallet(crypto_wallet: CryptoWallet):
    """
        Create a ledger crypto_wallet using required information:

    """
    crypto_wallet_dict = crypto_wallet.dict()
    new_guid = str(uuid.uuid4())
    crypto_wallet_dict['crypto_wallet_id'] = new_guid

    db_insert = crypto_wallet_table.insert(crypto_wallet_dict)
    print(f"db_insert is {db_insert}")
    return crypto_wallet_dict


@app.get("/crypto_wallet/query", response_model=list[CryptoWalletResponse], tags=["Crypto Wallet"])
async def query_crypto_wallet(query: Optional[str] = None, skip: int = 0, limit: int = 10):
    """
        Query a ledger crypto_wallet using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from crypto_wallet')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Crypto Wallet not found")


@app.get("/crypto_wallet/{crypto_wallet_id}", response_model=CryptoWalletResponse, tags=["Crypto Wallet"])
async def read_crypto_wallet(crypto_wallet_id: str):
    """
        Read a ledger crypto_wallet using crypto_wallet_id:

    """
    crypto_wallet = crypto_wallet_table.find_one(crypto_wallet_id=crypto_wallet_id)
    if crypto_wallet:
        return crypto_wallet
    else:
        raise HTTPException(status_code=404, detail="Crypto Wallet not found")


@app.put("/crypto_wallet/{crypto_wallet_id}", response_model=UpdateCryptoWalletResponse, tags=["Crypto Wallet"])
async def update_crypto_wallet(crypto_wallet_id: str, crypto_wallet: UpdateCryptoWallet):
    """
        Update a ledger crypto_wallet with new information:

    """
    crypto_wallet_to_update = crypto_wallet_table.find_one(crypto_wallet_id=crypto_wallet_id)
    if crypto_wallet_to_update:
        print(f"the crypto_wallet to update is: {crypto_wallet_to_update}")
        crypto_wallet_dict = crypto_wallet.dict()
        print(f"the crypto_wallet_dict is: {crypto_wallet_dict}")
        crypto_wallet_dict['id'] = crypto_wallet_id
        print(f"the updated crypto_wallet_dict is: {crypto_wallet_dict}")
        crypto_wallet_table.update(crypto_wallet_dict, ['id'])
        return crypto_wallet_dict
    else:
        raise HTTPException(status_code=404, detail="Crypto Wallet not found")


@app.delete("/crypto_wallet/{crypto_wallet_id}", tags=["Crypto Wallet"])
async def delete_crypto_wallet(crypto_wallet_id: str):
    """
        Delete a Ledger Crypto Wallet:

    """
    crypto_wallet_to_delete = crypto_wallet_table.find_one(crypto_wallet_id=crypto_wallet_id)
    if crypto_wallet_to_delete:
        print(f"the crypto_wallet to delete is: {crypto_wallet_to_delete}")
        crypto_wallet_table.delete(crypto_wallet_id=crypto_wallet_id)
        return {"message": f"Crypto Wallet with id {crypto_wallet_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Crypto Wallet not found")


@app.post("/employee/", response_model=EmployeeResponse, tags=["Employee"])
async def create_employee(employee: Employee):
    """
        Create an employee using required information:

    """
    employee_dict = employee.dict()
    new_guid = str(uuid.uuid4())
    employee_dict['employee_id'] = new_guid

    db_insert = employee_table.insert(employee_dict)
    return employee_dict


@app.get("/employee/query", response_model=list[EmployeeResponse], tags=["Employee"])
async def query_employee(query: Optional[str] = None, skip: int = 0, limit: int = 10):
    """
        Query a employee using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from employee')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Employee not found")


@app.get("/employee/{employee_id}", response_model=EmployeeResponse, tags=["Employee"])
async def read_employee(employee_id: str):
    """
        Read an employee using employee_id:

    """
    employee = employee_table.find_one(employee_id=employee_id)
    if employee:
        return employee
    else:
        raise HTTPException(status_code=404, detail="Employee not found")


@app.put("/employee/{employee_id}", response_model=UpdateEmployeeResponse, tags=["Employee"])
async def update_employee(employee_id: str, employee: UpdateEmployee):
    """
        Update a employee with new information:

    """
    employee_to_update = employee_table.find_one(employee_id=employee_id)
    if employee_to_update:
        print(f"the employee to update is: {employee_to_update}")
        employee_dict = employee.dict()
        print(f"the employee_dict is: {employee_dict}")
        employee_dict['id'] = employee_id
        print(f"the updated employee_dict is: {employee_dict}")
        employee_table.update(employee_dict, ['id'])
        return employee_dict
    else:
        raise HTTPException(status_code=404, detail="Employee not found")


@app.delete("/employee/{employee_id}", tags=["Employee"])
async def delete_employee(employee_id: str):
    """
        Delete a Employee:

    """
    employee_to_delete = employee_table.find_one(employee_id=employee_id)
    if employee_to_delete:
        print(f"the employee to delete is: {employee_to_delete}")
        employee_table.delete(employee_id=employee_id)
        return {"message": f"Employee with id {employee_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Employee not found")


@app.post("/item/", response_model=ItemResponse, tags=["Item"])
async def create_item(item: Item):
    """
        Create an item using required information:

    """
    item_dict = item.dict()
    new_guid = str(uuid.uuid4())
    item_dict['item_id'] = new_guid

    db_insert = item_table.insert(item_dict)
    return item_dict


@app.get("/item/query", response_model=list[ItemResponse], tags=["Item"])
async def query_item(query: Optional[str] = None, skip: int = 0, limit: int = 10):
    """
        Query a contact using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from item')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Item not found")


@app.get("/item/{item_id}", response_model=ItemResponse, tags=["Item"])
async def read_item(item_id: str):
    """
        Read an item using item_id:

    """
    item = item_table.find_one(item_id=item_id)
    if item:
        return item
    else:
        raise HTTPException(status_code=404, detail="Item not found")


@app.put("/item/{item_id}", response_model=UpdateItemResponse, tags=["Item"])
async def update_item(item_id: str, item: UpdateItem):
    """
         Update an item with new information:

     """
    item_to_update = item_table.find_one(item_id=item_id)
    if item_to_update:
        print(f"the item to update is: {item_to_update}")
        item_dict = item.dict()
        print(f"the item_dict is: {item_dict}")
        item_dict['id'] = item_id
        print(f"the updated item_dict is: {item_dict}")
        item_table.update(item_dict, ['id'])
        return item_dict
    else:
        raise HTTPException(status_code=404, detail="Item not found")


@app.delete("/item/{item_id}", tags=["Item"])
async def delete_item(item_id: str):
    """
        Delete an Item:

    """
    item_to_delete = item_table.find_one(item_id=item_id)
    if item_to_delete:
        print(f"the item to delete is: {item_to_delete}")
        item_table.delete(item_id=item_id)
        return {"message": f"Item with id {item_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Item not found")


@app.post("/journalentry/", response_model=JournalEntryResponse, tags=["Journal Entry"])
async def create_journal_entry(journal_entry: JournalEntry):
    """
        Create a journal entry using required information:

    """

    current_date = datetime.now(timezone.utc).astimezone().strftime('%Y-%m-%d')
    journal_entry_dict = journal_entry.dict()
    json_journal_entry_dict = journal_entry.dict()
    journal_lines = journal_entry_dict['journal_lines']
    journal_entry_date = journal_entry_dict['date']
    new_guid = str(uuid.uuid4())

    if not journal_entry_date:
        json_journal_entry_dict['date'] = current_date
        journal_entry_dict['date'] = current_date

    if not journal_lines:
        raise HTTPException(status_code=404, detail="Cannot Record An Empty Journal Entry")

    for line in journal_lines:
        print(f"line in journal_lines: is {line}")
        account_code = line['account_code']
        amount = line['amount']
        if not account_code:
            raise HTTPException(status_code=404, detail="All Journal Lines Must Contain account_code")
        if not amount:
            raise HTTPException(status_code=404, detail="All Journal Lines Must Contain amount")

        if line['posting_type'] == 'Credit' and line['amount'] > 0:
            line['amount'] = -line["amount"]

    print(f"Updated journal_lines are: {journal_lines}")

    code_amount = [[line['account_code'], line['amount']] for line in journal_lines]
    print(f"code_amount is: {code_amount}")

    if sum(line[1] for line in code_amount) != 0:
        raise HTTPException(status_code=404, detail="Unbalanced Journal Lines")

    print(f"journal_lines in journal_entry_dict is {journal_lines}")
    json_compatible_journal_lines = json.dumps(journal_lines)
    print(f"json_compatible_journal_lines in journal_entry_dict is {json_compatible_journal_lines}")
    json_journal_entry_dict["journal_lines"] = json_compatible_journal_lines
    json_journal_entry_dict['journal_entry_id'] = new_guid
    db_insert = journal_entry_table.insert(json_journal_entry_dict)
    print(f"db_insert is {db_insert}")
    journal_entry_dict['id'] = db_insert
    return journal_entry_dict


@app.get("/journalentry/query", response_model=list[JournalEntryResponse], tags=["Journal Entry"])
async def query_journal_entry(query: Optional[str] = None, skip: int = 0, limit: int = 10):
    """
           Query a journal entry using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from journal_entry')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row['journal_lines']}")
                journal_lines = json.loads(row['journal_lines'])
                row['journal_lines'] = journal_lines
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Journal Entry not found")


@app.get("/journalentry/{journal_entry_id}", response_model=JournalEntryResponse, tags=["Journal Entry"])
async def read_journal_entry(journal_entry_id: str):
    """
        Read a journal_entry using journal_entry_id:

    """
    journal_entry = journal_entry_table.find_one(journal_entry_id=journal_entry_id)
    if journal_entry:
        journal_lines = journal_entry['journal_lines']
        json_compatible_line_items = json.loads(journal_lines)
        journal_entry['journal_lines'] = json_compatible_line_items
        return journal_entry
    else:
        raise HTTPException(status_code=404, detail="Journal Entry not found")


@app.put("/journalentry/{journal_entry_id}", response_model=UpdateJournalEntryResponse, tags=["Journal Entry"])
async def update_journal_entry(journal_entry_id: str, journal_entry: UpdateJournalEntry):
    """
        Update a journal_entry with new information:

    """
    journal_entry_to_update = journal_entry_table.find_one(journal_entry_id=journal_entry_id)
    if journal_entry_to_update:
        journal_entry_dict = journal_entry.dict()
        json_journal_entry_dict = journal_entry.dict()
        line_items = journal_entry_dict['journal_lines']
        print(f"line_items in journal_entry_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in journal_entry_dict is {json_compatible_line_items}")
        json_journal_entry_dict["journal_lines"] = json_compatible_line_items
        journal_entry_dict['id'] = journal_entry_id
        json_journal_entry_dict['id'] = journal_entry_id
        print(f"the updated journal_entry_dict is: {journal_entry_dict}")
        journal_entry_table.update(json_journal_entry_dict, ['id'])

        return journal_entry_dict
    else:
        raise HTTPException(status_code=404, detail="Journal Entry not found")


@app.delete("/journalentry/{journal_entry_id}", tags=["Journal Entry"])
async def delete_journal_entry(journal_entry_id: str):
    """
        Delete a Journal Entry:

    """
    journal_entry_to_delete = journal_entry_table.find_one(journal_entry_id=journal_entry_id)
    if journal_entry_to_delete:
        print(f"the journal_entry to delete is: {journal_entry_to_delete}")
        journal_entry_table.delete(journal_entry_id=journal_entry_id)
        return {"message": f"Journal Entry with id {journal_entry_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Journal Entry not found")


@app.post("/salespayment/", response_model=SalesPaymentResponse, tags=["Sales Payment"])
async def create_sales_payment(sales_payment: SalesPayment):
    """
        Create a sales payment using required information:

    """
    new_guid = str(uuid.uuid4())
    sales_payment_dict = sales_payment.dict()
    json_sales_payment_dict = sales_payment.dict()
    line_items = sales_payment_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in sales_payment_dict is {json_compatible_line_items}")
    json_sales_payment_dict["line_items"] = json_compatible_line_items
    json_sales_payment_dict['sales_payment_id'] = new_guid
    db_insert = sales_payment_table.insert(json_sales_payment_dict)
    print(f"db_insert is {db_insert}")
    return sales_payment_dict


@app.get("/salespayment/query", response_model=list[SalesPaymentResponse], tags=["Sales Payment"])
async def query_sales_payment(query, skip: int = 0, limit: int = 10):
    """
           Query a sales payment using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from sales_payment')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Sales Payment not found")


@app.get("/salespayment/{sales_payment_id}", response_model=SalesPaymentResponse, tags=["Sales Payment"])
async def read_sales_payment(sales_payment_id: str):
    """
        Read a sales_payment using sales_payment_id:

    """
    sales_payment = sales_payment_table.find_one(sales_payment_id=sales_payment_id)
    if sales_payment:
        line_items = sales_payment['line_items']
        json_compatible_line_items = json.loads(line_items)
        sales_payment['line_items'] = json_compatible_line_items
        return sales_payment
    else:
        raise HTTPException(status_code=404, detail="Sales Payment not found")


@app.put("/salespayment/{sales_payment_id}", response_model=UpdateSalesPaymentResponse, tags=["Sales Payment"])
async def update_sales_payment(sales_payment_id: str, sales_payment: UpdateSalesPayment):
    """
        Update a sales_payment with new information:

    """
    sales_payment_to_update = sales_payment_table.find_one(sales_payment_id=sales_payment_id)
    if sales_payment_to_update:
        sales_payment_dict = sales_payment.dict()
        json_sales_payment_dict = sales_payment.dict()
        line_items = sales_payment_dict['line_items']
        print(f"line_items in sales_payment_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in sales_payment_dict is {json_compatible_line_items}")
        json_sales_payment_dict["line_items"] = json_compatible_line_items
        sales_payment_dict['id'] = sales_payment_id
        json_sales_payment_dict['id'] = sales_payment_id
        print(f"the updated sales_payment_dict is: {sales_payment_dict}")
        sales_payment_table.update(json_sales_payment_dict, ['id'])
        return sales_payment_dict
    else:
        raise HTTPException(status_code=404, detail="Sales Payment not found")


@app.post("/salespayment/{sales_payment_id}", response_model=SalesPaymentResponse, tags=["Sales Payment"])
async def void_sales_payment(sales_payment_id: str):
    return {"message": f"We voided a sales payment"}


@app.delete("/salespayment/{sales_payment_id}", tags=["Sales Payment"])
async def delete_sales_payment(sales_payment_id: str):
    """
        Delete a Sales Payment:

    """
    sales_payment_to_delete = sales_payment_table.find_one(sales_payment_id=sales_payment_id)
    if sales_payment_to_delete:
        print(f"the sales_payment to delete is: {sales_payment_to_delete}")
        sales_payment_table.delete(sales_payment_id=sales_payment_id)
        return {"message": f"Sales Payment with id {sales_payment_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Sales Payment not found")


@app.post("/purchasepayment/", response_model=PurchasePaymentResponse, tags=["Purchase Payment"])
async def create_purchase_payment(purchase_payment: PurchasePayment):
    """
        Create a purchase payment using required information:

    """
    new_guid = str(uuid.uuid4())
    purchase_payment_dict = purchase_payment.dict()
    json_purchase_payment_dict = purchase_payment.dict()
    line_items = purchase_payment_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in purchase_payment_dict is {json_compatible_line_items}")
    json_purchase_payment_dict["line_items"] = json_compatible_line_items
    json_purchase_payment_dict['purchase_payment_id'] = new_guid
    db_insert = purchase_payment_table.insert(json_purchase_payment_dict)
    print(f"db_insert is {db_insert}")
    return purchase_payment_dict


@app.get("/purchasepayment/query", response_model=list[PurchasePaymentResponse], tags=["Purchase Payment"])
async def query_purchase_payment(query, skip: int = 0, limit: int = 10):
    """
           Query a purchase payment using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from purchase_payment')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Purchase Payment not found")


@app.get("/purchasepayment/{purchase_payment_id}", response_model=PurchasePaymentResponse, tags=["Purchase Payment"])
async def read_purchase_payment(purchase_payment_id: str):
    """
        Read a purchase_payment using purchase_payment_id:

    """
    purchase_payment = purchase_payment_table.find_one(purchase_payment_id=purchase_payment_id)
    if purchase_payment:
        line_items = purchase_payment['line_items']
        json_compatible_line_items = json.loads(line_items)
        purchase_payment['line_items'] = json_compatible_line_items
        return purchase_payment
    else:
        raise HTTPException(status_code=404, detail="Purchase Payment not found")


@app.put("/purchasepayment/{purchase_payment_id}", response_model=UpdatePurchasePaymentResponse,
         tags=["Purchase Payment"])
async def update_purchase_payment(purchase_payment_id: str, purchase_payment: UpdatePurchasePayment):
    """
        Update a purchase_payment with new information:

    """
    purchase_payment_to_update = purchase_payment_table.find_one(purchase_payment_id=purchase_payment_id)
    if purchase_payment_to_update:
        purchase_payment_dict = purchase_payment.dict()
        json_purchase_payment_dict = purchase_payment.dict()
        line_items = purchase_payment_dict['line_items']
        print(f"line_items in purchase_payment_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in purchase_payment_dict is {json_compatible_line_items}")
        json_purchase_payment_dict["line_items"] = json_compatible_line_items
        purchase_payment_dict['id'] = purchase_payment_id
        json_purchase_payment_dict['id'] = purchase_payment_id
        print(f"the updated purchase_payment_dict is: {purchase_payment_dict}")
        purchase_payment_table.update(json_purchase_payment_dict, ['id'])
        return purchase_payment_dict
    else:
        raise HTTPException(status_code=404, detail="Purchase Payment not found")


@app.post("/purchasepayments/{purchase_payment_id}", response_model=PurchasePaymentResponse, tags=["Purchase Payment"])
async def void_purchase_payment(purchase_payment_id: str):
    return {"message": f"We voided a purchase payment"}


@app.delete("/purchasepayment/{purchase_payment_id}", tags=["Purchase Payment"])
async def delete_purchase_payment(purchase_payment_id: str):
    """
        Delete a Purchase Payment:

    """
    purchase_payment_to_delete = purchase_payment_table.find_one(purchase_payment_id=purchase_payment_id)
    if purchase_payment_to_delete:
        print(f"the purchase_payment to delete is: {purchase_payment_to_delete}")
        purchase_payment_table.delete(purchase_payment_id=purchase_payment_id)
        return {"message": f"Purchase Payment with id {purchase_payment_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Purchase Payment not found")


@app.post("/creditmemo/", response_model=CreditMemoResponse, tags=["Credit Memo"])
async def create_credit_memo(credit_memo: CreditMemo):
    """
        Create a credit memo using required information:

    """
    new_guid = str(uuid.uuid4())
    credit_memo_dict = credit_memo.dict()
    json_credit_memo_dict = credit_memo.dict()
    json_credit_memo_dict['credit_memo_id'] = new_guid
    db_insert = credit_memo_table.insert(json_credit_memo_dict)
    print(f"db_insert is {db_insert}")
    return credit_memo_dict


@app.get("/creditmemo/query", response_model=list[CreditMemoResponse], tags=["Credit Memo"])
async def query_credit_memo(query, skip: int = 0, limit: int = 10):
    """
           Query a credit memo using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from credit_memo')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Credit Memo not found")


@app.get("/creditmemo/{credit_memo_id}", response_model=CreditMemoResponse, tags=["Credit Memo"])
async def read_credit_memo(credit_memo_id: str):
    """
        Read a credit_memo using credit_memo_id:

    """
    credit_memo = credit_memo_table.find_one(credit_memo_id=credit_memo_id)
    if credit_memo:
        line_items = credit_memo['line_items']
        json_compatible_line_items = json.loads(line_items)
        credit_memo['line_items'] = json_compatible_line_items
        return credit_memo
    else:
        raise HTTPException(status_code=404, detail="Credit Memo not found")


@app.put("/creditmemo/{credit_memo_id}", response_model=UpdateCreditMemoResponse, tags=["Credit Memo"])
async def update_credit_memo(credit_memo_id: str, credit_memo: UpdateCreditMemo):
    """
        Update a credit_memo with new information:

    """
    credit_memo_to_update = credit_memo_table.find_one(credit_memo_id=credit_memo_id)
    if credit_memo_to_update:
        credit_memo_dict = credit_memo.dict()
        json_credit_memo_dict = credit_memo.dict()
        line_items = credit_memo_dict['line_items']
        print(f"line_items in credit_memo_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in credit_memo_dict is {json_compatible_line_items}")
        json_credit_memo_dict["line_items"] = json_compatible_line_items
        credit_memo_dict['id'] = credit_memo_id
        json_credit_memo_dict['id'] = credit_memo_id
        print(f"the updated credit_memo_dict is: {credit_memo_dict}")
        credit_memo_table.update(json_credit_memo_dict, ['id'])
        return credit_memo_dict
    else:
        raise HTTPException(status_code=404, detail="Credit Memo not found")


@app.delete("/creditmemo/{credit_memo_id}", tags=["Credit Memo"])
async def delete_credit_memo(credit_memo_id: str):
    """
        Delete a Credit Memo:

    """
    credit_memo_to_delete = credit_memo_table.find_one(credit_memo_id=credit_memo_id)
    if credit_memo_to_delete:
        print(f"the credit_memo to delete is: {credit_memo_to_delete}")
        credit_memo_table.delete(credit_memo_id=credit_memo_id)
        return {"message": f"Credit Memo with id {credit_memo_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Credit Memo not found")


@app.post("/vendorcreditmemo/", response_model=VendorCreditMemoResponse, tags=["Vendor Credit Memo"])
async def create_vendor_credit_memo(vendor_credit_memo: VendorCreditMemo):
    """
       Create a vendor credit memo using required information:

    """
    new_guid = str(uuid.uuid4())
    vendor_credit_memo_dict = vendor_credit_memo.dict()
    json_vendor_credit_memo_dict = vendor_credit_memo.dict()
    json_vendor_credit_memo_dict['vendor_credit_memo_id'] = new_guid
    db_insert = vendor_credit_memo_table.insert(json_vendor_credit_memo_dict)
    print(f"db_insert is {db_insert}")
    return vendor_credit_memo_dict


@app.get("/vendorcreditmemo/query", response_model=list[VendorCreditMemoResponse], tags=["Vendor Credit Memo"])
async def query_vendor_credit_memo(query, skip: int = 0, limit: int = 10):
    """
           Query a vendor credit memo using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from purchase_payment')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                # line_items = json.loads(row['line_items'])
                # row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Vendor Credit Memo not found")


@app.get("/vendorcreditmemo/{vendor_credit_memo_id}", response_model=VendorCreditMemoResponse,
         tags=["Vendor Credit Memo"])
async def read_vendor_credit_memo(vendor_credit_memo_id: str):
    """
        Read a vendor_credit_memo using vendor_credit_memo_id:

    """
    vendor_credit_memo = vendor_credit_memo_table.find_one(vendor_credit_memo_id=vendor_credit_memo_id)
    if vendor_credit_memo:
        # line_items = vendor_credit_memo['line_items']
        # json_compatible_line_items = json.loads(line_items)
        # vendor_credit_memo['line_items'] = json_compatible_line_items
        return vendor_credit_memo
    else:
        raise HTTPException(status_code=404, detail="Vendor Credit Memo not found")


@app.put("/vendorcreditmemo/{vendor_credit_memo_id}", response_model=UpdateVendorCreditMemoResponse,
         tags=["Vendor Credit Memo"])
async def update_vendor_credit_memo(vendor_credit_memo_id: str, vendor_credit_memo: UpdateVendorCreditMemo):
    """
        Update a vendor_credit_memo with new information:

    """
    vendor_credit_memo_to_update = vendor_credit_memo_table.find_one(vendor_credit_memo_id=vendor_credit_memo_id)
    if vendor_credit_memo_to_update:
        vendor_credit_memo_dict = vendor_credit_memo.dict()
        json_vendor_credit_memo_dict = vendor_credit_memo.dict()
        # line_items = vendor_credit_memo_dict['line_items']
        # print(f"line_items in vendor_credit_memo_dict is {line_items}")
        # json_compatible_line_items = json.dumps(line_items)
        # print(f"json_compatible_line_items in vendor_credit_memo_dict is {json_compatible_line_items}")
        # json_vendor_credit_memo_dict["line_items"] = json_compatible_line_items
        # vendor_credit_memo_dict['id'] = vendor_credit_memo_id
        # json_vendor_credit_memo_dict['id'] = vendor_credit_memo_id
        # print(f"the updated vendor_credit_memo_dict is: {vendor_credit_memo_dict}")
        vendor_credit_memo_table.update(json_vendor_credit_memo_dict, ['id'])
        return vendor_credit_memo_dict
    else:
        raise HTTPException(status_code=404, detail="Vendor Credit Memo not found")


@app.delete("/vendorcreditmemo/{vendor_credit_memo_id}", tags=["Vendor Credit Memo"])
async def delete_vendor_credit_memo(vendor_credit_memo_id: str):
    """
        Delete a Vendor Credit Memo:

    """
    vendor_credit_memo_to_delete = vendor_credit_memo_table.find_one(vendor_credit_memo_id=vendor_credit_memo_id)
    if vendor_credit_memo_to_delete:
        print(f"the vendor_credit_memo to delete is: {vendor_credit_memo_to_delete}")
        vendor_credit_memo_table.delete(vendor_credit_memo_id=vendor_credit_memo_id)
        return {"message": f"Vendor Credit Memo with id {vendor_credit_memo_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Vendor Credit Memo not found")


@app.post("/salesinvoice/", response_model=SalesInvoiceResponse, tags=["Sales Invoice"])
async def create_sales_invoice(sales_invoice: SalesInvoice):
    """
       Create sales invoice using required information:

    """
    new_guid = str(uuid.uuid4())
    sales_invoice_dict = sales_invoice.dict()
    json_sales_invoice_dict = sales_invoice.dict()
    line_items = sales_invoice_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in sales_invoice_dict is {json_compatible_line_items}")
    json_sales_invoice_dict["line_items"] = json_compatible_line_items
    json_sales_invoice_dict['sales_invoice_id'] = new_guid
    db_insert = sales_invoice_table.insert(json_sales_invoice_dict)
    sales_invoice_dict['id'] = db_insert
    return sales_invoice_dict


@app.get("/salesinvoice/query", response_model=list[SalesInvoiceResponse], tags=["Sales Invoice"])
async def query_sales_invoice(query, skip: int = 0, limit: int = 10):
    """
           Query a sales invoice using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from sales_invoice')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Sales Invoice not found")


@app.get("/salesinvoice/{sales_invoice_id}", response_model=SalesInvoiceResponse, tags=["Sales Invoice"])
async def read_sales_invoice(sales_invoice_id: str):
    """
        Read a sales_invoice using sales_invoice_id:

    """
    sales_invoice = sales_invoice_table.find_one(sales_invoice_id=sales_invoice_id)
    if sales_invoice:
        line_items = sales_invoice['line_items']
        json_compatible_line_items = json.loads(line_items)
        sales_invoice['line_items'] = json_compatible_line_items
        return sales_invoice
    else:
        raise HTTPException(status_code=404, detail="Sales Invoice not found")


@app.put("/salesinvoice/{sales_invoice_id}", response_model=UpdateSalesInvoiceResponse, tags=["Sales Invoice"])
async def update_sales_invoice(sales_invoice_id: str, sales_invoice: UpdateSalesInvoice):
    """
        Update a sales_invoice with new information:

    """
    sales_invoice_to_update = sales_invoice_table.find_one(sales_invoice_id=sales_invoice_id)
    if sales_invoice_to_update:
        sales_invoice_dict = sales_invoice.dict()
        json_sales_invoice_dict = sales_invoice.dict()
        line_items = sales_invoice_dict['line_items']
        print(f"line_items in sales_invoice_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in sales_invoice_dict is {json_compatible_line_items}")
        json_sales_invoice_dict["line_items"] = json_compatible_line_items
        sales_invoice_dict['id'] = sales_invoice_id
        json_sales_invoice_dict['id'] = sales_invoice_id
        print(f"the updated sales_invoice_dict is: {sales_invoice_dict}")
        sales_invoice_table.update(json_sales_invoice_dict, ['id'])
        return sales_invoice_dict
    else:
        raise HTTPException(status_code=404, detail="Sales Invoice not found")


@app.delete("/salesinvoice/{sales_invoice_id}", tags=["Sales Invoice"])
async def delete_sales_invoice(sales_invoice_id: str):
    """
        Delete a Sales Invoice:

    """
    sales_invoice_to_delete = sales_invoice_table.find_one(sales_invoice_id=sales_invoice_id)
    if sales_invoice_to_delete:
        print(f"the sales_invoice to delete is: {sales_invoice_to_delete}")
        sales_invoice_table.delete(sales_invoice_id=sales_invoice_id)
        return {"message": f"Sales Invoice with id {sales_invoice_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Sales Invoice not found")


@app.post("/purchaseinvoice/", response_model=PurchaseInvoiceResponse, tags=["Purchase Invoice"])
async def create_purchase_invoice(purchase_invoice: PurchaseInvoice):
    """
        Create a purchase invoice using required information:

    """
    new_guid = str(uuid.uuid4())
    purchase_invoice_dict = purchase_invoice.dict()
    json_purchase_invoice_dict = purchase_invoice.dict()
    line_items = purchase_invoice_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in purchase_invoice_dict is {json_compatible_line_items}")
    json_purchase_invoice_dict["line_items"] = json_compatible_line_items
    json_purchase_invoice_dict['purchase_invoice_id'] = new_guid
    db_insert = purchase_invoice_table.insert(json_purchase_invoice_dict)
    print(f"db_insert is {db_insert}")
    return purchase_invoice_dict


@app.get("/purchaseinvoice/query", response_model=list[PurchaseInvoiceResponse], tags=["Purchase Invoice"])
async def query_purchase_invoice(query, skip: int = 0, limit: int = 10):
    """
           Query a purchase invoice using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from purchase_invoice')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Purchase Invoice not found")


@app.get("/purchaseinvoice/{purchase_invoice_id}", response_model=PurchaseInvoiceResponse, tags=["Purchase Invoice"])
async def read_purchase_invoice(purchase_invoice_id: str):
    """
        Read a purchase_invoice using purchase_invoice_id:

    """
    purchase_invoice = purchase_invoice_table.find_one(purchase_invoice_id=purchase_invoice_id)
    if purchase_invoice:
        line_items = purchase_invoice['line_items']
        json_compatible_line_items = json.loads(line_items)
        purchase_invoice['line_items'] = json_compatible_line_items
        return purchase_invoice
    else:
        raise HTTPException(status_code=404, detail="Purchase Invoice not found")


@app.put("/purchaseinvoice/{purchase_invoice_id}", response_model=UpdatePurchaseInvoiceResponse,
         tags=["Purchase Invoice"])
async def update_purchase_invoice(purchase_invoice_id: str, purchase_invoice: UpdatePurchaseInvoice):
    """
        Update a purchase_invoice with new information:

    """
    purchase_invoice_to_update = purchase_invoice_table.find_one(purchase_invoice_id=purchase_invoice_id)
    if purchase_invoice_to_update:
        purchase_invoice_dict = purchase_invoice.dict()
        json_purchase_invoice_dict = purchase_invoice.dict()
        line_items = purchase_invoice_dict['line_items']
        print(f"line_items in purchase_invoice_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in purchase_invoice_dict is {json_compatible_line_items}")
        json_purchase_invoice_dict["line_items"] = json_compatible_line_items
        purchase_invoice_dict['id'] = purchase_invoice_id
        json_purchase_invoice_dict['id'] = purchase_invoice_id
        print(f"the updated purchase_invoice_dict is: {purchase_invoice_dict}")
        purchase_invoice_table.update(json_purchase_invoice_dict, ['id'])
        return purchase_invoice_dict
    else:
        raise HTTPException(status_code=404, detail="Purchase Invoice not found")


@app.delete("/purchaseinvoice/{purchase_invoice_id}", tags=["Purchase Invoice"])
async def delete_purchase_invoice(purchase_invoice_id: str):
    """
        Delete a Purchase Invoice:

    """
    purchase_invoice_to_delete = purchase_invoice_table.find_one(purchase_invoice_id=purchase_invoice_id)
    if purchase_invoice_to_delete:
        print(f"the purchase_invoice to delete is: {purchase_invoice_to_delete}")
        purchase_invoice_table.delete(purchase_invoice_id=purchase_invoice_id)
        return {"message": f"Purchase Invoice with id {purchase_invoice_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Purchase Invoice not found")


@app.post("/salesorder/", response_model=SalesOrderResponse, tags=["Sales Order"])
async def create_sales_order(sales_order: SalesOrder):
    """
        Create a sales order using required information:

    """
    new_guid = str(uuid.uuid4())
    sales_order_dict = sales_order.dict()
    json_sales_order_dict = sales_order.dict()
    line_items = sales_order_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in sales_order_dict is {json_compatible_line_items}")
    json_sales_order_dict["line_items"] = json_compatible_line_items
    json_sales_order_dict['sales_order_id'] = new_guid
    db_insert = sales_order_table.insert(json_sales_order_dict)
    print(f"db_insert is {db_insert}")
    return sales_order_dict


@app.get("/salesorder/query", response_model=list[SalesOrderResponse], tags=["Sales Order"])
async def query_sales_order(query, skip: int = 0, limit: int = 10):
    """
           Query a sales order using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from sales_order')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Sales Order not found")


@app.get("/salesorder/{sales_order_id}", response_model=SalesOrderResponse, tags=["Sales Order"])
async def read_sales_order(sales_order_id: str):
    """
         Read a sales_order using sales_order_id:

     """
    sales_order = sales_order_table.find_one(sales_order_id=sales_order_id)
    if sales_order:
        line_items = sales_order['line_items']
        json_compatible_line_items = json.loads(line_items)
        sales_order['line_items'] = json_compatible_line_items
        return sales_order
    else:
        raise HTTPException(status_code=404, detail="Sales Order not found")


@app.put("/salesorder/{sales_order_id}", response_model=UpdateSalesOrderResponse, tags=["Sales Order"])
async def update_sales_order(sales_order_id: str, sales_order: UpdateSalesOrder):
    """
          Update a sales_order with new information:

    """
    sales_order_to_update = sales_order_table.find_one(sales_order_id=sales_order_id)
    if sales_order_to_update:
        sales_order_dict = sales_order.dict()
        json_sales_order_dict = sales_order.dict()
        line_items = sales_order_dict['line_items']
        print(f"line_items in sales_order_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in sales_order_dict is {json_compatible_line_items}")
        json_sales_order_dict["line_items"] = json_compatible_line_items
        sales_order_dict['id'] = sales_order_id
        json_sales_order_dict['id'] = sales_order_id
        print(f"the updated sales_order_dict is: {sales_order_dict}")
        sales_order_table.update(json_sales_order_dict, ['id'])
        return sales_order_dict
    else:
        raise HTTPException(status_code=404, detail="Contact not found")


@app.delete("/salesorder/{sales_order_id}", tags=["Sales Order"])
async def delete_sales_order(sales_order_id: str):
    """
        Delete a Sales Order:

    """
    sales_order_to_delete = sales_order_table.find_one(sales_order_id=sales_order_id)
    if sales_order_to_delete:
        print(f"the sales_order to delete is: {sales_order_to_delete}")
        sales_order_table.delete(sales_order_id=sales_order_id)
        return {"message": f"Sales Order with id {sales_order_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Sales Order not found")


@app.post("/purchaseorders/", response_model=PurchaseOrderResponse, tags=["Purchase Order"])
async def create_purchase_order(purchase_order: PurchaseOrder):
    """
        Create a purchase_order using required information:

    """
    new_guid = str(uuid.uuid4())
    purchase_order_dict = purchase_order.dict()
    json_purchase_order_dict = purchase_order.dict()
    line_items = purchase_order_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in purchase_order_dict is {json_compatible_line_items}")
    json_purchase_order_dict["line_items"] = json_compatible_line_items
    json_purchase_order_dict['purchase_order_id'] = new_guid
    db_insert = purchase_order_table.insert(json_purchase_order_dict)
    print(f"db_insert is {db_insert}")
    return purchase_order_dict


@app.get("/purchaseorder/query", response_model=list[PurchaseOrderResponse], tags=["Purchase Order"])
async def query_purchase_order(query, skip: int = 0, limit: int = 10):
    """
           Query a purchase order using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from purchase_order')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Purchase Order not found")


@app.get("/purchaseorder/{purchase_order_id}", response_model=PurchaseOrderResponse, tags=["Purchase Order"])
async def read_purchase_order(purchase_order_id: str):
    """
        Read a purchase_order using purchase_order_id:

    """
    purchase_order = purchase_order_table.find_one(purchase_order_id=purchase_order_id)
    if purchase_order:
        line_items = purchase_order['line_items']
        json_compatible_line_items = json.loads(line_items)
        purchase_order['line_items'] = json_compatible_line_items
        return purchase_order
    else:
        raise HTTPException(status_code=404, detail="Purchase Order not found")


@app.put("/purchaseorder/{purchase_order_id}", response_model=UpdatePurchaseOrderResponse, tags=["Purchase Order"])
async def update_purchase_order(purchase_order_id: str, purchase_order: UpdatePurchaseOrder):
    """
        Update a purchase_order with new information:

    """
    purchase_order_to_update = purchase_order_table.find_one(purchase_order_id=purchase_order_id)
    if purchase_order_to_update:
        purchase_order_dict = purchase_order.dict()
        json_purchase_order_dict = purchase_order.dict()
        line_items = purchase_order_dict['line_items']
        print(f"line_items in purchase_order_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in purchase_order_dict is {json_compatible_line_items}")
        json_purchase_order_dict["line_items"] = json_compatible_line_items
        purchase_order_dict['id'] = purchase_order_id
        json_purchase_order_dict['id'] = purchase_order_id
        print(f"the updated purchase_order_dict is: {purchase_order_dict}")
        purchase_order_table.update(json_purchase_order_dict, ['id'])
        return purchase_order_dict
    else:
        raise HTTPException(status_code=404, detail="Contact not found")


@app.delete("/purchaseorder/{purchase_order_id}", tags=["Purchase Order"])
async def delete_purchase_order(purchase_order_id: str):
    """
        Delete a Purchase Order:

    """
    purchase_order_to_delete = purchase_order_table.find_one(purchase_order_id=purchase_order_id)
    if purchase_order_to_delete:
        print(f"the purchase_order to delete is: {purchase_order_to_delete}")
        purchase_order_table.delete(purchase_order_id=purchase_order_id)
        return {"message": f"Purchase Order with id {purchase_order_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Purchase Order not found")


@app.post("/quote/", response_model=QuoteResponse, tags=["Quote"])
async def create_quote(quote: Quote):
    """
        Create a quote using required information:

    """
    new_guid = str(uuid.uuid4())
    quote_dict = quote.dict()
    json_quote_dict = quote.dict()
    line_items = quote_dict['line_items']
    json_compatible_line_items = json.dumps(line_items)
    print(f"json_compatible_line_items in quote_dict is {json_compatible_line_items}")
    json_quote_dict["line_items"] = json_compatible_line_items
    json_quote_dict['quote_id'] = new_guid
    db_insert = quote_table.insert(json_quote_dict)
    print(f"db_insert is {db_insert}")
    return quote_dict


@app.get("/quote/query", response_model=list[QuoteResponse], tags=["Quote"])
async def query_quote(query, skip: int = 0, limit: int = 10):
    """
           Query a quote using a sql statement:

    """
    if query:
        final_results = []
        print(f"The query is {query}")
        # result = db.query('select * from quote')
        result = db.query(query)
        if result:
            for row in result:
                print(f"The row is {row}")
                line_items = json.loads(row['line_items'])
                row['line_items'] = line_items
                final_results.append(row)
            print(f"final results are {final_results}")
            return final_results[skip: skip + limit]
        else:
            raise HTTPException(status_code=404, detail="Quote not found")


@app.get("/quote/{quote_id}", response_model=QuoteResponse, tags=["Quote"])
async def read_quote(quote_id: str):
    """
        Read a quote using quote_id:

    """
    quote = quote_table.find_one(quote_id=quote_id)
    if quote:
        line_items = quote['line_items']
        json_compatible_line_items = json.loads(line_items)
        quote['line_items'] = json_compatible_line_items
        return quote
    else:
        raise HTTPException(status_code=404, detail="Quote not found")


@app.put("/quote/{quote_id}", response_model=UpdateQuoteResponse, tags=["Quote"])
async def update_quote(quote_id: str, quote: UpdateQuote):
    """
        Update a quote with new information:

    """
    quote_to_update = quote_table.find_one(quote_id=quote_id)
    if quote_to_update:
        quote_dict = quote.dict()
        json_quote_dict = quote.dict()
        line_items = quote_dict['line_items']
        print(f"line_items in quote_dict is {line_items}")
        json_compatible_line_items = json.dumps(line_items)
        print(f"json_compatible_line_items in quote_dict is {json_compatible_line_items}")
        json_quote_dict["line_items"] = json_compatible_line_items
        quote_dict['id'] = quote_id
        json_quote_dict['id'] = quote_id
        print(f"the updated quote_dict is: {quote_dict}")
        quote_table.update(json_quote_dict, ['id'])
        return quote_dict
    else:
        raise HTTPException(status_code=404, detail="Quote not found")


@app.delete("/quotes/{quote_id}", tags=["Quote"])
async def delete_quote(quote_id: str):
    """
        Delete a Quote:

    """
    quote_to_delete = quote_table.find_one(quote_id=quote_id)
    if quote_to_delete:
        print(f"the quote to delete is: {quote_to_delete}")
        quote_table.delete(quote_id=quote_id)
        return {"message": f"Quote with id {quote_id} has been deleted"}
    else:
        raise HTTPException(status_code=404, detail="Quote not found")


@app.get("/reports/profit_and_loss", tags=["Reports"])
async def query_profit_and_loss(start_date: Optional[date] = None, end_date: Optional[date] = None):
    """
        Query a journal entry using a sql statement:

    """

    result = journal_entry_table.find(date={'between': [start_date, end_date]})
    print(f"The result is {result}")
    accounts_by_type = {'revenue': {}, 'cogs': {}, 'expense': {}, 'other_income': {}, 'other_expenses': {}}
    if result:
        for row in result:
            print(f"The row is {row['journal_lines']}")
            journal_lines = json.loads(row['journal_lines'])
            for each in journal_lines:
                print(f"each in journal_lines is {each}")

                if str(each['account_type']).lower() in ["revenue", "cogs", "expense", "other_income",
                                                         "other_expenses"]:
                    key = str(each['account_type']).lower()
                    print(f"Key is {key}")
                    try:
                        accounts_by_type[f"{key}"][f"account_code_{each['account_code']}"].append(each['amount'])
                    except KeyError:
                        accounts_by_type[f"{key}"][f"account_code_{each['account_code']}"] = []
                        accounts_by_type[f"{key}"][
                            f"account_code_{each['account_code']}"].append(each['amount'])
    else:
        raise HTTPException(status_code=404, detail="Journal Entry not found")

    print(f"accounts by type are {accounts_by_type}")

    for account in accounts_by_type['revenue']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['revenue'][f'{account}'] = sum(accounts_by_type['revenue'][f'{account}'])

    for account in accounts_by_type['cogs']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['cogs'][f'{account}'] = sum(accounts_by_type['cogs'][f'{account}'])

    for account in accounts_by_type['expense']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['expense'][f'{account}'] = sum(accounts_by_type['expense'][f'{account}'])

    for account in accounts_by_type['other_income']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['other_income'][f'{account}'] = sum(accounts_by_type['other_income'][f'{account}'])

    for account in accounts_by_type['other_expenses']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['other_expenses'][f'{account}'] = sum(accounts_by_type['other_expenses'][f'{account}'])

    print(f"UPDATED accounts by type are {accounts_by_type}")

    income_rows = []
    cogs_rows = []
    expense_rows = []
    other_income_rows = []
    other_expenses_rows = []

    total_income = 0
    print(f"TOTAL INCOME is {total_income}")

    absolute_total_income = 0
    print(f"ABSOLUTE TOTAL INCOME is {absolute_total_income}")

    absolute_total_other_income = 0
    print(f"ABSOLUTE TOTAL OTHER INCOME is {absolute_total_other_income}")

    total_cogs = 0
    print(f"TOTAL COSTS OF GOODS SOLD is {total_cogs}")

    gross_profit = 0
    print(f"GROSS PROFIT is {gross_profit}")

    total_expenses = 0
    print(f"TOTAL EXPENSES is {total_expenses}")

    net_operating_income = 0
    print(f"NET OPERATING INCOME is {net_operating_income}")

    total_other_income = 0
    print(f"TOTAL OTHER INCOME is {total_other_income}")

    total_other_expenses = 0
    print(f"TOTAL OTHER EXPENSES is {total_other_expenses}")

    net_other_income = 0
    print(f"NET OTHER INCOME is {net_other_income}")

    net_income = 0
    print(f"NET INCOME is {net_income}")

    for account, balance in accounts_by_type['revenue'].items():
        total_income += balance
        absolute_total_income += abs(balance)
        print(f"Account is {account} and balance is {balance}")
        account_id = str(account).split("_")[-1]
        print(f"Account ID is {account_id}")
        column_data_id_value = {"id": account_id, "value": str(account).capitalize()}
        print(f"ColData ID VALUE is {column_data_id_value}")
        column_data_value = {"value": str(balance * -1)}
        print(f"ColData VALUE is {column_data_value}")
        column_data = {"ColData": [column_data_id_value, column_data_value], "type": "Data"}
        print(f"ColData is {column_data}")
        income_rows.append(column_data)

    print(f"INCOME_ROWS is {income_rows}")
    print(f"TOTAL_INCOME is {total_income}")
    print(f"ABSOLUTE_TOTAL_INCOME is {absolute_total_income}")

    for account, balance in accounts_by_type['cogs'].items():
        total_cogs += balance
        print(f"Account is {account} and balance is {balance}")
        account_id = str(account).split("_")[-1]
        print(f"Account ID is {account_id}")
        column_data_id_value = {"id": account_id, "value": str(account).capitalize()}
        print(f"ColData ID VALUE is {column_data_id_value}")
        column_data_value = {"value": str(balance)}
        print(f"ColData VALUE is {column_data_value}")
        column_data = {"ColData": [column_data_id_value, column_data_value], "type": "Data"}
        print(f"ColData is {column_data}")
        cogs_rows.append(column_data)

    print(f"COGS_ROWS is {cogs_rows}")
    print(f"TOTAL_COGS is {total_cogs}")

    for account, balance in accounts_by_type['expense'].items():
        total_expenses += balance
        print(f"Account is {account} and balance is {balance}")
        account_id = str(account).split("_")[-1]
        print(f"Account ID is {account_id}")
        column_data_id_value = {"id": account_id, "value": str(account).capitalize()}
        print(f"ColData ID VALUE is {column_data_id_value}")
        column_data_value = {"value": str(balance)}
        print(f"ColData VALUE is {column_data_value}")
        column_data = {"ColData": [column_data_id_value, column_data_value], "type": "Data"}
        print(f"ColData is {column_data}")
        expense_rows.append(column_data)

    print(f"EXPENSE_ROWS is {expense_rows}")
    print(f"TOTAL_EXPENSES is {total_expenses}")

    for account, balance in accounts_by_type['other_income'].items():
        total_other_income += balance
        absolute_total_other_income += abs(balance)
        print(f"Account is {account} and balance is {balance}")
        account_id = str(account).split("_")[-1]
        print(f"Account ID is {account_id}")
        column_data_id_value = {"id": account_id, "value": str(account).capitalize()}
        print(f"ColData ID VALUE is {column_data_id_value}")
        column_data_value = {"value": str(balance * -1)}
        print(f"ColData VALUE is {column_data_value}")
        column_data = {"ColData": [column_data_id_value, column_data_value], "type": "Data"}
        print(f"ColData is {column_data}")
        other_income_rows.append(column_data)

    print(f"OTHER_INCOME_ROWS is {other_income_rows}")
    print(f"TOTAL_OTHER_INCOME is {total_other_income}")
    print(f"ABSOLUTE_TOTAL_OTHER_INCOME is {absolute_total_other_income}")

    for account, balance in accounts_by_type['other_expenses'].items():
        total_other_expenses += balance
        print(f"Account is {account} and balance is {balance}")
        account_id = str(account).split("_")[-1]
        print(f"Account ID is {account_id}")
        column_data_id_value = {"id": account_id, "value": str(account).capitalize()}
        print(f"ColData ID VALUE is {column_data_id_value}")
        column_data_value = {"value": str(balance)}
        print(f"ColData VALUE is {column_data_value}")
        column_data = {"ColData": [column_data_id_value, column_data_value], "type": "Data"}
        print(f"ColData is {column_data}")
        other_expenses_rows.append(column_data)

    print(f"OTHER_EXPENSES_ROWS is {other_expenses_rows}")
    print(f"TOTAL_OTHER_EXPENSES is {total_other_expenses}")

    gross_profit = absolute_total_income - total_cogs
    print(f"GROSS PROFIT is {gross_profit}")

    net_operating_income = gross_profit - total_expenses
    print(f"NET OPERATING INCOME is {net_operating_income}")

    net_income = net_operating_income + net_other_income
    print(f"NET INCOME is {net_income}")

    net_other_income = absolute_total_other_income - total_other_expenses
    print(f"NET OTHER INCOME is {net_other_income}")

    income_group = {
        "Header": {
            "ColData": [
                {
                    "value": "Income"
                },
                {
                    "value": ""
                }
            ]
        },
        "Rows": {
            "Row": []

        },
        "type": "Section",
        "group": "Income",
        "Summary": {
            "ColData": []
        }
    }
    income_group['Rows']['Row'] = income_rows
    income_group['Summary']['ColData'] = [
        {"value": "Total Income"},
        {"value": f"{absolute_total_income}"}
    ]
    print(f"DYNAMIC INCOME_GROUP is {income_group}")

    cogs_group = {
        "Header": {
            "ColData": [
                {
                    "value": "Cost of Goods Sold"
                },
                {
                    "value": ""
                }
            ]
        },
        "Rows": {
            "Row": []

        },
        "type": "Section",
        "group": "COGS",
        "Summary": {
            "ColData": []
        }
    }
    cogs_group['Rows']['Row'] = cogs_rows
    cogs_group['Summary']['ColData'] = [
        {"value": "Total Cost of Goods Sold"},
        {"value": f"{total_cogs}"}
    ]
    print(f"DYNAMIC COGS GROUP is {cogs_group}")

    gross_profit_group = {
        "type": "Section",
        "group": "Gross Profit",
        "Summary": {
            "ColData": []
        }
    }
    gross_profit_group['Summary']['ColData'] = [
        {"value": "Gross Profit"},
        {"value": f"{gross_profit}"}
    ]
    print(f"DYNAMIC GROSS PROFIT GROUP is {gross_profit_group}")

    expense_group = {
        "Header": {
            "ColData": [
                {
                    "value": "Expenses"
                },
                {
                    "value": ""
                }
            ]
        },
        "Rows": {
            "Row": []

        },
        "type": "Section",
        "group": "Expense",
        "Summary": {
            "ColData": []
        }
    }
    expense_group['Rows']['Row'] = expense_rows
    expense_group['Summary']['ColData'] = [
        {"value": "Total Expenses"},
        {"value": f"{total_expenses}"}
    ]
    print(f"DYNAMIC EXPENSE GROUP is {expense_group}")

    net_operating_income_group = {
        "type": "Section",
        "group": "Net Operating Income",
        "Summary": {
            "ColData": []
        }
    }
    net_operating_income_group['Summary']['ColData'] = [
        {"value": "Net Operating Income"},
        {"value": f"{net_operating_income}"}
    ]
    print(f"NET OPERATING INCOME GROUP is {net_operating_income_group}")

    net_income_group = {
        "type": "Section",
        "group": "Net Income",
        "Summary": {
            "ColData": []
        }
    }
    net_income_group['Summary']['ColData'] = [
        {"value": "Net Income"},
        {"value": f"{net_income}"}
    ]
    print(f"NET INCOME GROUP is {net_income_group}")

    net_other_income_group = {
        "type": "Section",
        "group": "Net Other Income",
        "Summary": {
            "ColData": []
        }
    }
    net_other_income_group['Summary']['ColData'] = [
        {"value": "Net Other Income"},
        {"value": f"{net_other_income}"}
    ]
    print(f"NET OTHER INCOME GROUP is {net_other_income_group}")

    other_income_group = {
        "Header": {
            "ColData": [
                {
                    "value": "Other Income"
                },
                {
                    "value": ""
                }
            ]
        },
        "Rows": {
            "Row": []

        },
        "type": "Section",
        "group": "Other Income",
        "Summary": {
            "ColData": []
        }
    }

    other_income_group['Rows']['Row'] = other_income_rows
    other_income_group['Summary']['ColData'] = [
        {"value": "Total Other Income"},
        {"value": f"{total_other_income}"}
    ]
    print(f"OTHER INCOME GROUP is {other_income_group}")

    other_expenses_group = {
        "Header": {
            "ColData": [
                {
                    "value": "Other Expenses"
                },
                {
                    "value": ""
                }
            ]
        },
        "Rows": {
            "Row": []

        },
        "type": "Section",
        "group": "Other Expenses",
        "Summary": {
            "ColData": []
        }
    }
    other_expenses_group['Rows']['Row'] = other_expenses_rows
    other_expenses_group['Summary']['ColData'] = [
        {"value": "Total Other Expenses"},
        {"value": f"{total_other_expenses}"}
    ]
    print(f"OTHER EXPENSE GROUP is {other_expenses_group}")

    profit_and_loss = {
        "Header": {
            "ReportName": "ProfitAndLoss",
            "Option": [
                {
                    "Name": "AccountingStandard",
                    "Value": "GAAP"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "ReportBasis": "Accrual",
            "StartPeriod": f'{start_date}',
            "Currency": "USD",
            "EndPeriod": f'{end_date}',
            "Time": f'{datetime.now()}',
            "SummarizeColumnsBy": "Total"
        },
        "Rows": {
            "Row": [income_group, cogs_group, gross_profit_group, expense_group, net_operating_income_group,
                    other_income_group, other_expenses_group, net_other_income_group, net_income_group]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Account",
                    "ColTitle": "",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "account"
                        }
                    ]
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "total"
                        }
                    ]
                }
            ]
        }
    }

    return profit_and_loss


@app.get("/reports/balance_sheet", tags=["Reports"])
async def query_balance_sheet(start_date: Optional[date] = None, end_date: Optional[date] = None):
    """
        Query a journal entry using a sql statement:

    """

    result = journal_entry_table.find(date={'between': [start_date, end_date]})
    print(f"The result is {result}")
    accounts_by_type = {'asset': {}, 'liability': {}, 'equity': {}, 'revenue': {}, 'expense': {}}
    retained_earnings = 0
    if result:
        for row in result:
            print(f"The row is {row['journal_lines']}")
            journal_lines = json.loads(row['journal_lines'])
            for each in journal_lines:
                print(f"each in journal_lines is {each}")

                if str(each['account_type']).lower() in ["asset", "liability", "equity", "revenue", "expense"]:
                    key = str(each['account_type']).lower()
                    print(f"Key is {key}")
                    try:
                        accounts_by_type[f"{key}"][f"account_code_{each['account_code']}"].append(each['amount'])
                    except KeyError:
                        accounts_by_type[f"{key}"][f"account_code_{each['account_code']}"] = []
                        accounts_by_type[f"{key}"][
                            f"account_code_{each['account_code']}"].append(each['amount'])

    else:
        raise HTTPException(status_code=404, detail="Journal Entry not found")

    print(f"accounts by type are {accounts_by_type}")

    for account in accounts_by_type['asset']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['asset'][f'{account}'] = sum(accounts_by_type['asset'][f'{account}'])

    for account in accounts_by_type['liability']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['liability'][f'{account}'] = sum(accounts_by_type['liability'][f'{account}'])

    for account in accounts_by_type['equity']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['equity'][f'{account}'] = sum(accounts_by_type['equity'][f'{account}'])

    for account in accounts_by_type['revenue']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['revenue'][f'{account}'] = sum(accounts_by_type['revenue'][f'{account}'])
        retained_earnings -= accounts_by_type['revenue'][f'{account}']

    for account in accounts_by_type['expense']:
        print(f"account in ACCOUNTS BY TYPE is {account}")
        accounts_by_type['expense'][f'{account}'] = sum(accounts_by_type['expense'][f'{account}'])
        retained_earnings -= accounts_by_type['expense'][f'{account}']

    print(f"UPDATED accounts by type are {accounts_by_type}")
    print(f"RETAINED_EARNINGS is {retained_earnings}")

    balance_sheet = {}
    return balance_sheet


@app.get("/reports/trial_balance", tags=["Reports"])
async def query_trial_balance(accounting_method: Optional[str] = None,
                              start_period: Optional[str] = None,
                              end_period: Optional[str] = None,
                              date_macro: Optional[str] = None,
                              sort_order: Optional[str] = None,
                              summarize_column_by: Optional[str] = None):
    trial_balance = {
        "Columns": {
            "Column": [
                {
                    "ColTitle": "",
                    "ColType": "Account"
                },
                {
                    "ColTitle": "Debit",
                    "ColType": "Money"
                },
                {
                    "ColTitle": "Credit",
                    "ColType": "Money"
                }
            ]
        },
        "Header": {
            "Currency": "USD",
            "DateMacro": "this month-to-date",
            "EndPeriod": "2020-10-02",
            "Option": [
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "ReportBasis": "Accrual",
            "ReportName": "TrialBalance",
            "StartPeriod": "2020-10-01",
            "SummarizeColumnsBy": "Total",
            "Time": "2020-10-02T00:03:29-07:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "35",
                            "value": "Checking"
                        },
                        {
                            "value": "1201.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "36",
                            "value": "Savings"
                        },
                        {
                            "value": "800.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "84",
                            "value": "Accounts Receivable (A/R)"
                        },
                        {
                            "value": "5335.52"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "81",
                            "value": "Inventory Asset"
                        },
                        {
                            "value": "596.25"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "4",
                            "value": "Undeposited Funds"
                        },
                        {
                            "value": "2062.52"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "38",
                            "value": "Truck:Original Cost"
                        },
                        {
                            "value": "13495.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "33",
                            "value": "Accounts Payable (A/P)"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "1602.67"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "41",
                            "value": "Mastercard"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "157.72"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "89",
                            "value": "Arizona Dept. of Revenue Payable"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "0.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "90",
                            "value": "Board of Equalization Payable"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "374.94"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "43",
                            "value": "Loan Payable"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "4000.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "44",
                            "value": "Notes Payable"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "25000.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "34",
                            "value": "Opening Balance Equity"
                        },
                        {
                            "value": "9337.50"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "82",
                            "value": "Design income"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "2250.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "86",
                            "value": "Discounts given"
                        },
                        {
                            "value": "89.50"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "45",
                            "value": "Landscaping Services"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "1477.50"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "48",
                            "value": "Landscaping Services:Job Materials:Fountains and Garden Lighting"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "2296.50"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "49",
                            "value": "Landscaping Services:Job Materials:Plants and Soil"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "2351.97"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "50",
                            "value": "Landscaping Services:Job Materials:Sprinklers and Drip Systems"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "138.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "52",
                            "value": "Landscaping Services:Labor:Installation"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "250.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "53",
                            "value": "Landscaping Services:Labor:Maintenance and Repair"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "50.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "54",
                            "value": "Pest Control Services"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "110.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "79",
                            "value": "Sales of Product Income"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "912.75"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "1",
                            "value": "Services"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "503.55"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "80",
                            "value": "Cost of Goods Sold"
                        },
                        {
                            "value": "405.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "7",
                            "value": "Advertising"
                        },
                        {
                            "value": "74.86"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "55",
                            "value": "Automobile"
                        },
                        {
                            "value": "113.96"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "56",
                            "value": "Automobile:Fuel"
                        },
                        {
                            "value": "349.41"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "29",
                            "value": "Equipment Rental"
                        },
                        {
                            "value": "112.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "11",
                            "value": "Insurance"
                        },
                        {
                            "value": "241.23"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "58",
                            "value": "Job Expenses"
                        },
                        {
                            "value": "155.07"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "64",
                            "value": "Job Expenses:Job Materials:Decks and Patios"
                        },
                        {
                            "value": "234.04"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "66",
                            "value": "Job Expenses:Job Materials:Plants and Soil"
                        },
                        {
                            "value": "353.12"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "67",
                            "value": "Job Expenses:Job Materials:Sprinklers and Drip Systems"
                        },
                        {
                            "value": "215.66"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "12",
                            "value": "Legal & Professional Fees"
                        },
                        {
                            "value": "75.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "69",
                            "value": "Legal & Professional Fees:Accounting"
                        },
                        {
                            "value": "640.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "70",
                            "value": "Legal & Professional Fees:Bookkeeper"
                        },
                        {
                            "value": "55.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "71",
                            "value": "Legal & Professional Fees:Lawyer"
                        },
                        {
                            "value": "400.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "72",
                            "value": "Maintenance and Repair"
                        },
                        {
                            "value": "185.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "75",
                            "value": "Maintenance and Repair:Equipment Repairs"
                        },
                        {
                            "value": "755.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "13",
                            "value": "Meals and Entertainment"
                        },
                        {
                            "value": "28.49"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "15",
                            "value": "Office Expenses"
                        },
                        {
                            "value": "18.08"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "17",
                            "value": "Rent or Lease"
                        },
                        {
                            "value": "900.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "76",
                            "value": "Utilities:Gas and Electric"
                        },
                        {
                            "value": "200.53"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "77",
                            "value": "Utilities:Telephone"
                        },
                        {
                            "value": "130.86"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "14",
                            "value": "Miscellaneous"
                        },
                        {
                            "value": "2916.00"
                        },
                        {
                            "value": ""
                        }
                    ]
                },
                {
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "41475.60"
                            },
                            {
                                "value": "41475.60"
                            }
                        ]
                    },
                    "group": "GrandTotal",
                    "type": "Section"
                }
            ]
        }
    }
    return trial_balance


@app.get("/reports/general_ledger", tags=["Reports"])
async def query_general_ledger():
    general_ledger = {
        "Columns": {
            "Column": [
                {
                    "ColTitle": "Date",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "tx_date"
                        }
                    ]
                },
                {
                    "ColTitle": "Transaction Type",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "txn_type"
                        }
                    ]
                },
                {
                    "ColTitle": "Num",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "doc_num"
                        }
                    ]
                },
                {
                    "ColTitle": "Name",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "name"
                        }
                    ]
                },
                {
                    "ColTitle": "Memo/Description",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "memo"
                        }
                    ]
                },
                {
                    "ColTitle": "Split",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "split_acc"
                        }
                    ]
                },
                {
                    "ColTitle": "Amount",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "subt_nat_amount"
                        }
                    ]
                },
                {
                    "ColTitle": "Balance",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "rbal_nat_amount"
                        }
                    ]
                }
            ]
        },
        "Header": {
            "Currency": "USD",
            "DateMacro": "this month-to-date",
            "EndPeriod": "2020-10-02",
            "Option": [
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "ReportBasis": "Accrual",
            "ReportName": "GeneralLedger",
            "StartPeriod": "2020-10-01",
            "Time": "2020-10-02T00:17:44-07:00"
        },
        "Rows": {
            "Row": [
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "35",
                                "value": "Checking"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "1201.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Checking"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "36",
                                "value": "Savings"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "800.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Savings"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "84",
                                "value": "Accounts Receivable (A/R)"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "5335.52"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Accounts Receivable (A/R)"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "81",
                                "value": "Inventory Asset"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "596.25"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Inventory Asset"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "4",
                                "value": "Undeposited Funds"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "2062.52"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Undeposited Funds"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "value": "Truck"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "38",
                                            "value": "Original Cost"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "13495.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Original Cost"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Truck"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "33",
                                "value": "Accounts Payable (A/P)"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "1602.67"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Accounts Payable (A/P)"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "41",
                                "value": "Mastercard"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "157.72"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Mastercard"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "90",
                                "value": "Board of Equalization Payable"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "374.94"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Board of Equalization Payable"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "43",
                                "value": "Loan Payable"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "4000.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Loan Payable"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "44",
                                "value": "Notes Payable"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "25000.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Notes Payable"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "34",
                                "value": "Opening Balance Equity"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "-9337.50"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Opening Balance Equity"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "82",
                                "value": "Design income"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "2250.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Design income"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "86",
                                "value": "Discounts given"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "-89.50"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Discounts given"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "45",
                                "value": "Landscaping Services"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "1477.50"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Landscaping Services"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "value": "Job Materials"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "48",
                                                        "value": "Fountains and Garden Lighting"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "2296.50"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Fountains and Garden Lighting"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        },
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "49",
                                                        "value": "Plants and Soil"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "2351.97"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Plants and Soil"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        },
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "50",
                                                        "value": "Sprinklers and Drip Systems"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "138.00"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Sprinklers and Drip Systems"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Job Materials"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "value": "Labor"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "52",
                                                        "value": "Installation"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "250.00"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Installation"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        },
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "53",
                                                        "value": "Maintenance and Repair"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "50.00"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Maintenance and Repair"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Labor"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Landscaping Services with sub-accounts"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "54",
                                "value": "Pest Control Services"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "110.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Pest Control Services"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "79",
                                "value": "Sales of Product Income"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "912.75"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Sales of Product Income"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "1",
                                "value": "Services"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "503.55"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Services"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "80",
                                "value": "Cost of Goods Sold"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "405.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Cost of Goods Sold"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "7",
                                "value": "Advertising"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "74.86"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Advertising"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "55",
                                "value": "Automobile"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "113.96"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Automobile"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "56",
                                            "value": "Fuel"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "349.41"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Fuel"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Automobile with sub-accounts"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "29",
                                "value": "Equipment Rental"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "112.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Equipment Rental"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "11",
                                "value": "Insurance"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "241.23"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Insurance"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "58",
                                "value": "Job Expenses"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "155.07"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Job Expenses"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "value": "Job Materials"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "64",
                                                        "value": "Decks and Patios"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "234.04"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Decks and Patios"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        },
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "66",
                                                        "value": "Plants and Soil"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "353.12"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Plants and Soil"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        },
                                        {
                                            "Header": {
                                                "ColData": [
                                                    {
                                                        "id": "67",
                                                        "value": "Sprinklers and Drip Systems"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "Rows": {
                                                "Row": [
                                                    {
                                                        "ColData": [
                                                            {
                                                                "value": "Beginning Balance"
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": ""
                                                            },
                                                            {
                                                                "value": "215.66"
                                                            }
                                                        ],
                                                        "type": "Data"
                                                    }
                                                ]
                                            },
                                            "Summary": {
                                                "ColData": [
                                                    {
                                                        "value": "Total for Sprinklers and Drip Systems"
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    },
                                                    {
                                                        "value": ""
                                                    }
                                                ]
                                            },
                                            "type": "Section"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Job Materials"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Job Expenses with sub-accounts"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "12",
                                "value": "Legal & Professional Fees"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "75.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Legal & Professional Fees"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "69",
                                            "value": "Accounting"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "640.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Accounting"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "70",
                                            "value": "Bookkeeper"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "55.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Bookkeeper"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "71",
                                            "value": "Lawyer"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "400.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Lawyer"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Legal & Professional Fees with sub-accounts"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "72",
                                "value": "Maintenance and Repair"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "185.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Maintenance and Repair"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "75",
                                            "value": "Equipment Repairs"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "755.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Equipment Repairs"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Maintenance and Repair with sub-accounts"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "13",
                                "value": "Meals and Entertainment"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "28.49"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Meals and Entertainment"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "15",
                                "value": "Office Expenses"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "18.08"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Office Expenses"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "17",
                                "value": "Rent or Lease"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "900.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Rent or Lease"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "value": "Utilities"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "76",
                                            "value": "Gas and Electric"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "200.53"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Gas and Electric"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "id": "77",
                                            "value": "Telephone"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "value": "Beginning Balance"
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": ""
                                                },
                                                {
                                                    "value": "130.86"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total for Telephone"
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Utilities"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "14",
                                "value": "Miscellaneous"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Beginning Balance"
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": ""
                                    },
                                    {
                                        "value": "2916.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Miscellaneous"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "type": "Section"
                }
            ]
        }
    }
    return general_ledger


@app.get("/reports/customer_list", tags=["Reports"])
async def query_customer_list():
    customer_list = {}
    return customer_list


@app.get("/reports/vendor_list", tags=["Reports"])
async def query_vendor_list():
    vendor_list = {}
    return


@app.get("/reports/item_list", tags=["Reports"])
async def query_item_list():
    item_list = {}
    return item_list


@app.get("/reports/cash_flow", tags=["Reports"])
async def query_cash_flow():
    cash_flow = {
        "Columns": {
            "Column": [
                {
                    "ColTitle": "",
                    "ColType": "Account"
                },
                {
                    "ColTitle": "Total",
                    "ColType": "Money",
                    "MetaData": [
                        {
                            "Name": "ColKey",
                            "Value": "total"
                        }
                    ]
                }
            ]
        },
        "Header": {
            "Currency": "USD",
            "DateMacro": "this calendar year-to-date",
            "EndPeriod": "2020-10-02",
            "Option": [
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "ReportName": "CashFlow",
            "StartPeriod": "2020-01-01",
            "SummarizeColumnsBy": "Total",
            "Time": "2020-10-02T00:22:58-07:00"
        },
        "Rows": {
            "Row": [
                {
                    "Header": {
                        "ColData": [
                            {
                                "value": "OPERATING ACTIVITIES"
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "Net Income"
                                    },
                                    {
                                        "value": "1692.46"
                                    }
                                ],
                                "group": "NetIncome",
                                "type": "Data"
                            },
                            {
                                "Header": {
                                    "ColData": [
                                        {
                                            "value": "Adjustments to reconcile Net Income to Net Cash provided by operations:"
                                        },
                                        {
                                            "value": ""
                                        }
                                    ]
                                },
                                "Rows": {
                                    "Row": [
                                        {
                                            "ColData": [
                                                {
                                                    "id": "84",
                                                    "value": "Accounts Receivable (A/R)"
                                                },
                                                {
                                                    "value": "-5335.52"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "ColData": [
                                                {
                                                    "id": "81",
                                                    "value": "Inventory Asset"
                                                },
                                                {
                                                    "value": "-596.25"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "ColData": [
                                                {
                                                    "id": "33",
                                                    "value": "Accounts Payable (A/P)"
                                                },
                                                {
                                                    "value": "1602.67"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "ColData": [
                                                {
                                                    "id": "41",
                                                    "value": "Mastercard"
                                                },
                                                {
                                                    "value": "157.72"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "ColData": [
                                                {
                                                    "id": "89",
                                                    "value": "Arizona Dept. of Revenue Payable"
                                                },
                                                {
                                                    "value": "0.00"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "ColData": [
                                                {
                                                    "id": "90",
                                                    "value": "Board of Equalization Payable"
                                                },
                                                {
                                                    "value": "374.94"
                                                }
                                            ],
                                            "type": "Data"
                                        },
                                        {
                                            "ColData": [
                                                {
                                                    "id": "43",
                                                    "value": "Loan Payable"
                                                },
                                                {
                                                    "value": "4000.00"
                                                }
                                            ],
                                            "type": "Data"
                                        }
                                    ]
                                },
                                "Summary": {
                                    "ColData": [
                                        {
                                            "value": "Total Adjustments to reconcile Net Income to Net Cash provided by operations:"
                                        },
                                        {
                                            "value": "203.56"
                                        }
                                    ]
                                },
                                "group": "OperatingAdjustments",
                                "type": "Section"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Net cash provided by operating activities"
                            },
                            {
                                "value": "1896.02"
                            }
                        ]
                    },
                    "group": "OperatingActivities",
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "value": "INVESTING ACTIVITIES"
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "id": "38",
                                        "value": "Truck:Original Cost"
                                    },
                                    {
                                        "value": "-13495.00"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Net cash provided by investing activities"
                            },
                            {
                                "value": "-13495.00"
                            }
                        ]
                    },
                    "group": "InvestingActivities",
                    "type": "Section"
                },
                {
                    "Header": {
                        "ColData": [
                            {
                                "value": "FINANCING ACTIVITIES"
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "id": "44",
                                        "value": "Notes Payable"
                                    },
                                    {
                                        "value": "25000.00"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "id": "34",
                                        "value": "Opening Balance Equity"
                                    },
                                    {
                                        "value": "-9337.50"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Net cash provided by financing activities"
                            },
                            {
                                "value": "15662.50"
                            }
                        ]
                    },
                    "group": "FinancingActivities",
                    "type": "Section"
                },
                {
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Net cash increase for period"
                            },
                            {
                                "value": "4063.52"
                            }
                        ]
                    },
                    "group": "CashIncrease",
                    "type": "Section"
                },
                {
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Cash at end of period"
                            },
                            {
                                "value": "4063.52"
                            }
                        ]
                    },
                    "group": "EndingCash",
                    "type": "Section"
                }
            ]
        }
    }
    return cash_flow


@app.get("/reports/customer_balance", tags=["Reports"])
async def query_customer_balance():
    customer_balance = {
        "Header": {
            "Customer": "1",
            "ReportName": "CustomerBalance",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2016-03-10"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "all",
            "Currency": "USD",
            "Time": "2016-03-10T08:51:44-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "1",
                            "value": "Amy's Bird Sanctuary"
                        },
                        {
                            "value": "1593.50"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "1593.50"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Customer",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return customer_balance


@app.get("/reports/customer_balance_detail", tags=["Reports"])
async def query_customer_balance_detail():
    customer_balance_detail = {
        "Header": {
            "Customer": "1",
            "ReportName": "CustomerBalanceDetail",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2016-03-10"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "all",
            "Currency": "USD",
            "Time": "2016-03-10T13:43:05-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "1",
                                "value": "Amy's Bird Sanctuary"
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "100.0"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "109.1"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "109.1"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "109.2"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "109.2"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "109.1"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "100.0"
                                    }
                                ],
                                "type": "Data"
                            },
                            {
                                "ColData": [
                                    {
                                        "value": "2015-08-04"
                                    },
                                    {
                                        "value": "109.1"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Amy's Bird Sanctuary"
                            },
                            {
                                "value": "854.8"
                            }
                        ]
                    }
                },
                {
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "854.8"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "tx_date",
                    "ColTitle": "Date"
                },
                {
                    "ColType": "subt_amount",
                    "ColTitle": "Amount"
                }
            ]
        }
    }
    return customer_balance_detail


@app.get("/reports/vendor_balance", tags=["Reports"])
async def query_vendor_balance():
    vendor_balance = {
        "Header": {
            "ReportName": "VendorBalance",
            "DateMacro": "all",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2016-03-14"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "Currency": "USD",
            "Time": "2016-03-14T10:39:07-07:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "56",
                            "value": "Bob's Burger Joint"
                        },
                        {
                            "value": "-46.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "31",
                            "value": "Brosnahan Insurance Agency"
                        },
                        {
                            "value": "241.23"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "36",
                            "value": "Diego's Road Warrior Bodyshop"
                        },
                        {
                            "value": "755.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "46",
                            "value": "Norton Lumber and Building Materials"
                        },
                        {
                            "value": "205.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "48",
                            "value": "PG&E"
                        },
                        {
                            "value": "86.44"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "1241.67"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Vendor",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return vendor_balance


@app.get("/reports/vendor_balance_detail", tags=["Reports"])
async def query_vendor_balance_detail():
    vendor_balance_detail = {
        "Header": {
            "ReportName": "VendorBalanceDetail",
            "Vendor": "31",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2015-12-31"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "last calendar year",
            "StartPeriod": "2015-01-01",
            "Currency": "USD",
            "EndPeriod": "2015-12-31",
            "Time": "2016-03-14T11:18:40-07:00"
        },
        "Rows": {
            "Row": [
                {
                    "Header": {
                        "ColData": [
                            {
                                "id": "31",
                                "value": "Brosnahan Insurance Agency"
                            },
                            {
                                "value": ""
                            },
                            {
                                "value": ""
                            }
                        ]
                    },
                    "Rows": {
                        "Row": [
                            {
                                "ColData": [
                                    {
                                        "value": "2015-07-02"
                                    },
                                    {
                                        "value": "241.23"
                                    },
                                    {
                                        "value": "241.23"
                                    }
                                ],
                                "type": "Data"
                            }
                        ]
                    },
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "Total for Brosnahan Insurance Agency"
                            },
                            {
                                "value": "241.23"
                            },
                            {
                                "value": "241.23"
                            }
                        ]
                    }
                },
                {
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "241.23"
                            },
                            {
                                "value": "241.23"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "tx_date",
                    "ColTitle": "Date"
                },
                {
                    "ColType": "subt_neg_amount",
                    "ColTitle": "Amount"
                },
                {
                    "ColType": "subt_neg_open_bal",
                    "ColTitle": "Open Balance"
                }
            ]
        }
    }
    return vendor_balance_detail


@app.get("/reports/inventory_valuation_summary", tags=["Reports"])
async def query_inventory_valuation_summary():
    inventory_valuation_summary = {
        "Header": {
            "ReportName": "InventoryValuationSummary",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2016-10-06"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "today",
            "StartPeriod": "2016-10-06",
            "Currency": "USD",
            "EndPeriod": "2016-10-06",
            "Time": "2016-10-06T09:28:21-07:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "11",
                            "value": "Pump"
                        },
                        {
                            "value": "2890"
                        },
                        {
                            "value": "25.00"
                        },
                        {
                            "value": "250.00"
                        },
                        {
                            "value": "10.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "5",
                            "value": "Rock Fountain"
                        },
                        {
                            "value": "2345"
                        },
                        {
                            "value": "2.00"
                        },
                        {
                            "value": "250.00"
                        },
                        {
                            "value": "125.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "16",
                            "value": "Sprinkler Heads"
                        },
                        {
                            "value": "3456"
                        },
                        {
                            "value": "25.00"
                        },
                        {
                            "value": "18.75"
                        },
                        {
                            "value": "0.75"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "17",
                            "value": "Sprinkler Pipes"
                        },
                        {
                            "value": "5678"
                        },
                        {
                            "value": "31.00"
                        },
                        {
                            "value": "77.50"
                        },
                        {
                            "value": "2.50"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "value": "TOTAL"
                        },
                        {
                            "value": " "
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "596.25"
                        },
                        {
                            "value": ""
                        }
                    ],
                    "group": "GrandTotal"
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "ProductsAndService",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "SKU"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Qty"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Asset Value"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Avg Cost"
                }
            ]
        }
    }
    return inventory_valuation_summary


@app.get("/reports/sales_by_class_summary", tags=["Reports"])
async def query_sales_by_class_summary():
    sales_by_class_summary = {
        "Header": {
            "Customer": "1",
            "ReportName": "CustomerSales",
            "Option": [
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "ReportBasis": "Accrual",
            "StartPeriod": "2015-08-01",
            "Currency": "USD",
            "EndPeriod": "2015-09-30",
            "Time": "2016-03-10T14:59:12-08:00",
            "SummarizeColumnsBy": "Total"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "1",
                            "value": "Amy's Bird Sanctuary"
                        },
                        {
                            "value": "1200.00"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "1200.00"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Customer",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return sales_by_class_summary


@app.get("/reports/sales_by_department", tags=["Reports"])
async def query_sales_by_department():
    sales_by_department = {}
    return sales_by_department


@app.get("/reports/sales_by_product", tags=["Reports"])
async def query_sales_by_product():
    sales_by_product = {}
    return sales_by_product


@app.get("/reports/ap_aging_summary", tags=["Reports"])
async def query_ap_aging_summary(accounting_method: Optional[str] = None,
                                 start_period: Optional[str] = None,
                                 end_period: Optional[str] = None,
                                 date_macro: Optional[str] = None,
                                 sort_order: Optional[str] = None,
                                 summarize_column_by: Optional[str] = None):
    ap_aging_summary = {
        "Header": {
            "ReportName": "AgedPayables",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2022-03-08"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "today",
            "StartPeriod": "2022-03-08",
            "Currency": "USD",
            "EndPeriod": "2022-03-08",
            "Time": "2022-03-08T16:11:49-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "56",
                            "value": "Bob's Burger Joint"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "-46.00"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "-46.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "31",
                            "value": "Brosnahan Insurance Agency"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "241.23"
                        },
                        {
                            "value": "241.23"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "36",
                            "value": "Diego's Road Warrior Bodyshop"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "755.00"
                        },
                        {
                            "value": "755.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "46",
                            "value": "Norton Lumber and Building Materials"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "205.00"
                        },
                        {
                            "value": "205.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "48",
                            "value": "PG&E"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "86.44"
                        },
                        {
                            "value": "86.44"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "-46.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "1287.67"
                            },
                            {
                                "value": "1241.67"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Vendor",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Current"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "1 - 30"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "31 - 60"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "61 - 90"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "91 and over"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return ap_aging_summary


@app.get("/reports/ar_aging_summary", tags=["Reports"])
async def query_ar_aging_summary(accounting_method: Optional[str] = None,
                                 start_period: Optional[str] = None,
                                 end_period: Optional[str] = None,
                                 date_macro: Optional[str] = None,
                                 sort_order: Optional[str] = None,
                                 summarize_column_by: Optional[str] = None):
    ar_aging_summary = {
        "Header": {
            "Customer": "4",
            "ReportName": "AgedReceivables",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2022-12-31"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "last calendar year",
            "StartPeriod": "2022-01-01",
            "Currency": "USD",
            "EndPeriod": "2022-12-31",
            "Time": "2022-03-09T09:09:52-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "4",
                            "value": "Jane Litigious"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "37.50"
                        },
                        {
                            "value": "37.50"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "37.50"
                            },
                            {
                                "value": "37.50"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Customer",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Current"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "1 - 30"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "31 - 60"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "61 - 90"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "91 and over"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return ar_aging_summary


@app.get("/reports/ar_aging_detail", tags=["Reports"])
async def query_ar_aging_detail(accounting_method: Optional[str] = None,
                                start_period: Optional[str] = None,
                                end_period: Optional[str] = None,
                                date_macro: Optional[str] = None,
                                sort_order: Optional[str] = None,
                                summarize_column_by: Optional[str] = None):
    ar_aging_detail = {
        "Header": {
            "Customer": "4",
            "ReportName": "AgedReceivables",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2022-12-31"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "last calendar year",
            "StartPeriod": "2021-01-01",
            "Currency": "USD",
            "EndPeriod": "2021-12-31",
            "Time": "2022-03-09T09:09:52-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "4",
                            "value": "Jane Litigious"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "37.50"
                        },
                        {
                            "value": "37.50"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "37.50"
                            },
                            {
                                "value": "37.50"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Customer",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Current"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "1 - 30"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "31 - 60"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "61 - 90"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "91 and over"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return ar_aging_detail


@app.get("/reports/ap_aging_detail", tags=["Reports"])
async def query_ap_aging_detail(accounting_method: Optional[str] = None,
                                start_period: Optional[str] = None,
                                end_period: Optional[str] = None,
                                date_macro: Optional[str] = None,
                                sort_order: Optional[str] = None,
                                summarize_column_by: Optional[str] = None):
    ap_aging_detail = {
        "Header": {
            "ReportName": "AgedPayables",
            "Option": [
                {
                    "Name": "report_date",
                    "Value": "2022-03-08"
                },
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "DateMacro": "today",
            "StartPeriod": "2022-03-08",
            "Currency": "USD",
            "EndPeriod": "2022-03-08",
            "Time": "2022-03-08T16:11:49-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "id": "56",
                            "value": "Bob's Burger Joint"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "-46.00"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "-46.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "31",
                            "value": "Brosnahan Insurance Agency"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "241.23"
                        },
                        {
                            "value": "241.23"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "36",
                            "value": "Diego's Road Warrior Bodyshop"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "755.00"
                        },
                        {
                            "value": "755.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "46",
                            "value": "Norton Lumber and Building Materials"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "205.00"
                        },
                        {
                            "value": "205.00"
                        }
                    ]
                },
                {
                    "ColData": [
                        {
                            "id": "48",
                            "value": "PG&E"
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": ""
                        },
                        {
                            "value": "86.44"
                        },
                        {
                            "value": "86.44"
                        }
                    ]
                },
                {
                    "group": "GrandTotal",
                    "type": "Section",
                    "Summary": {
                        "ColData": [
                            {
                                "value": "TOTAL"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "-46.00"
                            },
                            {
                                "value": "0.00"
                            },
                            {
                                "value": "1287.67"
                            },
                            {
                                "value": "1241.67"
                            }
                        ]
                    }
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "Vendor",
                    "ColTitle": ""
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Current"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "1 - 30"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "31 - 60"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "61 - 90"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "91 and over"
                },
                {
                    "ColType": "Money",
                    "ColTitle": "Total"
                }
            ]
        }
    }
    return ap_aging_detail


@app.get("/reports/account_list_detail", tags=["Reports"])
async def query_account_list_detail(accounting_method: Optional[str] = None,
                                    start_period: Optional[str] = None,
                                    end_period: Optional[str] = None,
                                    date_macro: Optional[str] = None,
                                    sort_order: Optional[str] = None,
                                    summarize_column_by: Optional[str] = None):
    account_list_detail = {
        "Header": {
            "ReportName": "AccountList",
            "Currency": "USD",
            "Option": [
                {
                    "Name": "NoReportData",
                    "Value": "false"
                }
            ],
            "Time": "2022-03-08T11:56:36-08:00"
        },
        "Rows": {
            "Row": [
                {
                    "ColData": [
                        {
                            "value": "Billable Expense Income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Design income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Discounts given"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Fees Billed"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Job Materials"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Job Materials:Decks and Patios"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Job Materials:Fountains and Garden Lighting"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Job Materials:Plants and Soil"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Job Materials:Sprinklers and Drip Systems"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Labor"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Labor:Installation"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Landscaping Services:Labor:Maintenance and Repair"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Other Income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Pest Control Services"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Refunds-Allowances"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Sales of Product Income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Services"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Shipping Income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Unapplied Cash Payment Income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                },
                {
                    "ColData": [
                        {
                            "value": "Uncategorized Income"
                        },
                        {
                            "value": "Income"
                        }
                    ],
                    "type": "Data"
                }
            ]
        },
        "Columns": {
            "Column": [
                {
                    "ColType": "account_name",
                    "ColTitle": "Account"
                },
                {
                    "ColType": "account_type",
                    "ColTitle": "Type"
                }
            ]
        }
    }
    return account_list_detail
